{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About me","text":"<p>Hi there , this is Link Chen .</p>"},{"location":"#github-stats-card","title":"GitHub Stats Card","text":"<p>Provided by github-readme-stats</p> <p> </p>"},{"location":"#education","title":"Education","text":"<ul> <li> <p> Master of Science (MSc)</p> <p></p> <p>The University of Hong Kong</p> <ul> <li>Pokfulam, Hong Kong, China</li> <li>2022.09 - 2023.11</li> <li>MSc in Computer Science</li> <li>Supervised by Hengshuang Zhao </li> </ul> </li> <li> <p> Bachelor of Engineering (BEng)</p> <p></p> <p>Suzhou University of Science and Technology</p> <ul> <li>Suzhou, Jiangsu, China</li> <li>2018.09 - 2022.06</li> <li>BEng in Computer Science and Technology</li> <li>Supervised By Weizhong Lu</li> </ul> </li> </ul>"},{"location":"#pageviews","title":"Pageviews","text":"<p>Provided by ClustrMaps</p>"},{"location":"index.zh/","title":"\u5173\u4e8e\u6211","text":"<p>\u4f60\u597d\u5440 \uff0c\u6211\u662f Link Chen \u3002</p>"},{"location":"index.zh/#github","title":"GitHub \u7edf\u8ba1","text":"<p>\u7531 github-readme-stats \u63d0\u4f9b</p> <p> </p>"},{"location":"index.zh/#_2","title":"\u6559\u80b2\u80cc\u666f","text":"<ul> <li> <p> \u7406\u5b66\u7855\u58eb</p> <p></p> <p>\u9999\u6e2f\u5927\u5b66</p> <ul> <li>\u4e2d\u56fd\u9999\u6e2f\u8584\u6276\u6797</li> <li>2022.09 - 2023.11</li> <li>\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u7406\u5b66\u7855\u58eb</li> <li>\u5bfc\u5e08 Hengshuang Zhao </li> </ul> </li> <li> <p> \u5de5\u5b66\u5b66\u58eb</p> <p></p> <p>\u82cf\u5dde\u79d1\u6280\u5927\u5b66</p> <ul> <li>\u4e2d\u56fd\u6c5f\u82cf\u7701\u82cf\u5dde\u5e02</li> <li>2018.09 - 2022.06</li> <li>\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\uff0c\u5de5\u5b66\u5b66\u58eb</li> <li>\u5bfc\u5e08 \u9646\u536b\u5fe0</li> </ul> </li> </ul>"},{"location":"index.zh/#_3","title":"\u9875\u9762\u8bbf\u95ee\u91cf","text":"<p>\u7531 ClustrMaps \u63d0\u4f9b</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2019/02/28/java-%E6%89%93%E5%8D%B0%E5%AE%9E%E5%BF%83%E7%A9%BA%E5%BF%83%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E8%8F%B1%E5%BD%A2/","title":"Java \u6253\u5370\u5b9e\u5fc3\u3001\u7a7a\u5fc3\u7684\u4e09\u89d2\u5f62\u548c\u83f1\u5f62","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p>"},{"location":"blog/2019/02/28/java-%E6%89%93%E5%8D%B0%E5%AE%9E%E5%BF%83%E7%A9%BA%E5%BF%83%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E8%8F%B1%E5%BD%A2/#1","title":"1. \u5b9e\u5fc3\u4e09\u89d2\u5f62","text":"<pre><code>import java.util.Scanner;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        int rows;\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input rows:\");\n        rows = sc.nextInt();\n        sc.close();\n        for (int i = 1; i &lt;= rows; i++) {//\u63a7\u5236\u6253\u5370\u884c\u6570\n            for (int j = 1; j &lt;= rows - i; j++) {//\u63a7\u5236\u6bcf\u884c\u6253\u5370\u7a7a\u683c\u6570\n                System.out.print(\" \");\n            }\n            for (int j = 1; j &lt;= i * 2 - 1; j++) {//\u63a7\u5236\u6253\u5370\u661f\u53f7\u6570\n                System.out.print(\"*\");\n            }\n            System.out.println();//\u6bcf\u6253\u4e00\u884c\uff0c\u6362\u884c\n        }\n    }\n\n}\n</code></pre>"},{"location":"blog/2019/02/28/java-%E6%89%93%E5%8D%B0%E5%AE%9E%E5%BF%83%E7%A9%BA%E5%BF%83%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E8%8F%B1%E5%BD%A2/#2","title":"2. \u7a7a\u5fc3\u4e09\u89d2\u5f62","text":"<pre><code>import java.util.Scanner;\n\npublic class Test {\n    public static void main(String[] args) {\n        int rows;\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input rows:\");\n        rows = sc.nextInt();\n        sc.close();\n        for (int i = 1; i &lt;= rows; i++) {\n            for (int j = 1; j &lt;= rows - i; j++) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j &lt;= 2 * i - 1; j++) {\n                if (i == 1 || i == rows) { // \u5982\u679c\u662f\u7b2c\u4e00\u884c\u6216\u6700\u540e\u4e00\u884c\uff0c\u6253\u5370\u6240\u6709\u661f\u53f7\n                    System.out.print(\"*\");\n                } else if (j == 1 || j == 2 * i - 1) { // \u5982\u679c\u662f\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6216\u8005\u6700\u540e\u4e00\u4e2a\uff0c\u6253\u5370\u661f\u53f7\n                    System.out.print(\"*\");\n                } else { // \u5176\u4f59\u6253\u5370\u7a7a\u683c\n                    System.out.print(\" \");\n                }\n            }\n            System.out.println();\n        }\n    }\n}\n</code></pre>"},{"location":"blog/2019/02/28/java-%E6%89%93%E5%8D%B0%E5%AE%9E%E5%BF%83%E7%A9%BA%E5%BF%83%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E8%8F%B1%E5%BD%A2/#3","title":"3. \u5b9e\u5fc3\u83f1\u5f62","text":"<pre><code>import java.util.Scanner;\n\npublic class Test {\n    public static void main(String[] args) {\n        int rows;\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input odd rows:\");// \u53ea\u80fd\u662f\u5947\u6570\u884c\n        rows = (sc.nextInt() + 1) / 2;// \u4e0a\u534a\u90e8\u5206\u884c\u6570\n        sc.close();\n        for (int i = 1; i &lt;= rows; i++) {\n            for (int j = 1; j &lt;= rows - i; j++) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j &lt;= 2 * i - 1; j++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n        for (int i = rows - 1; i &gt;= 1; i--) { // \u4e0b\u534a\u90e8\u5206\u4e0d\u53ef\u91cd\u590d\u6253\u5370\u4e0a\u534a\u90e8\u5206\u6700\u540e\u4e00\u884c\uff0ci=rows-1)\n            for (int j = 1; j &lt;= rows - i; j++) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j &lt;= 2 * i - 1; j++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }\n}\n</code></pre>"},{"location":"blog/2019/02/28/java-%E6%89%93%E5%8D%B0%E5%AE%9E%E5%BF%83%E7%A9%BA%E5%BF%83%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E8%8F%B1%E5%BD%A2/#4","title":"4. \u7a7a\u5fc3\u83f1\u5f62","text":"<pre><code>import java.util.Scanner;\n\npublic class Test {\n    public static void main(String[] args) {\n        int rows;\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input odd rows:\");// \u53ea\u80fd\u662f\u5947\u6570\u884c\n        rows = (sc.nextInt() + 1) / 2;// \u4e0a\u534a\u90e8\u5206\u884c\u6570\n        sc.close();\n        sc.close();\n        for (int i = 1; i &lt;= rows; i++) {\n            for (int j = 1; j &lt;= rows - i; j++) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j &lt;= 2 * i - 1; j++) {\n                if (i == 1) {\n                    System.out.print(\"*\");\n                } else if (j == 1 || j == 2 * i - 1) {\n                    System.out.print(\"*\");\n                } else {\n                    System.out.print(\" \");\n                }\n            }\n            System.out.println();\n        }\n        for (int i = rows - 1; i &gt;= 1; i--) {// \u6b64\u5904\u53ea\u9700i=rows-1\u5373\u53ef\n            for (int j = 1; j &lt;= rows - i; j++) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j &lt;= 2 * i - 1; j++) {\n                if (i == 1) {\n                    System.out.print(\"*\");\n                } else if (j == 1 || j == 2 * i - 1) {\n                    System.out.print(\"*\");\n                } else {\n                    System.out.print(\" \");\n                }\n            }\n            System.out.println();\n        }\n    }\n}\n</code></pre>"},{"location":"blog/2019/04/10/java-%E9%80%86%E5%BA%8F%E8%BE%93%E5%87%BA%E6%95%B4%E6%95%B0/","title":"Java \u9006\u5e8f\u8f93\u51fa\u6574\u6570","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u9898\u76ee\u8981\u6c42\uff1a\u7f16\u5199\u65b9\u6cd5<code>reverseDigit</code>\uff0c\u5c06\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u53cd\u5411\u8fd4\u56de\u8be5\u6570\u5b57\u3002\u4f8b\u5982<code>reverseDigit(123)</code>\u7684\u503c\u662f<code>321</code>\u3002\u540c\u65f6\u7f16\u5199\u7a0b\u5e8f\u6d4b\u8bd5\u6b64\u65b9\u6cd5\u3002</p> <p>\u8bf4\u660e\uff1a10 \u7684\u500d\u6570\u7684\u9006\u5e8f\uff0c\u5747\u4ee5\u5b9e\u9645\u7ed3\u679c\u4e3a\u51c6\uff0c\u5982 100 \u7684\u9006\u5e8f\u4e3a 1\u3002\u6b64\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u8d1f\u6570\u7684\u9006\u5e8f\u8f93\u51fa\u3002</p> <pre><code>import java.util.Scanner;\n\npublic class Test {\n    static int reverseDigit(int n) {\n        int result = n, count = 1;        //\u5148\u5c06n\u8d4b\u503c\u7ed9result\uff0c\u7528count\u8ba1\u6570\u4ee5\u4fbf\u540e\u7eed\u6570\u7ec4\u64cd\u4f5c\n        while ((result /= 10) != 0) {    //\u4f7f\u7528while\u5faa\u73af\uff0c\u5bf9result\u8fdb\u884c\u966410\u53d6\u6574\u64cd\u4f5c\n            count++;                    //\u5982\u679c\u53d6\u6574\u540e\u4e0d\u4e3a0\uff0c\u5219count\u52a0\u4e00\n        }\n        int[] list = new int[count];    //\u4f7f\u7528\u6570\u7ec4\u5b58\u653en\u7684\u6bcf\u4e00\u4f4d\uff0c\u957f\u5ea6\u4e3acount\uff0c\u6ce8\u610f\u6b64\u5904result\u5df2\u7ecf\u7b49\u4e8e0\n        for (int i = 0; i &lt; count; i++) {    //\u5faa\u73afcount\u6b21\n            list[i] = n % 10;            //\u5b58\u653en\u7684\u6bcf\u4e00\u4f4d\uff0c\u4ece\u540e\u5f80\u524d\uff0c\u9006\u5e8f\u5b58\u653e\n            result += list[i] * Math.pow(10, count - 1 - i); //\u4f7f\u7528\u5e42\u8fd0\u7b97\uff0c\u5e95\u6570\u4e3a10\uff0c\u6307\u6570\u4e3acount-1-i\n            n = n / 10;                    //n\u966410\u53d6\u6574\n        }\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int n;\n        System.out.println(\"Please input a int:\");\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        System.out.printf(\"The reverse is %d !\\n\", reverseDigit(n));\n        sc.close();\n    }\n}\n</code></pre>"},{"location":"blog/2019/10/13/2019-10-13/","title":"\u3010\u7ebf\u6027\u8868\u57fa\u7840\u3011\u987a\u5e8f\u8868\u548c\u5355\u94fe\u8868\u7684\u63d2\u5165\u3001\u5220\u9664\u7b49\u57fa\u672c\u64cd\u4f5c\u3010Java \u7248\u3011","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u672c\u6587\u8868\u8ff0\u4e86\u7ebf\u6027\u8868\u53ca\u5176\u57fa\u672c\u64cd\u4f5c\u7684\u4ee3\u7801\u3010Java \u5b9e\u73b0\u3011</p> <p>\u53c2\u8003\u4e66\u7c4d \uff1a\u300a\u6570\u636e\u7ed3\u6784 \u2014\u2014Java \u8bed\u8a00\u63cf\u8ff0\u300b/\u5218\u5c0f\u6676 \uff0c\u675c\u9009\u4e3b\u7f16</p> <p>\u7ebf\u6027\u8868\u9700\u8981\u7684\u57fa\u672c\u529f\u80fd\u6709\uff1a\u52a8\u6001\u5730\u589e\u957f\u6216\u6536\u7f29\uff1b\u5bf9\u7ebf\u6027\u8868\u7684\u4efb\u4f55\u6570\u636e\u5143\u7d20\u8fdb\u884c\u8bbf\u95ee\u548c\u67e5\u627e\uff1b\u5728\u7ebf\u6027\u8868\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u8fdb\u884c\u6570\u636e\u5143\u7d20\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff1b\u6c42\u7ebf\u6027\u8868\u4e2d\u6307\u5b9a\u6570\u636e\u5143\u7d20\u7684\u524d\u9a71\u548c\u540e\u7ee7\u7b49\u7b49\u3002</p> <p>\u9996\u5148\u63cf\u8ff0\u7ebf\u6027\u8868\u7684\u62bd\u8c61\u7c7b\u578b\uff0c\u6211\u4eec\u4f7f\u7528 Java \u63a5\u53e3 interface\uff1a</p> <p>Ilist.java:</p> <pre><code>package liner_list;\n\npublic interface IList\n{\n    public void clear();\n    public boolean isEmpty();\n    public int length();\n    public Object get(int i) throws Exception;\n    public void insertAt(int i,Object x) throws Exception;\n    public void remove(int i) throws Exception;\n    public int indexOf(Object x);\n    public void display();\n}\n</code></pre> <p>\u5176\u6b21\u63cf\u8ff0\u987a\u5e8f\u8868\uff0c\u5176\u7279\u70b9\u6709\uff1a\u5728\u7ebf\u6027\u8868\u4e2d\u7684\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u6570\u636e\u5143\u7d20\uff0c\u5728\u7269\u7406\u5b58\u50a8\u4f4d\u7f6e\u4e0a\u4e5f\u662f\u76f8\u90bb\u7684\uff1b\u5b58\u50a8\u5bc6\u5ea6\u9ad8\uff0c\u4f46\u9700\u8981\u9884\u5148\u5206\u914d\u201d\u8db3\u591f\u5e94\u7528\u201c\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u8fd9\u53ef\u80fd\u5c06\u4f1a\u9020\u6210\u5b58\u50a8\u7a7a\u95f4\u7684\u6d6a\u8d39\uff1b\u4fbf\u4e8e\u968f\u673a\u5b58\u50a8\uff1b\u4e0d\u4fbf\u4e8e\u63d2\u5165\u548c\u5220\u9664\uff0c\u56e0\u4e3a\u5728\u987a\u5e8f\u8868\u4e2d\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u4f1a\u5f15\u8d77\u5927\u91cf\u6570\u636e\u5143\u7d20\u7684\u79fb\u4f4d\u3002\u6211\u4eec\u7528 SqList \u7c7b\u63cf\u8ff0\u987a\u5e8f\u8868\uff1a</p> <p>SqList.java\uff1a</p> <pre><code>package liner_list;\n\n// \u89c4\u5b9a\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570i\u90fd\u4e3a\u987a\u5e8f\u8868\u5143\u7d20\u7684\u7d22\u5f15\uff08\u4e0b\u6807\uff09\npublic class SqList implements IList\n{\n    public Object[] listItem; // \u987a\u5e8f\u8868\u5b58\u50a8\u7a7a\u95f4\n    public int curLen; // \u7ebf\u6027\u8868\u7684\u5f53\u524d\u957f\u5ea6\n\n    public SqList(int maxSize)\n    {\n        listItem = new Object[maxSize]; // \u4e3a\u987a\u5e8f\u8868\u5206\u914dmaxSize\u4e2a\u5b58\u50a8\u5355\u5143\n        curLen = 0; // \u7f6e\u5f53\u524d\u957f\u5ea6\u4e3a0\n    }\n\n    public void clear()\n    {\n        curLen = 0; // \u7f6e\u5f53\u524d\u957f\u5ea6\u4e3a0\uff0c\u5373\u89c4\u5b9a\u4e3a\u6e05\u7a7a\u987a\u5e8f\u8868\uff0c\u4f46\u662f\u5185\u5b58\u4e2d\u8fd8\u6709\u6570\u636e\u5b58\u5728\n    }\n\n    public boolean isEmpty()\n    {\n        return curLen == 0;\n    }\n\n    public int length()\n    {\n        return curLen; // \u8fd4\u56de\u5f53\u524d\u957f\u5ea6\n    }\n\n    public Object get(int i) throws Exception // \u5f97\u5230\u4e0b\u6807\u4e3ai\u7684\u5143\u7d20\uff0c\u540c\u65f6\u5224\u65ad\u5f02\u5e38\n    {\n        if (i &gt;= curLen || i &lt; 0) // \u7d22\u5f15\u8d8a\u754c\uff0c0&lt;=index&lt;=curLen\n        {\n            throw new Exception(\"Argument 'i' is out of range!\");\n        }\n        return listItem[i];\n    }\n\n    public void insertAt(int i, Object x) throws Exception // \u5728\u4e0b\u8868\u4e3ai\u7684\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20x\uff0c\u540c\u65f6\u5224\u65ad\u5f02\u5e38\n    {\n        if (curLen == listItem.length) // \u5224\u65ad\u8868\u6ee1\n        {\n            throw new Exception(\"SqList is full!\");\n        }\n        if (i &gt; curLen || i &lt; 0) // \u7d22\u5f15\u8d8a\u754c\uff0c\u53ef\u4ee5\u5728curLen\u7684\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165\n        {\n            throw new Exception(\"Argument 'i' is out of range!\");\n        }\n        for (int j = curLen; j &gt; i; j--) // j\u4ececurLen\u7684\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5373\u5f53\u524d\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ece\u800c\u4f7f\u5f97i\u4f4d\u7f6e\u53ca\u4ee5\u540e\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u5411\u540e\u79fb\u4e00\u4f4d\n        {\n            listItem[j] = listItem[j - 1];\n        }\n        listItem[i] = x; // \u5c06x\u5143\u7d20\u63d2\u5165i\u4f4d\u7f6e\n        curLen++; // \u63d2\u5165\u540e\u8868\u957f\u52a0\u4e00\n    }\n\n    public void remove(int i) throws Exception\n    {\n        if (i &gt;= curLen || i &lt; 0) // i\u5c0f\u4e8e0\u6216\u8005\u5927\u4e8e\u7b49\u4e8e\u8868\u957f\u65f6\u629b\u51fa\u5f02\u5e38\n        {\n            throw new Exception(\"Argument 'i' is out of range!\");\n        }\n        for (int j = i; j &lt; curLen - 1; j++) // \u4ecei\u4f4d\u7f6e\u5f00\u59cb\u5411\u540e\uff0c\u4e0d\u80fd\u4ece\u6700\u540e\u5f00\u59cb\uff0c\u5426\u5219\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5c06\u8986\u76d6\u6240\u6709\u5143\u7d20\uff0c\u82e5\u60f3\u4ece\u540e\u5411\u524d\uff0c\u5fc5\u987b\u5c06\u88ab\u8986\u76d6\u7684\u5143\u7d20\u4fdd\u7559\u7ed9\u4e0b\u4e00\u4e2a\u5143\u7d20\n        {\n            listItem[j] = listItem[j + 1];\n        }\n        curLen--; // \u5220\u9664\u5b8c\u540ecurLen\u51cf\u4e00\n    }\n\n    public int indexOf(Object x) // \u89c4\u5b9a\u8fd4\u56de-1\u8868\u793a\u672a\u627e\u5230\u5143\u7d20x\n    {\n        for (int i = 0; i &lt; curLen; i++)\n        {\n            if (listItem[i].equals(x))\n            {\n                return i;\n            }\n        }\n        return -1;\n//      \u4e66\u672c\u4ee3\u7801\uff0c\u6548\u679c\u76f8\u540c\n//      int j = 0;\n//      while (j &lt; curLen &amp;&amp; !listItem[j].equals(x))\n//      {\n//          j++;\n//      }\n//      if (j &lt; curLen)\n//      {\n//          return j;\n//      } else\n//      {\n//          return -1;\n//      }\n    }\n\n    public void display() // \u8f93\u51fa\u987a\u5e8f\u8868\u4e2d\u5168\u90e8\u5143\u7d20\n    {\n        System.out.println(\"****** SqList ******\");\n        for (int i = 0; i &lt; curLen; i++)\n        {\n            System.out.print(listItem[i] + \" \");\n        }\n        System.out.println();\n        System.out.println(\"********************\");\n    }\n}\n</code></pre> <p>\u63a5\u7740\u6d4b\u8bd5\u6211\u4eec\u7684\u987a\u5e8f\u8868\uff0c\u4f7f\u7528 SqListTest \u7c7b\u6765\u505a\u6d4b\u8bd5\uff1a</p> <p>SqListTest.java\uff1a</p> <pre><code>package liner_list;\n\nimport java.util.Scanner;\n\npublic class SqListTest\n{\n    public static void main(String[] args) throws Exception\n    {\n        SqList sq1 = new SqList(10);\n        sq1.insertAt(0, \"a0\");\n        sq1.insertAt(1, \"a1\");\n        sq1.insertAt(2, \"a2\");\n        sq1.insertAt(3, \"a3\");\n        sq1.insertAt(4, \"a4\");\n        sq1.insertAt(5, \"a5\");\n        int index = sq1.indexOf(\"a2\");\n        if (index != -1)\n        {\n            System.out.println(\"a2's index is \" + index + \"!\");\n        } else\n        {\n            System.out.println(\"a5 is not in this SqList!\");\n        }\n        sq1.display();\n        sq1.remove(2);\n        System.out.println(\"After remove:\");\n        sq1.display();\n        SqList sq2 = new SqList(10);\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input element:\");\n        for (int i = 0; i &lt; 8; i++)\n        {\n            sq2.insertAt(i, sc.next());\n        }\n        sc.close();\n        sq2.display();\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u6211\u4eec\u7684\u6d4b\u8bd5\u7c7b\uff0c\u5f97\u5230\u4ee5\u4e0b\u6d4b\u8bd5\u7ed3\u679c\uff1a</p> <p></p> <p>\u7136\u540e\u63cf\u8ff0\u5355\u94fe\u8868\uff0c\u6ce8\u610f\uff1a\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u3002\u8fd9\u91cc\u603b\u7ed3\u4ee5\u4e0b\u5173\u4e8e\u5934\u6307\u9488\u548c\u5934\u7ed3\u70b9\u7684\u95ee\u9898\uff1a\u9996\u5148\u8981\u6e05\u695a\uff0chead \u5c31\u662f\u5934\u6307\u9488\uff0c\u6bcb\u5eb8\u7f6e\u7591\uff1b\u5982\u679c\u6709\u5934\u7ed3\u70b9\u7684\u8bdd\uff0chead \u4e5f\u5934\u7ed3\u70b9\uff0c\u8fd9\u91cc\u5934\u6307\u9488\u5c31\u662f\u5934\u7ed3\u70b9\uff0c\u4e00\u822c\u8bf4\u6210\u5934\u6307\u9488\u6307\u5411\u5934\u7ed3\u70b9\uff0c\u800c head.next \u662f\u4e0b\u6807\u4e3a 0 \u7684\u5143\u7d20\uff0c\u89c4\u5b9a head \u662f\u4e0b\u6807\u4e3a-1 \u7684\u5143\u7d20\uff1b\u5982\u679c\u6ca1\u6709\u5934\u7ed3\u70b9\u7684\u8bdd\uff0chead \u672c\u662f\u5c31\u662f\u4e0b\u6807\u4e3a 0 \u7684\u5143\u7d20\uff0c\u8fd9\u91cc\u6ca1\u6709\u5934\u7ed3\u70b9\uff0c\u4f46\u662f head \u8fd8\u662f\u5934\u6307\u9488\u3002\u4e0b\u9762\u6211\u4eec\u6765\u63cf\u8ff0\u7ed3\u70b9\u7c7b\uff0c\u5b83\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0cdata \u6570\u636e\u57df\u548c next \u6307\u9488\u57df\uff1a</p> <p>Node.java:</p> <pre><code>package liner_list;\n\npublic class Node\n{\n    public Object data; // \u6570\u636e\u57df\n    public Node next; // \u6307\u9488\u57df\n\n    public Node() // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5\n    {\n        this(null, null);\n    }\n\n    public Node(Object data) // \u5e26\u4e00\u4e2a\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\n    {\n        this(data, null);\n    }\n\n    public Node(Object data, Node next) // \u5e26\u4e24\u4e2a\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\n    {\n        this.data = data;\n        this.next = next;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u7528 LinkList \u7c7b\u6765\u63cf\u8ff0\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\uff1a LinkList.java\uff1a</p> <pre><code>package liner_list;\n\nimport java.util.Scanner;\n\n//\u5173\u4e8e\u5934\u7ed3\u70b9\u4e0e\u5934\u6307\u9488\u7684\u95ee\u9898\n//\u9996\u5148\u8981\u6e05\u695a\uff0chead\u5c31\u662f\u5934\u6307\u9488\uff0c\u6bcb\u5eb8\u7f6e\u7591\n//\u5982\u679c\u6709\u5934\u7ed3\u70b9\u7684\u8bdd\uff0chead\u4e5f\u5934\u7ed3\u70b9\uff0c\u8fd9\u91cc\u5934\u6307\u9488\u5c31\u662f\u5934\u7ed3\u70b9\uff0c\u4e00\u822c\u8bf4\u6210\u5934\u6307\u9488\u6307\u5411\u5934\u7ed3\u70b9\uff0c\u800chead.next\u662f\u4e0b\u6807\u4e3a0\u7684\u5143\u7d20\uff0c\u89c4\u5b9a head\u662f\u4e0b\u6807\u4e3a-1\u7684\u5143\u7d20\n//\u5982\u679c\u6ca1\u6709\u5934\u7ed3\u70b9\u7684\u8bdd\uff0chead\u672c\u662f\u5c31\u662f\u4e0b\u6807\u4e3a0\u7684\u5143\u7d20\uff0c\u8fd9\u91cc\u6ca1\u6709\u5934\u7ed3\u70b9\uff0c\u4f46\u662fhead\u8fd8\u662f\u5934\u6307\u9488\n//\u5efa\u8bae\u5199\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\uff0c\u6b64\u7c7b\u5c31\u662f\u4e00\u4e2a\u5178\u4f8b\npublic class LinkList implements IList\n{\n    public Node head;\n\n    public LinkList() // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u53ea\u6784\u5efa\u5934\u6307\u9488\n    {\n        head = new Node();\n    }\n\n    public LinkList(int len, boolean Order) throws Exception // \u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5206\u522b\u4e3a\u8868\u957f\u548c\u63d2\u5165\u7684\u65b9\u5f0f\uff0c\u89c4\u5b9atrue\u8868\u793a\u5c3e\u63d2\u6cd5\uff0cflase\u8868\u793a\u5934\u63d2\u6cd5\n    {\n        this();\n        if (Order)\n        {\n            createAtEnd(len);\n        } else\n        {\n            createAtHead(len);\n        }\n    }\n\n    public void createAtHead(int n) throws Exception // \u5934\u63d2\u6cd5\n    {\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input element:\");\n        for (int i = 0; i &lt; n; i++)\n        {\n            insertAt(0, sc.next());\n        }\n//      sc.close();     // \u4e0d\u8981\u5173\u95ed\u8f93\u5165\u6d41\n//      display();\n    }\n\n    public void createAtEnd(int n) throws Exception // \u5c3e\u63d2\u6cd5\n    {\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Please input element:\");\n        for (int i = 0; i &lt; n; i++)\n        {\n            insertAt(length(), sc.next());\n        }\n//      sc.close();     // \u4e0d\u8981\u5173\u95ed\u8f93\u5165\u6d41\n//      display();\n    }\n\n    @Override\n    public void clear() // \u7f6e\u7a7a\u94fe\u8868\n    {\n        head.data = null;\n        head.next = null;\n    }\n\n    @Override\n    public boolean isEmpty() // \u94fe\u8868\u5224\u7a7a\n    {\n        return head.next == null;\n    }\n\n    @Override\n    public int length() // \u8fd4\u56de\u94fe\u8868\u957f\u5ea6\n    {\n        Node p = head.next; // p\u6307\u5411\u9996\u7ed3\u70b9\n        int length = 0;\n        while (p != null)\n        {\n            p = p.next;\n            length++;\n        }\n        return length;\n    }\n\n    @Override\n    public Object get(int i) throws Exception\n    {\n        Node p = head.next;\n        int j = 0;\n        while (p != null &amp;&amp; j &lt; i) // \u4ece\u9996\u7ed3\u70b9\u5f00\u59cb\u5411\u540e\u67e5\u627e\uff0c\u76f4\u5230p\u6307\u5411\u7b2ci\u4e2a\u7ed3\u70b9\u6216\u8005p\u4e3a\u7a7a\n        {\n            p = p.next; // \u6307\u9488\u540e\u79fb\n            j++; // \u8ba1\u6570\u52a01\n        }\n        if (i &lt; 0 || p == null) // i\u5c0f\u4e8e0\u6216\u8005\u5927\u4e8e\u8868\u957f\u51cf1\u65f6\u629b\u51fa\u5f02\u5e38\n        {\n            throw new Exception(\"Argument 'i' is out of range!\");\n        }\n        return p.data;\n    }\n\n    @Override\n    public int indexOf(Object x) // \u89c4\u5b9a-1\u8868\u793a\u4e0d\u5728LinkList\u5f53\u4e2d\n    {\n        Node p = head.next;\n        int index = 0;\n        while (p != null &amp;&amp; !p.data.equals(x))\n        {\n            p = p.next;\n            index++;\n        }\n        if (p != null)\n        {\n            return index;\n        } else\n        {\n            return -1;\n        }\n    }\n\n    @Override\n    public void insertAt(int i, Object x) throws Exception\n    {\n        Node p = head; // \u63d2\u5165\u65f6\u4ece\u5934\u7ed3\u70b9\u5f00\u59cb\uff0c\u56e0\u4e3a\u53ef\u4ee5\u63d2\u5165\u5728\u4e0b\u68070\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u63d2\u5165\u5728\u4e0b\u6807\u4e3a\u8868\u957f\u4f4d\u7f6e\n        int j = -1;\n        while (p != null &amp;&amp; j &lt; i - 1) // \u627e\u51fa\u4e0b\u6807\u4e3ai-1\u7684\u7ed3\u70b9\uff0c\u5373i\u7ed3\u70b9\u7684\u524d\u9a71\n        {\n            p = p.next;\n            j++;\n        }\n        if (i &lt; 0 || p == null) // i\u5c0f\u4e8e0\u6216\u8005i\u5927\u4e8e\u8868\u957f\u65f6\u629b\u51fa\u5f02\u5e38\n        {\n            throw new Exception(\"Argument 'i' is out of range!\");\n        }\n        Node s = new Node(x);\n        s.next = p.next;\n        p.next = s;\n    }\n\n    @Override\n    public void remove(int i) throws Exception\n    {\n        Node p = head;\n        int j = -1;\n        while (p != null &amp;&amp; j &lt; i - 1) // \u627e\u5230\u4e0b\u6807\u4e3ai-1\u7684\u7ed3\u70b9\uff0c\u5373i\u7ed3\u70b9\u7684\u524d\u9a71\n        {\n            p = p.next;\n            j++;\n        }\n        if (i &lt; 0 || p.next == null) // \u629b\u51fa\u6761\u4ef6\u4e3ai\u5c0f\u4e8e0\u6216\u8005i\u5927\u4e8e\u8868\u957f-1\uff0c\u6240\u4ee5\u6b64\u5904\u4e3ap.next==null\n        {\n            throw new Exception(\"Argument 'i' is out of range!\");\n        }\n        p.next = p.next.next;\n    }\n\n    @Override\n    public void display()\n    {\n        Node p = head.next;\n        System.out.println(\"****** LinkList ******\");\n        while (p != null)\n        {\n            System.out.print(p.data.toString() + \" \");\n            p = p.next;\n        }\n        System.out.println();\n        System.out.println(\"*********************\");\n    }\n\n}\n</code></pre> <p>\u6700\u540e\u6d4b\u8bd5\u6211\u4eec\u7684\u5355\u94fe\u8868\uff0c\u4f7f\u7528 LinkListTest \u7c7b\u6765\u505a\u6d4b\u8bd5\uff1a</p> <p>LinkListTest.java</p> <pre><code>package liner_list;\n\npublic class LinkListTest\n{\n    public static void main(String[] args) throws Exception\n    {\n        LinkList linkList = new LinkList(10, true);\n        linkList.remove(0);\n        linkList.remove(1);\n        linkList.remove(linkList.length() - 1);\n        System.out.println(\"After remove:\");\n        linkList.display();\n        linkList.insertAt(linkList.length(), \"a9\");\n        System.out.println(\"After insert:\");\n        linkList.display();\n        int index = linkList.indexOf(\"a2\");\n        if (index != -1)\n        {\n            System.out.println(\"a2's index is \" + index + \"!\");\n        } else\n        {\n            System.out.println(\"a2 is not in this LinkList!\");\n        }\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u6211\u4eec\u7684\u6d4b\u8bd5\u7c7b\uff0c\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a</p> <p></p> <p>\u4ee5\u4e0a\u4fbf\u662f\u7ebf\u6027\u8868\u4e2d\u987a\u5e8f\u8868\u548c\u5355\u94fe\u8868\u6700\u57fa\u7840\u7684\u4ee3\u7801\u63cf\u8ff0\uff0c\u7b97\u6cd5\u601d\u60f3\u672c\u6587\u4e2d\u6ca1\u6709\u5199\u5230\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u770b\u524d\u9762\u8bf4\u7684\u90a3\u672c\u53c2\u8003\u4e66\u7c4d\u3002\u6b64\u7cfb\u5217\u540e\u9762\u4f1a\u9646\u7eed\u4ecb\u7ecd\u66f4\u591a\u6709\u5173\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\uff0c\u4e5f\u4f1a\u66f4\u65b0\u4e00\u4e9b\u5173\u4e8e\u6570\u636e\u7ed3\u6784\u7684\u7b97\u6cd5\u9898\u76ee\u4f8b\u5b50\uff0c\u8c22\u8c22\u5927\u5bb6\u652f\u6301\uff01</p>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/","title":"\u3010\u7ebf\u6027\u8868\u57fa\u7840\u3011\u57fa\u4e8e\u7ebf\u6027\u8868\u7684\u7b80\u5355\u7b97\u6cd5\u3010Java \u7248\u3011","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u672c\u6587\u63cf\u8ff0\u4e86\u57fa\u4e8e\u7ebf\u6027\u8868\u7684\u7b80\u5355\u7b97\u6cd5\u53ca\u5176\u4ee3\u7801\u3010Java \u5b9e\u73b0\u3011</p>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/#1-1","title":"1-1 \u5220\u9664\u5355\u94fe\u8868\u4e2d\u6240\u6709\u91cd\u590d\u5143\u7d20","text":"<pre><code>    // Example 1-1 \u5220\u9664\u5355\u94fe\u8868\u4e2d\u6240\u6709\u91cd\u590d\u5143\u7d20\n    private static void removeRepeat(LinkList L)\n    {\n        Node node = L.head.next; // \u9996\u7ed3\u70b9\n        while (node != null) // \u4e00\u91cd\u5faa\u73af\uff0c\u904d\u5386L\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\n        {\n//          Object data=p.data;\n            Node p = node; // q\u7ed3\u70b9\u7684\u524d\u9a71\n            Node q = p.next; // \u4e0enode\u6570\u636e\u76f8\u540c\u7684\u7ed3\u70b9\n            while (q != null) // \u4e8c\u91cd\u5faa\u73af\uff0c\u5bfb\u627e\u76f8\u540c\u7ed3\u70b9\n            {\n                if (node.data.equals(q.data))\n                {\n                    p.next = q.next; // \u5220\u9664q\u7ed3\u70b9\n                } else\n                {\n                    p = p.next; // \u4e0d\u76f8\u540c\u65f6p\u7ed3\u70b9\u540e\u79fb\uff0c\u76f8\u540c\u65f6p\u5f85\u5728\u539f\u4f4d\u7b49\u5f85\u4e0b\u4e00\u6b21\u6bd4\u8f83\n                }\n                q = q.next; // \u65e0\u8bba\u76f8\u4e0d\u76f8\u540cq\u7ed3\u70b9\u90fd\u8981\u540e\u79fb\n            }\n            node = node.next;\n        }\n    }\n</code></pre> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a</p> <pre><code>    // Example 1-1 \u4e66\u672c\u4ee3\u7801\n    private static void removeRepeatElem(LinkList L) throws Exception\n    {\n        Node p = L.head.next, q; // p\u4e3a\u9996\u7ed3\u70b9\n        while (p != null)\n        {\n            int order = L.indexOf(p.data); // \u8bb0\u5f55\u4e0bp\u7684\u4f4d\u7f6e\n            q = p.next;\n            while (q != null)\n            {\n                if (p.data.equals(q.data))\n                {\n                    L.remove(order + 1); // order+1\u5373\u4e3aq\u7ed3\u70b9\u7684\u4f4d\u7f6e\n                } else\n                {\n                    ++order; // \u4f7f\u5f97\u6bcf\u6b21order\u90fd\u662fq\u7ed3\u70b9\u7684\u524d\u9a71\n                }\n                q = q.next;\n            }\n            p = p.next;\n        }\n    }\n</code></pre>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/#1-2","title":"1-2 \u5220\u9664\u5355\u94fe\u8868\u6307\u5b9a\u7ed3\u70b9","text":"<p>\u5220\u9664\u6240\u6709\u6570\u636e\u4e3a x \u7684\u7ed3\u70b9\uff0c\u5e76\u8fd4\u56de\u6570\u91cf\uff0c\u7b97\u6cd5\u601d\u60f3\u4e0e 1-1 \u5dee\u4e0d\u591a</p> <pre><code>    // Example 1-2 \u5220\u9664\u6240\u6709\u6570\u636e\u4e3ax\u7684\u7ed3\u70b9\uff0c\u5e76\u8fd4\u56de\u6570\u91cf\uff0c\u7b97\u6cd5\u601d\u60f3\u4e0e1-1\u5dee\u4e0d\u591a\n    private static int removeAll(LinkList L, Object x)\n    {\n        Node p = L.head;\n        Node q = p.next;\n        int count = 0;\n        while (q != null)\n        {\n            if (q.data.equals(x))\n            {\n                p.next = q.next;\n                count++;\n            } else\n            {\n                p = p.next;\n            }\n            q = q.next;\n        }\n        return count;\n    }\n</code></pre> <p>\u6d4b\u8bd5\u6211\u4eec\u7684\u4e24\u79cd\u7b97\u6cd5\u7684\u7ed3\u679c\uff1a</p> <p>\u7b97\u6cd5 1-1\uff1a</p> <p></p> <p>\u7b97\u6cd5 1-2\uff1a</p> <p></p>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/#2-1","title":"2-1 \u987a\u5e8f\u8868\u7684\u5c31\u5730\u9006\u7f6e","text":"<p>\u8bd5\u5199\u4e00\u7b97\u6cd5\uff0c\u5b9e\u73b0\u987a\u5e8f\u8868\u7684\u5c31\u5730\u9006\u7f6e\u5373\u5229\u7528\u539f\u8868\u7684\u5b58\u50a8\u7a7a\u95f4\u5c06\u7ebf\u6027\u8868\uff08a1,a2\u2026,an\uff09\u9006\u7f6e\u4e3a\uff08an,an-1\u2026,a1\uff09</p> <pre><code>    // Example 2-1 \u5b9e\u73b0\u5bf9\u987a\u5e8f\u8868\u7684\u5c31\u5730\u9006\u7f6e\n    // \u9006\u7f6e\uff1a\u628a(a1,a2,......,an)\u53d8\u6210(an,an-1,...,a1)\n    // \u5c31\u5730\uff1a\u9006\u7f6e\u540e\u7684\u6570\u636e\u5143\u7d20\u4ecd\u5b58\u50a8\u5728\u539f\u6765\u7684\u5b58\u50a8\u7a7a\u95f4\u4e2d\n    private static void reverseSqList(SqList L)\n    {\n        for (int i = 0; i &lt; (int) (L.curLen / 2); i++)  // \u786e\u5b9a\u5faa\u73af\u6b21\u6570\uff0c\u5076\u6570\u4e3a\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u5947\u6570\u4e3a\u957f\u5ea6\u51cf\u4e00\u7684\u4e00\u534a\uff0c\u56e0\u6b64\u53d6curLen/2\u7684\u6574\u6570\n        {\n            //\u4e0b\u9762\u4e09\u4e2a\u8bed\u53e5\u5b9e\u73b0\u5c31\u5730\u9006\u7f6e\n            Object temp = L.listItem[i];\n            L.listItem[i] = L.listItem[L.curLen - 1 - i];\n            L.listItem[L.curLen - 1 - i] = temp;\n        }\n    }\n</code></pre>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/#2-2","title":"2-2 \u5355\u94fe\u8868\u7684\u5c31\u5730\u9006\u7f6e","text":"<p>\u5b9e\u73b0\u5bf9\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u7684\u5c31\u5730\u9006\u7f6e</p> <pre><code>    // Example 2-2 \u5b9e\u73b0\u5bf9\u5e26\u5934\u7ed3\u70b9\u5355\u94fe\u8868\u7684\u5c31\u5730\u9006\u7f6e\n    private static void reverseLinkList(LinkList L) throws Exception\n    {\n        Node p = L.head.next;\n        L.head.next = null;\n        while (p != null)\n        {\n            Node q=p.next;  // q\u6307\u5411p\u7684\u540e\u7ee7\uff0c\u4fdd\u7559\u4f4f\u540e\u7eed\u7ed3\u70b9\n            // \u4e0b\u9762\u4e24\u4e2a\u8bed\u53e5\u5b9e\u73b0\u5934\u63d2\u6cd5\uff0c\u5c06p\u63d2\u5165\u5728\u4f4d\u7f6e\u4e3a0\u7684\u5730\u65b9\n            p.next=L.head.next;     // p\u7684\u540e\u7ee7\u6307\u5411\u9996\u7ed3\u70b9\n            L.head.next=p;  // \u9996\u7ed3\u70b9\u6307\u5411p\n            p = q;  // p\u91cd\u65b0\u6307\u5411\u540e\u7eed\u7ed3\u70b9\n        }\n    }\n</code></pre> <p>\u6d4b\u8bd5\u7ed3\u679c\uff1a</p> <p>\u7b97\u6cd5 2-1\uff1a</p> <p></p> <p>\u7b97\u6cd5 2-2\uff1a</p> <p></p>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/#3-1","title":"3-1 \u6709\u5e8f\u5355\u94fe\u8868\u4e2d\u63d2\u5165\u5143\u7d20","text":"<p>\u5b9e\u73b0\u5728\u975e\u9012\u51cf\u7684\u6709\u5e8f\u6574\u578b\u5355\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u503c\u4e3a x \u7684\u6570\u636e\u5143\u7d20\uff0c\u5e76\u4f7f\u5355\u94fe\u8868\u4ecd\u4fdd\u6301\u6709\u5e8f</p> <pre><code>    // Example 3-1 \u5b9e\u73b0\u5728\u975e\u9012\u51cf\u7684\u6709\u5e8f\u6574\u578b\u5355\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u503c\u4e3ax\u7684\u6570\u636e\u5143\u7d20\uff0c\u5e76\u4f7f\u5355\u94fe\u8868\u4ecd\u4fdd\u6301\u6709\u5e8f\n    private static void insertOrder(LinkList L, int x)\n    {\n        Node p = L.head.next; // \u9996\u7ed3\u70b9\n        Node q = L.head; // p\u7684\u524d\u9a71\n        while (p != null &amp;&amp; Integer.valueOf(p.data.toString()) &lt; x) // \u5f53\u7ed3\u70b9p\u7684\u503c\u5927\u4e8e\u7b49\u4e8ex\u65f6\u8df3\u51fawhile\n        {\n            q = q.next;\n            p = p.next;\n        }\n        Node s = new Node(x);\n        s.next = p;\n        q.next = s;\n    }\n</code></pre>"},{"location":"blog/2019/11/09/%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95java-%E7%89%88/#3-2","title":"3-2 \u5408\u5e76\u6709\u5e8f\u94fe\u8868","text":"<p>\u5b9e\u73b0\u5c06\u4e24\u4e2a\u975e\u9012\u51cf\u94fe\u8868 LA \u548c LB \u5408\u5e76\u6392\u5217\u6210\u4e00\u4e2a\u65b0\u7684\u975e\u9012\u51cf\u94fe\u8868 LA</p> <pre><code>    // Example 3-2 \u5b9e\u73b0\u5c06\u4e24\u4e2a\u975e\u9012\u51cf\u94fe\u8868LA\u548cLB\u5408\u5e76\u6392\u5217\u6210\u4e00\u4e2a\u65b0\u7684\u975e\u9012\u51cf\u94fe\u8868LA\n    private static LinkList mergeList(LinkList LA, LinkList LB) throws Exception\n    {\n        Node pa = LA.head.next; // LA\u9996\u7ed3\u70b9\n        Node pb = LB.head.next; // LB\u9996\u7ed3\u70b9\n//      LA.head.next = null; // \u7f6e\u7a7aLA\u94fe\u8868\uff0c\u8fd9\u8bdd\u5199\u4e0e\u4e0d\u5199\u90fd\u4e0d\u5f71\u54cd\u63d2\u5165\n        Node tail = LA.head; // \u6307\u5411\u65b0\u94fe\u8868LA\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n        while (pa != null &amp;&amp; pb != null)\n        {\n            // \u4f7f\u7528\u5c3e\u63d2\u6cd5\uff0c\u6309\u7167\u975e\u9012\u51cf\u987a\u5e8f\u63d2\u5165\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u63d2\u5165\u65f6\u4e0d\u9700\u8981\u5c06pa\u6216pb\u6307\u5411null\uff0c\u56e0\u4e3a\u6700\u540e\u63d2\u5165\u7684\u7ed3\u70b9\u4e00\u5b9a\u662fnull\n            if (Integer.valueOf(pa.data.toString()) &lt; Integer.valueOf(pb.data.toString()))\n            {\n                // \u82e5pa.data\u5c0f\u4e8epb.data\u5219\u5c06pa\u63d2\u5728\u5c3e\u7ed3\u70b9\u540e\uff0c\u5e76\u4e14\u7ee7\u7eed\u6bd4\u8f83pa\u540e\u7eed\u7ed3\u70b9\uff0c\u76f4\u5230\u51fa\u73b0\u5927\u4e8e\u7b49\u4e8epb\u7684\u7ed3\u70b9\u4e3a\u6b62\n                tail.next = pa;\n                tail = pa; // tail\u540e\u79fb\n                pa = pa.next; // \u4f7f\u5f97pa\u91cd\u65b0\u6307\u5411\u540e\u7eed\u7ed3\u70b9\n            } else\n            {\n                // \u82e5pa.data\u5927\u4e8e\u7b49\u4e8epb.data\u5219\u5c06pb\u63d2\u5728pa\u7684\u524d\u9762\uff0c\u5e76\u4e14\u7ee7\u7eed\u6bd4\u8f83pb\u540e\u7eed\u7ed3\u70b9\uff0c\u76f4\u5230\u51fa\u73b0\u5927\u4e8epa\u7684\u7ed3\u70b9\u4e3a\u6b62\n                tail.next = pb;\n                tail = pb; // tail\u540e\u79fb\n                pb = pb.next; // \u4f7f\u5f97pb\u91cd\u65b0\u6307\u5411\u540e\u7eed\u7ed3\u70b9\n            }\n        }\n        tail.next = (pa != null ? pa : pb);\n        return LA;\n    }\n</code></pre> <p>\u6d4b\u8bd5\u7ed3\u679c\uff1a</p> <p>\u7b97\u6cd5 3-1\uff1a</p> <p></p> <p>\u7b97\u6cd5 3-2\uff1a</p> <p></p> <p>\u4ee5\u4e0a\u4fbf\u662f\u57fa\u4e8e\u7ebf\u6027\u8868\u7684\u7b80\u5355\u7b97\u6cd5\uff0c\u6b64\u7cfb\u5217\u540e\u9762\u4f1a\u9646\u7eed\u4ecb\u7ecd\u66f4\u591a\u6709\u5173\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\uff0c\u4e5f\u4f1a\u66f4\u65b0\u4e00\u4e9b\u5173\u4e8e\u6570\u636e\u7ed3\u6784\u7684\u7b97\u6cd5\u9898\u76ee\u4f8b\u5b50\uff0c\u8c22\u8c22\u5927\u5bb6\u652f\u6301\uff01</p>"},{"location":"blog/2020/02/26/eclipse-%E6%99%AE%E9%80%9A-java-project-%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/","title":"Eclipse \u666e\u901a Java Project \u6587\u4ef6\u8def\u5f84\u95ee\u9898","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u9879\u76ee\u7684\u7ed3\u6784\u5982\u56fe</p> <p></p> <p>\u8bfb\u53d6 src \u91cc\u67d0\u4e2a\u5305\u4e0b\u7684\u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b</p> <pre><code>BufferedReader br=new BufferedReader(new FileReader(\"src/ch01/practice1/input.txt\"));\n</code></pre> <p>\u8f93\u51fa\u5230\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u4ee3\u7801\u5982\u4e0b</p> <pre><code>PrintWriter pw=new PrintWriter(\"src/ch01/practice1/output.txt\");\n</code></pre> <p>\u6574\u4e2a\u7b97\u6cd5\u4ee3\u7801\u5982\u4e0b</p> <pre><code>package ch01.practice1;\n\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n//import java.util.Arrays;\n\n//\u7edf\u8ba1\u6570\u5b57\u95ee\u9898\npublic class PageNuber\n{\n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader br=new BufferedReader(new FileReader(\"src/ch01/practice1/input.txt\"));\n        String line=br.readLine();\n        if (null!=line)\n        {\n            int n=Integer.valueOf(line);\n            int[] arr= new int[10];\n//          Arrays.fill(arr,0);\n//          System.out.println(Arrays.toString(arr));\n            for (int i = 1; i &lt; n+1; i++)\n            {\n                int div=i;\n                while(div&gt;0)\n                {\n                    arr[div%10]++;\n                    div=div/10;\n                }\n            }\n//          System.out.println(Arrays.toString(arr));\n            PrintWriter pw=new PrintWriter(\"src/ch01/practice1/output.txt\");\n            for (int i = 0; i &lt; arr.length; i++)\n            {\n                pw.print(arr[i]+\" \");\n            }\n            pw.close();\n        }\n        br.close();\n    }\n}\n</code></pre>"},{"location":"blog/2020/05/04/%E7%AE%A1%E7%90%86%E5%91%98%E5%B7%B2%E9%98%BB%E6%AD%A2%E4%BD%A0%E8%BF%90%E8%A1%8C%E6%AD%A4%E5%BA%94%E7%94%A8windows-defender-%E5%9B%BE%E6%A0%87%E6%89%93%E5%8F%89%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80-mmcexe-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","title":"\u3010\u7ba1\u7406\u5458\u5df2\u963b\u6b62\u4f60\u8fd0\u884c\u6b64\u5e94\u7528\u3011windows defender \u56fe\u6807\u6253\u53c9\uff0c\u65e0\u6cd5\u6253\u5f00 mmc.exe \u89e3\u51b3\u529e\u6cd5","text":"<p>\u4eca\u5929\u5f00\u673a\u9047\u5230\u4e00\u4e2a\u5947\u602a\u7684\u95ee\u9898\uff0c\u53d1\u73b0 windows defender \u56fe\u6807\u4e0a\u9762\u6253\u4e86\u4e2a \u00d7\uff1a</p> <p></p> <p>\u6253\u5f00\u6309\u7167\u7cfb\u7edf\u63d0\u793a\u9700\u8981 restart \u670d\u52a1\uff0c\u4f46\u662f\u65e0\u6cd5\u91cd\u542f\u670d\u52a1\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u7136\u540e\u5c1d\u8bd5\u624b\u52a8\u91cd\u542f\u670d\u52a1\uff0c\u51c6\u5907\u6253\u5f00\u7ba1\u7406\u63a7\u5236\u53f0 mmc\uff0c\u4f46\u662f\u6253\u5f00\u51fa\u73b0\u5982\u56fe\u9519\u8bef\uff1a</p> <p></p> <p>\u5bfb\u627e\u89e3\u51b3\u529e\u6cd5\uff0c\u6253\u5f00\u9632\u706b\u5899\u5141\u8bb8 mmc.exe \u901a\u8fc7\u9632\u706b\u5899\uff1a</p> <p></p> <p>\u6309\u56fe 1\u30012\u30013\u30014\uff0c\u5c06 c:\\windows\\system32\\mmc.exe \u6dfb\u52a0\u5230\u5141\u8bb8\u5217\u8868\u4e2d\uff1a</p> <p></p> <p>\u52fe\u4e0a\u4e13\u7528\u548c\u516c\u7528\uff1a</p> <p></p> <p>\u91cd\u542f\u7535\u8111\uff0c\u4e00\u5b9a\u8981\u91cd\u542f\u7535\u8111\uff1a</p> <p></p> <p></p>"},{"location":"blog/2020/07/23/%E5%9C%A8-vs-code-%E4%B8%AD%E7%BC%96%E5%86%99-iar-%E9%A1%B9%E7%9B%AE/","title":"\u5728 VS Code \u4e2d\u7f16\u5199 IAR \u9879\u76ee","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u9996\u5148\u6309\u7167\u7f51\u4e0a\u7684\u6559\u7a0b\uff0c\u4e0b\u8f7d C/C++\u63d2\u4ef6\uff0c\u4ee5\u53ca IAR Eebedded Workbench \u63d2\u4ef6\uff0c\u5b89\u88c5\u5b8c\u6210\u91cd\u542f VS Code\u3002</p> <p>\u9879\u76ee\u76ee\u5f55\u4e0b\u65b0\u5efa.vscode \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u5efa iar.json \u548c settings.json \u6587\u4ef6</p> <p>iar.json \u5185\u5bb9\u793a\u4f8b</p> iar.json<pre><code>{\n    \"version\": 1,\n    \"path\": \"C:\\\\Program Files (x86)\\\\IAR Systems\\\\Embedded Workbench 8.0\\\\\",\n    \"project\": \"C:\\\\Projects\\\\TEST\\\\TEST.ewp\",\n    \"config\": \"Debug\"\n}\n</code></pre> <p>version \u9ed8\u8ba4 1\uff0cpath \u4e3a IAR \u73af\u5883\u5b89\u88c5\u7684\u76ee\u5f55\uff0cproject \u4e3a IAR \u9879\u76ee\u4e2d\u7684.ewp \u6587\u4ef6\uff0cconfig \u4e3a IAR \u9879\u76ee\u7684 configuration \u7684 name\uff0c\u53ef\u4ee5\u6253\u5f00.ewp \u6587\u4ef6\u641c\u7d22 configuration \u67e5\u770b<code>&lt;name&gt;</code>\u6807\u7b7e\u6ce8\u610f\u6b64\u5904\u6700\u540e\u4e00\u5b9a\u8981\u6709<code>\\\\</code>\uff0c\u5982\u679c\u4e0d\u52a0<code>\\\\</code>\uff0cpath \u5982\u4e0b\uff1a</p> <pre><code> \"path\": \"C:\\\\Program Files (x86)\\\\IAR Systems\\\\Embedded Workbench 8.0\"\n</code></pre> <p>\u5219\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u4f1a\u62a5\u9519\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>Building configuration: Debug\nError while starting IarBuild.exe. Open it with IAR Ide to fix it.\nSomething went wrong...\n</code></pre> <p>\u4e0a\u7f51\u641c\u7d22\u5f88\u591a\u5185\u5bb9\uff0c\u6700\u7ec8\u5728\u8be5\u63d2\u4ef6\u7684\u4f5c\u8005 politoleo \u7684 github \u9879\u76ee issues \u4e2d\u627e\u5230\u4e86\u56de\u7b54\uff1a</p> <p>https://github.com/politoleo/iar/issues/1</p> <p></p> <p>\u5176\u5b9e\u5c31\u662f\u73af\u5883\u7684\u8def\u5f84\u95ee\u9898\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u5728 path \u6700\u540e\u52a0\u4e0a<code>\\\\</code>\uff0c\u610f\u601d\u5c31\u662f\u9012\u5f52\u6240\u6709\u5b50\u6587\u4ef6\u5939\uff0c\u6700\u540e settings.json \u5185\u5bb9\uff1a</p> <pre><code>{\n    \"iar.enabled\": true\n}\n</code></pre> <p>\u6700\u7ec8\u901a\u8fc7\u5feb\u6377\u952e Ctrl+Shift+B \u5b8c\u6210 Build \u64cd\u4f5c\u3002</p>"},{"location":"blog/2020/09/08/android-studio-401-%E6%89%BE%E4%B8%8D%E5%88%B0-rjava/","title":"Android Studio 4.0.1 \u627e\u4e0d\u5230 R.java","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u770b\u4ee5\u5f80\u7684\u6559\u6750\u4e2d R.java \u90fd\u662f\u5728\u9879\u76ee\u7684\\app\\build\\generated\\source\\r\\debug\\\u5305\u540d\u4e0b\u7684</p> <p>\u901a\u5e38 AS \u4f1a\u81ea\u52a8\u5728\u9879\u76ee\u7684 R.java \u4e2d\u521b\u5efa\u4ee3\u8868\u9879\u76ee\u4e2d\u8d44\u6e90\u7684\u8d44\u6e90 ID\uff0c\u5927\u81f4\u683c\u5f0f\u5982\u4e0b</p> R.java<pre><code>public final class R\n{\n    public static final class layout\n    {\n        public static final int activity_main = 0x7f040017;\n    }\n\n    public static final class mipmap\n    {\n        public static final int ic_launcher = 0x7f030000;\n    }\n\n    public static final class string\n    {\n        public static final int app_name = 0x7f0b0011;\n        public static final int hello_world = 0x7f0b0012;\n    }\n}\n</code></pre> <p>\u7ed3\u679c\u4eca\u5929\u5728\u4f7f\u7528 AS4.0.1 \u65b0\u5efa Helloworld \u9879\u76ee\uff0c\u53d1\u73b0\\generated\\source \u76ee\u5f55\u4e0b\u4e0d\u5b58\u5728\\r\\debug\\\uff0c\u5728\u6587\u4ef6\u7ba1\u7406\u5176\u4e2d\u641c\u7d22\u6709\u5173 R \u7684\u6587\u4ef6\u53d1\u73b0 R.java \u53d8\u4e3a\u4e86 R.txt</p> <p></p> <p>\u5e76\u4e14 R.txt \u5728 D:\\Android\\HelloWorld\\app\\build\\intermediates\\runtime_symbol_list\\debug \u76ee\u5f55\u4e0b</p> <p>stackoverflow \u4e0a\u9762\u6709\u8fd9\u6837\u7684\u64cd\u4f5c\uff1a</p> <p>https://stackoverflow.com/questions/28522144/where-is-the-r-java-file-in-android-studio</p> <p></p> <p>\u518d\u53f3\u952e\u5c31\u80fd show bytecode \u5c31\u80fd\u770b\u89c1\u4e86</p> <p></p> <p></p>"},{"location":"blog/2020/09/12/%E4%BD%BF%E7%94%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85-cygwingcc-%E5%B9%B6%E9%85%8D%E7%BD%AE-clion-ide/","title":"\u4f7f\u7528\u955c\u50cf\u5b89\u88c5 cygwin\u3001gcc \u5e76\u914d\u7f6e CLion IDE","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p>"},{"location":"blog/2020/09/12/%E4%BD%BF%E7%94%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85-cygwingcc-%E5%B9%B6%E9%85%8D%E7%BD%AE-clion-ide/#cygwin","title":"Cygwin","text":"<p>\u5b98\u7f51\uff1acygwin</p> <p></p> <p>\u4e0b\u8f7d 64bit \u5b89\u88c5\u5668\uff0c\u5e76\u6253\u5f00\u9009\u62e9 next</p> <p></p> <p>\u5c3d\u91cf\u4e0d\u8981\u88c5\u5728\u7cfb\u7edf\u76d8</p> <p></p> <p></p> <p>\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u56fd\u5185\u7684\u955c\u50cf\u5b8c\u6210\uff0c\u5b98\u7f51\u63d0\u4f9b\u7684\u5404\u56fd\u955c\u50cf\u4fe1\u606f\uff1a<code>https://cygwin.com/mirrors.html</code></p> <p>\u6211\u4eec\u9009\u62e9\u4f7f\u7528 USTC \u4e2d\u79d1\u5927\u7684 Mirror\uff0c\u7f51\u5740\uff1a<code>http://mirrors.ustc.edu.cn/cygwin/</code></p> <p>\u4e00\u8def next\uff0c\u5230\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u7b2c\u4e09\u9879\u4f7f\u7528\u4ee3\u7406\uff0c\u5e76\u5c06\u955c\u50cf\u5730\u5740\u6dfb\u52a0\u8fdb\u53bb</p> <p></p> <p>\u5728\u8fd9\u91cc next \u4f1a\u63d0\u793a\u9519\u8bef\uff0c\u6211\u4eec\u9009\u62e9 ok</p> <p></p> <p>\u6211\u4eec\u5c06\u955c\u50cf\u5730\u5740\u586b\u5165 URL \u680f\u4e2d\uff0c\u9009\u62e9 Add</p> <p></p> <p>\u6ce8\u610f\u7136\u540e\u9700\u8981\u9009\u62e9 back\uff0c\u5e76\u9009\u62e9 Direct Connection \u76f4\u63a5\u8fde\u63a5\uff0c\u9009\u62e9 next</p> <p></p> <p></p> <p></p> <p>\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u4f1a\u663e\u793a\u5404\u79cd\u5305\uff0c\u6211\u4eec\u5728 search \u4e2d\u8f93\u5165 gcc\uff0c\u5e76\u5c55\u5f00 All\uff0c\u627e\u5230 Devel\u3001Libs \u76ee\u5f55\u4e0b\u7684</p> <ul> <li> <p>gcc-core</p> </li> <li> <p>gcc-g++ \u3010\u9700\u8981 C++\u7684\u53ef\u4ee5\u88c5\u3011</p> </li> <li> <p>libgccpp1\u3010\u9700\u8981 C++\u7684\u53ef\u4ee5\u88c5\u3011</p> </li> </ul> <p></p> <p>\u540c\u7406\u641c\u7d22\u5b89\u88c5 Devel \u4e0b\u7684 gdb</p> <p></p> <p>\u6700\u540e\u5b89\u88c5 Devel \u4e0b\u7684 make\u3001cmake</p> <p></p> <p>\u9009\u62e9 next \u8fdb\u884c\u5b89\u88c5</p> <p></p> <p></p> <p>\u5b89\u88c5\u5b8c\u6210</p> <p></p>"},{"location":"blog/2020/09/12/%E4%BD%BF%E7%94%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85-cygwingcc-%E5%B9%B6%E9%85%8D%E7%BD%AE-clion-ide/#gcc-environment-variables","title":"GCC Environment Variables","text":"<p>\u548c\u914d\u7f6e\u4e00\u822c Path \u73af\u5883\u53d8\u91cf\u4e00\u6837\uff0c\u627e\u5230 cygwin \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 bin \u76ee\u5f55\uff0c\u6bd4\u5982\u6211\u8fd9\u91cc\uff1aE:\\cygwin64\\bin</p> <p></p> <p>\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u6253\u5f00 cmd\uff0c\u8f93\u5165 gcc -v\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u9519\u8bef</p> <p></p> <p>\u540c\u7406\u8f93\u5165 g++ -v \u67e5\u770b g++\u7248\u672c</p> <p></p>"},{"location":"blog/2020/09/12/%E4%BD%BF%E7%94%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85-cygwingcc-%E5%B9%B6%E9%85%8D%E7%BD%AE-clion-ide/#clion","title":"CLion","text":"<p>Jetbrains \u5b98\u7f51</p> <p>\u5e38\u89c4\u5b89\u88c5\u65b9\u6cd5\uff0c\u4e0d\u5efa\u8bae\u88c5\u7cfb\u7edf\u76d8\uff0c\u4e00\u8def next \u5c31\u884c</p> <p></p> <p></p> <p></p> <p>\u5b89\u88c5\u7ed3\u675f\u540e\uff0c\u6253\u5f00 CLion\uff0c\u6fc0\u6d3b\u65b9\u6cd5\u6211\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u6559\u80b2\u8ba4\u8bc1\uff0c\u5982\u679c\u662f\u5b66\u751f\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5230 jetbrains \u5b98\u7f51\u4e0a\u53bb\u770b\u770b\u600e\u4e48\u64cd\u4f5c</p> <p></p> <p>\u6fc0\u6d3b\u5b8c\u6210\u540e\uff0cCLion \u4f1a\u81ea\u52a8\u68c0\u6d4b gcc \u73af\u5883</p> <p></p> <p></p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5728 Win10 \u7cfb\u7edf\u4e0a\u4f7f\u7528 gcc \u8fdb\u884c\u7b80\u5355\u5f00\u53d1\uff0c\u672c\u6587\u5982\u6709\u4e0d\u6b63\u786e\u7684\u5730\u65b9\u6b22\u8fce\u6307\u6b63</p>"},{"location":"blog/2020/09/13/%E5%88%A9%E7%94%A8%E9%A2%84%E7%BC%96%E8%AF%91%E8%A7%A3%E5%86%B3-cc%E9%87%8D%E5%A4%8D%E5%AE%9A%E4%B9%89%E7%9A%84%E9%94%99%E8%AF%AF/","title":"\u5229\u7528\u9884\u7f16\u8bd1\u89e3\u51b3 C/C++\u91cd\u590d\u5b9a\u4e49\u7684\u9519\u8bef","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u6211\u4eec\u73b0\u5728\u6709<code>main.c</code>\u548c<code>function.h</code>\u4e24\u4e2a\u6587\u4ef6</p> main.c<pre><code>#include &lt;stdio.h&gt;\n\n#include \"function.h\"\n\nint main() {\n    printf(\"Hello, World!\\n\");\n    printf(\"\\t1+2+...+100\\n\"sum(100));\n    return 0;\n}\n\nint sum(int n) {\n    int res = 0;\n    for (int i = 0; i &lt; n; ++i) {\n        res += i;\n    }\n    return res;\n}\n</code></pre> function.h<pre><code>//#ifndef __SUM_H\n//#define __SUM_H\n\nint sum(int n);\nint A = 0;\n\n//#endif\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528\u547d\u4ee4<code>gcc main.c -o hello</code>\uff0c\u518d\u4f7f\u7528<code>ls</code>\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u5df2\u7ecf\u751f\u6210\u4e86<code>hello.exe</code></p> <p></p> <p>\u7136\u540e\u6211\u4eec\u518d\u4f7f\u7528\u547d\u4ee4<code>.\\hello.exe</code>\u8fd0\u884c\u7a0b\u5e8f\uff0c<code>.\\</code>\u8868\u793a\u5f53\u524d\u76ee\u5f55</p> <p></p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\u90fd\u6ca1\u4ec0\u4e48\u4e0d\u5bf9\u7684\u5730\u65b9\uff0c\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a<code>function2.h</code>\uff0c\u5e76\u5728<code>main.c</code>\u4e2d\u5f15\u5165<code>function2.h</code></p> <p><code>function2.h</code>\u7684\u5185\u5bb9\u5982\u4e0b</p> function2.h<pre><code>#include \"function.h\"\n</code></pre> <p><code>main.c</code>\u5f15\u5165\u90e8\u5206\u4fee\u6539\u4e3a</p> main.c<pre><code>#include &lt;stdio.h&gt;\n\n#include \"function.h\"\n#include \"function2.h\"\n</code></pre> <p>\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u547d\u4ee4<code>gcc main.c -o hello</code>\uff0c\u53d1\u73b0\u51fa\u73b0\u4e86\u62a5\u9519\u4fe1\u606f redefinition</p> <p></p> <p>\u610f\u601d\u5c31\u662f\u91cd\u590d\u5b9a\u4e49\u4e86\u53d8\u91cf A\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728<code>function.h</code>\u4e2d\u52a0\u5165\u9884\u7f16\u8bd1\u6307\u4ee4<code>#ifndef</code> <code>#define</code> <code>#endif</code>\uff0c</p> <p>\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u91cd\u590d\u5b9a\u4e49\u6216\u8005\u91cd\u590d\u5305\u542b\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c06<code>function.h</code>\u4e2d\u7684\u4e09\u6761\u9884\u7f16\u8bd1\u6307\u4ee4\u89e3\u6ce8\u91ca</p> <p><code>function.h</code>\u4fee\u6539\u4e3a</p> function.h<pre><code>#ifndef __SUM_H\n#define __SUM_H\n\nint sum(int n);\nint A = 0;\n\n#endif\n</code></pre> <p>\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u547d\u4ee4<code>gcc main.c -o hello</code>\uff0c\u53d1\u73b0\u7f16\u8bd1\u6b63\u786e\u901a\u8fc7\u4e86\uff0c\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f</p> <p></p> <p>\u7ed3\u679c\u6b63\u786e\uff0c\u56e0\u6b64\u5728\u89c4\u8303\u7684\u5f00\u53d1\u5f53\u4e2d\u6211\u4eec\u9700\u8981\u4f7f\u7528<code>#ifndef</code> <code>#define</code> <code>#endif</code> \u6765\u9632\u6b62\u91cd\u590d\u5b9a\u4e49\u7684\u95ee\u9898</p>"},{"location":"blog/2020/09/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","title":"\u3010\u8ba1\u7b97\u673a\u56db\u7ea7\u5d4c\u5165\u5f0f\u3011\u5185\u5b58\u7ba1\u7406","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>1.\u9898\u76ee\u5982\u4e0b </p> <p>\u5728\u9875\u5f0f\u5b58\u50a8\u7ba1\u7406\u65b9\u6848\u4e2d\uff0c\u9875\u8868\u7531\u82e5\u5e72\u7269\u7406\u9875\u53f7\u548c\u4e00\u4e9b\u5176\u4ed6\u4fe1\u606f\u6784\u6210\uff0c\u9875\u8868\u53ef\u4ee5\u5f62\u8c61\u5730\u770b\u4f5c\u662f\u9875\u53f7\u7684\u76ee\u5f55\uff0c\u800c\u9875\u8868\u672c\u8eab\u4e5f\u4ee5\u9875\u9762\u7684\u5f62\u5f0f\u5b58\u50a8</p> <p>\u9898\u76ee\u4e2d\u8bf4\u8fdb\u7a0b\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e3a 2GB\uff0c\u9875\u9762\u5927\u5c0f\u4e3a 4KB\uff0c\u7528 4B \u8868\u793a\u7269\u7406\u9875\u53f7\u5927\u5c0f\uff0c\u56e0\u6b64</p> <ul> <li>\u9875\u9762\u6570\u91cf=\u865a\u62df\u5730\u5740\u7a7a\u95f4/\u9875\u9762\u5927\u5c0f=2GB/4KB=2^19</li> <li>\u9875\u8868\u5927\u5c0f=\u9875\u9762\u6570\u91cf*\u7269\u7406\u9875\u53f7\u5927\u5c0f=2^19 * 4B=21B</li> <li>\u9875\u8868\u5360\u7528\u9875\u9762\u6570\u91cf=\u9875\u8868\u5927\u5c0f/\u9875\u9762\u5927\u5c0f=2^21B /4KB = 2 ^9</li> </ul> <p>\u56e0\u6b64\u6700\u7ec8\u7ed3\u679c\u4e3a 2^9=512 \u4e2a\u9875\u9762</p>"},{"location":"blog/2020/09/20/unixlinux-%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/","title":"UNIX/Linux \u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5c5e\u6027","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u6709 Ubuntu \u7cfb\u7edf\u7684\u540c\u5b66\u53ef\u4ee5\u968f\u4fbf\u627e\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6253\u5f00 Terminal\uff0c\u4ee5\u540e\u8f93\u5165<code>ls -l</code>\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p><code>-l</code> long listing format\uff0c\u7b2c 2 \u5217\u4e3a\u786c\u94fe\u63a5\u6570\u91cf\uff0c\u7b2c 3 \u5217\u4e3a owner\uff0c\u7b2c 4 \u5217\u4e3a group\uff0c\u7b2c 5 \u5217\u4e3a size\uff0c\u7b2c 6 \u5217\u4e3a date time\uff0c\u7b2c 7 \u5217\u4e3a name</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u7b2c\u4e00\u5217\u5b57\u6bb5\u8868\u793a\u6587\u4ef6\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u6700\u540e\u4e00\u4e2a<code>-rwxr-xr-x</code>\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u5462\uff0c\u5f15\u7528\u300aThe Linux Command Line\u300b\u4e2d\u7684\u8bdd\uff1a</p> <p>\u201cThe first 10 characters of the listing are the file attributes. The first of these characters is the file type.\u201d</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u524d\u5341\u4e2a\u5b57\u7b26\u8868\u793a\u6587\u4ef6\u5c5e\u6027\uff0c\u5176\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u8868\u793a\u6587\u4ef6\u7c7b\u578b\uff0c\u90a3\u4e48\u6587\u4ef6\u5c5e\u6027\u5982\u4e0b\uff1a</p> <p></p> <ul> <li> <p>- \u8868\u793a\u5e38\u89c4\u6587\u4ef6</p> </li> <li> <p>d \u8868\u793a\u76ee\u5f55</p> </li> <li> <p>l \u8868\u793a\u7b26\u53f7\u94fe\u63a5\uff0c\u6216\u79f0\u8f6f\u8fde\u63a5</p> </li> <li> <p>c \u8868\u793a\u5b57\u7b26\u7279\u6b8a\u6587\u4ef6\uff0c\u6216\u79f0\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6</p> </li> <li> <p>b \u8868\u793a\u5757\u7279\u6b8a\u6587\u4ef6\uff0c\u6216\u79f0\u5757\u8bbe\u5907\u6587\u4ef6</p> </li> </ul> <p>\u201cThe remaining nine characters of the file attributes, called the file mode, represent the read, write, and execute permissions for the file\u2019s owner, the file\u2019s group owner, and everybody else. \u201d</p> <p>\u5269\u4e0b\u7684 9 \u4e2a\u5b57\u7b26\uff0c\u5206\u522b\u8868\u793a 3 \u7ec4\u7684 3 \u4e2d\u6743\u9650\uff0c\u53ef\u8bfb r\u3001\u53ef\u5199 w\u3001\u53ef\u6267\u884c x\uff0c\"-\"\u5219\u8868\u793a\u4e0d\u5141\u8bb8\uff0c3 \u7ec4\u5206\u522b\u4e3a\uff0cowner\uff0cgroup\uff0cworld</p> <p></p> <ul> <li>\u6587\u4ef6<ul> <li>r \u8868\u793a\u5141\u8bb8\u6253\u5f00\u548c\u8bfb</li> <li>w \u8868\u793a\u5141\u8bb8\u5199\u548c\u7f29\u51cf\uff0c\u4f46\u4e0d\u5141\u8bb8\u91cd\u547d\u540d\u548c\u5220\u9664\uff0c\u91cd\u547d\u540d\u548c\u5220\u9664\u662f\u7531\u76ee\u5f55\u5c5e\u6027\u51b3\u5b9a\u7684</li> <li>x \u8868\u793a\u53ef\u6267\u884c</li> </ul> </li> <li>\u76ee\u5f55<ul> <li>r \u8868\u793a\u5982\u679c\u6267\u884c\u5c5e\u6027 x \u8bbe\u7f6e\u4e86\uff0c\u90a3\u4e48\u5141\u8bb8\u5217\u51fa\u76ee\u5f55\u4e2d\u7684\u5185\u5bb9</li> <li>w \u8868\u793a\u5982\u679c\u6267\u884c\u5c5e\u6027 x \u8bbe\u7f6e\u4e86\uff0c\u5141\u8bb8\u5728\u76ee\u5f55\u4e2d\u8fdb\u884c\u521b\u5efa\u3001\u5220\u9664\u3001\u91cd\u547d\u540d\u6587\u4ef6</li> <li>x \u8868\u793a\u5141\u8bb8\u8fdb\u5165\u76ee\u5f55</li> </ul> </li> </ul> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u6587\u4ef6\u5c5e\u6027\u5f52\u7ed3\u4e3a</p> 0 1-3 4-6 7-9 File Type Owner Group World \u6587\u4ef6\u5c5e\u6027 \u5c5e\u4e3b\u6743\u9650 \u540c\u7ec4\u7528\u6237\u6743\u9650 \u5176\u4ed6\u7528\u6237\u6743\u9650 - d l c b r w x r w x r w x <p>\u90a3\u4e48\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684<code>-rwxr-xr-x</code>\uff0c\u8868\u793a\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u6211\u4eec\u5c06\u5176\u5206\u89e3\u4e3a</p> - rwx r-x r-x \u4e8c\u8fdb\u5236\u8868\u793a 111 101 101 \u5e38\u89c4\u6587\u4ef6 \u5c5e\u4e3b\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c \u540c\u7ec4\u7528\u6237\u53ef\u8bfb\u3001\u4e0d\u53ef\u5199\u3001\u53ef\u6267\u884c \u5176\u4ed6\u7528\u6237\u53ef\u8bfb\u3001\u4e0d\u53ef\u5199\u3001\u53ef\u6267\u884c <p>UNIX/Linux \u7cfb\u7edf\u5e38\u4f7f\u7528\u516b\u8fdb\u5236\u6765\u8868\u793a\u6587\u4ef6\u5c5e\u6027\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48 111101101\uff0c\u5c31\u8868\u793a\u4e3a\u6211\u4eec\u7ecf\u5e38\u5728\u547d\u4ee4\u4e2d\u89c1\u5230\u7684 755\uff0c\u90a3\u4e48\u5e38\u7528\u7ec4\u5408\u6709<code>7 (rwx), 6 (rw-), 5 (r-x), 4 (r--), \u4ee5\u53ca 0 (---)</code></p>"},{"location":"blog/2020/09/21/ubuntu1804-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85/","title":"Ubuntu18.04 \u865a\u62df\u673a\u7684\u5b89\u88c5","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p> <p>\u9996\u5148\u4ece\u7f51\u7edc\u4e0a\u4e0b\u8f7d VMWare Workstation \u6216 Virtual Box \u865a\u62df\u673a\u8f6f\u4ef6</p> <p>\u8fd9\u91cc\u9009\u62e9\u4f7f\u7528 VMWare\uff0c\u5b98\u7f51\u5730\u5740\uff1ahttps://www.vmware.com/\uff0c\u627e\u5230\u4ea7\u54c1\u4e0b\u8f7d\uff0c\u9009\u62e9Workstation</p> <p></p> <p>\u6253\u5f00\u5b89\u88c5\u8f6f\u4ef6\uff0c\u4e00\u6b65\u4e00\u6b65 Next \u4e0b\u53bb</p> <p></p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6253\u5f00 VMWare\uff0c\u5728 File \u83dc\u5355\u4e0b\u627e\u5230 New Virtural Machine\uff0cNext \u540e\u9009\u62e9 Installer disc image file(iso)\uff0c\u9009\u62e9\u4ece\u963f\u91cc\u4e91\u955c\u50cf\u7ad9\u4e0b\u8f7d\u7684 Ubuntu18.04.iso \u6587\u4ef6\uff0c\u963f\u91cc\u4e91\u955c\u50cf\u5730\u5740\uff1ahttps://developer.aliyun.com/mirror/\uff0c\u6216\u8005\u4ece\u6e05\u534e\u6e90\u4e0a\u4e0b\u8f7d</p> <p></p> <p>\u8bbe\u7f6e\u7528\u6237\u540d\u3001\u5bc6\u7801\uff1a</p> <p></p> <p>\u7ed9\u53d6\u865a\u62df\u673a\u53d6\u540d\u5b57</p> <p></p> <p>\u5206\u914d CPU</p> <p></p> <p>\u5206\u914d\u5185\u5b58</p> <p></p> <p>\u9009\u62e9\u7f51\u7edc\u8fde\u63a5\u7c7b\u578b</p> <p></p> <p>\u63a5\u7740\u9009\u62e9 I/O \u63a7\u5236\u7c7b\u578b\u3001\u78c1\u76d8\u7c7b\u578b\u7b49\uff0c\u5206\u914d\u78c1\u76d8\u5927\u5c0f</p> <p></p> <p>\u6700\u540e\u786e\u8ba4\u4fe1\u606f\uff0c\u5e76\u9009\u62e9 Finish</p> <p></p> <p>\u5b89\u88c5\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u754c\u9762</p> <p></p> <p>\u968f\u540e\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5c06 apt \u6e90\u66f4\u6362\u6210\u963f\u91cc\u4e91\u7684\u955c\u50cf</p> <p>\u4f7f\u7528\u5feb\u6377\u952e<code>Ctrl+Alt+T</code>\uff0c\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u8f93\u5165</p> <ul> <li><code>cd /etc/apt</code></li> <li><code>ls -a</code></li> </ul> <p>\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u5185\u5bb9</p> <p></p> <p>\u627e\u5230 source.list\uff0c\u8f93\u5165</p> <ul> <li> <p><code>sudo cp source.list source.list.bak</code> \u6b64\u5904\u9700\u8981\u8f93\u5165\u5bc6\u7801</p> </li> <li> <p><code>ls -a</code></p> </li> </ul> <p>\u53ef\u4ee5\u770b\u5230\u590d\u5236\u4e86 source.list \u5e76\u547d\u540d\u4e3a source.list.bak\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8e\u5907\u4efd\u4e86 source.list \u7684\u5185\u5bb9\uff0ccp \u7684\u610f\u601d\u5c31\u662f\u590d\u5236</p> <p></p> <p>\u7136\u540e\u5728\u8f93\u5165</p> <ul> <li><code>sudo gedit source.list</code></li> </ul> <p>\u53ef\u4ee5\u770b\u5230\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u5185\u5bb9\u4fee\u6539\u4e3a\u5982\u4e0b</p> <pre><code>deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n</code></pre> <p></p> <p>\u4fdd\u5b58\u540e\u9000\u51fa\uff0c\u5e76\u4e14\u8f93\u5165</p> <ul> <li> <p><code>sudo apt update</code> \u66f4\u65b0 apt \u8f6f\u4ef6\u7684\u5217\u8868</p> </li> <li> <p><code>sudo apt upgrade</code> \u5347\u7ea7 apt \u5b89\u88c5\u7684\u8f6f\u4ef6</p> </li> </ul> <p></p> <p>\u81f3\u6b64\uff0c\u57fa\u672c\u5de5\u4f5c\u5c31\u5b8c\u6210\u4e86\uff0c\u63a5\u4e0b\u6765\u5b89\u88c5 openssh-server\uff0c\u547d\u4ee4\u4e3a</p> <p><code>sudo apt install openssh-server</code></p> <p>\u4e2d\u9014\u9700\u8981\u786e\u8ba4\u5b89\u88c5\uff0c\u8f93\u5165 Y</p> <p></p> <p>\u63a5\u7740\u6d4b\u8bd5 ssh \u8fde\u63a5\uff0c\u9700\u8981\u5728 windows \u7cfb\u7edf\u4e0a\u5b89\u88c5 xshell\uff0c\u5e76\u914d\u7f6e ssh \u8fde\u63a5</p> <p></p> <p>\u627e\u5230 Authentication \u9009\u9879\uff0c\u8f93\u5165\u7528\u6237\u540d\u3001\u5bc6\u7801</p> <p></p> <p>\u8fde\u63a5\u6210\u529f\u540e\u663e\u793a\u5982\u4e0b\u4fe1\u606f</p> <p></p> <p>\u7136\u540e\u590d\u5236\u51fa\u4e24\u53f0\u865a\u62df\u673a\uff0c\u5f53\u524d\u8fd9\u4e00\u53f0\u5f53\u505a Master\uff0c\u53e6\u5916\u4e24\u53f0\u5206\u522b\u4e3a SlaveA\u3001SlaveB\uff0c\u6211\u4eec\u9009\u62e9 Master \u673a\u5668\uff0c\u53f3\u952e\u627e\u5230 Manage\uff0c\u9009\u62e9 Clone</p> <p></p> <p>Next \u5230\u6b64\u5904\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u9009\u62e9 Create a full clone</p> <p></p> <p>\u53d6\u540d\u4e3a Ubuntu-SlaveA\u3001Ubuntu-SlaveB\uff0c\u5e76\u7b49\u5f85\u514b\u9686\u5b8c\u6210</p> <p></p> <p>\u514b\u9686\u5b8c\u6210\u540e\uff0c\u5982\u4e0b</p> <p></p>"},{"location":"blog/2020/10/30/%E4%BB%A5-ping-%E4%B8%BA%E4%BE%8B%E5%88%A9%E7%94%A8-wireshark-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E5%B1%82%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/","title":"\u4ee5 PING \u4e3a\u4f8b\uff0c\u5229\u7528 Wireshark \u6df1\u5165\u7406\u89e3\u7f51\u7edc\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u7684\u5de5\u4f5c\u539f\u7406","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p>"},{"location":"blog/2020/10/30/%E4%BB%A5-ping-%E4%B8%BA%E4%BE%8B%E5%88%A9%E7%94%A8-wireshark-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E5%B1%82%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/#wireshark","title":"Wireshark","text":"<p>Wireshark\uff08\u524d\u79f0 Ethereal\uff09\u662f\u4e00\u4e2a\u7f51\u7edc\u5c01\u5305\u5206\u6790\u8f6f\u4ef6\u3002\u7f51\u7edc\u5c01\u5305\u5206\u6790\u8f6f\u4ef6\u7684\u529f\u80fd\u662f\u64b7\u53d6\u7f51\u7edc\u5c01\u5305\uff0c\u5e76\u5c3d\u53ef\u80fd\u663e\u793a\u51fa\u6700\u4e3a\u8be6\u7ec6\u7684\u7f51\u7edc\u5c01\u5305\u8d44\u6599\u3002Wireshark \u4f7f\u7528 WinPCAP \u4f5c\u4e3a\u63a5\u53e3\uff0c\u76f4\u63a5\u4e0e\u7f51\u5361\u8fdb\u884c\u6570\u636e\u62a5\u6587\u4ea4\u6362</p> <p>\u5b98\u7f51\uff1ahttps://www.wireshark.org/</p> <p>\u4e0b\u8f7d\u5e76\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6253\u5f00\u663e\u793a\u5982\u4e0b\u754c\u9762</p> <p></p>"},{"location":"blog/2020/10/30/%E4%BB%A5-ping-%E4%B8%BA%E4%BE%8B%E5%88%A9%E7%94%A8-wireshark-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E5%B1%82%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/#ip-datagram-ip","title":"IP datagram IP \u6570\u636e\u62a5","text":"<p>\u56fe\u89e3\uff1a</p> <p></p> <p></p>"},{"location":"blog/2020/10/30/%E4%BB%A5-ping-%E4%B8%BA%E4%BE%8B%E5%88%A9%E7%94%A8-wireshark-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E5%B1%82%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/#ethernet-v2-frame-v2-mac","title":"Ethernet V2 frame \u4ee5\u592a\u7f51 V2 \u7684 MAC \u5e27\u683c\u5f0f","text":"Preamble Start of frame delimiter MAC destination MAC source Ethertype Payload Frame check sequence (32\u2011bit CRC) 7 octets 1 octet 6 octets 6 octets 2 octets 46\u20111500 octets 4 octets <p>\u4e2d\u6587\u5bf9\u7167\u89e3\u91ca</p> <p></p> <p>\u6ce8\u610f\uff1aWireshark \u6293\u4e0d\u5230\u4ee5\u592a\u7f51 V2 \u7684 MAC \u5e27\u683c\u5f0f\u4e2d\uff0c\u5e27\u5c3e 4 \u5b57\u8282\u7684 FCS \u6821\u9a8c\u5e8f\u5217\uff0c\u4ee5\u53ca\u5e27\u9996 8 \u5b57\u8282\u7684\u524d\u540c\u6b65\u7801+\u5e27\u5f00\u59cb\u5b9a\u754c\u7b26</p>"},{"location":"blog/2020/10/30/%E4%BB%A5-ping-%E4%B8%BA%E4%BE%8B%E5%88%A9%E7%94%A8-wireshark-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E5%B1%82%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/#ping","title":"PING","text":"<p>Ping \u662f\u5de5\u4f5c\u5728 TCP/IP \u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u4e2d\u5e94\u7528\u5c42\u7684\u4e00\u4e2a\u670d\u52a1\u547d\u4ee4\uff0c \u4e3b\u8981\u662f\u5411\u7279\u5b9a\u7684\u76ee\u7684\u4e3b\u673a\u53d1\u9001 ICMP\uff08Internet Control Message Protocol \u56e0\u7279\u7f51\u62a5\u6587\u63a7\u5236\u534f\u8bae\uff09Echo \u8bf7\u6c42\u62a5\u6587\uff0c\u6d4b\u8bd5\u76ee\u7684\u7ad9\u662f\u5426\u53ef\u8fbe\u53ca\u4e86\u89e3\u5176\u6709\u5173\u72b6\u6001</p> <p>ping \u7684\u7528\u6cd5</p> <p></p>"},{"location":"blog/2020/10/30/%E4%BB%A5-ping-%E4%B8%BA%E4%BE%8B%E5%88%A9%E7%94%A8-wireshark-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E5%B1%82%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/#wireshark_1","title":"Wireshark \u6293\u5305\u7ed3\u679c\u4e0e\u5206\u6790","text":"<p>\u6253\u5f00 Wireshark\uff0c\u9009\u62e9\u9700\u8981\u6293\u53d6\u7684\u7f51\u7edc\uff0c\u9009\u62e9\u5f00\u59cb\u6355\u83b7 Start capture</p> <p></p> <p></p> <p>\u73b0\u5728\u5c40\u57df\u7f51\u4e2d\u6709\u4e24\u53f0\u7535\u8111\uff0c\u5206\u522b\u662f\u672c\u673a\u548c\u4e00\u53f0\u624b\u673a\uff0c\u5728\u672c\u673a\u6253\u5f00 cmd</p> <p>\u8f93\u5165<code>ipconfig /all</code>\uff0c\u672c\u673a IP \u5730\u5740\u548c\u7f51\u5361\u7684 MAC \u5730\u5740</p> <p></p> <p>\u5f97\u5230\u672c\u673a\u7684 IP \u5730\u5740\uff1a192.168.110.246\uff0cMAC \u5730\u5740\uff1aF8-63-3F-90-A1-1E</p> <p>\u6253\u5f00\u624b\u673a\uff0c\u67e5\u770b\u624b\u673a\u7684 IP \u5730\u5740\u548c MAC \u5730\u5740</p> <p> \u5f97\u5230\u624b\u673a\u7684IP\u5730\u5740\uff1a192.168.108.95\uff0cMAC\u5730\u5740\uff1aC2-F7-3D-3E-CB-67</p> <p>\u8f93\u5165<code>ping 192.168.108.95 -t</code>\uff0c-t \u7684\u610f\u601d\u662f\u76f4\u5230\u624b\u52a8\u505c\u6b62\u4e4b\u524d\u4e00\u76f4 ping \u4e0b\u53bb</p> <p></p> <p>\u5728 Wireshark \u4e2d\u627e\u5230\u6355\u83b7\u7684\u5bf9\u5e94 ip \u7684\u5305</p> <p></p> <p>\u53cc\u51fb\u5176\u4e2d\u7684\u4e00\u6761 request \u8bf7\u6c42\uff0c\u53ef\u4ee5\u770b\u5230\u6574\u4e2a Packet \u683c\u5f0f\u5982\u4e0b</p> <p></p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u8fd9\u6bb5\u6570\u636e\uff0c\u5bf9\u5e94\u4e4b\u524d\u6240\u8bf4\u7684\u4ee5\u592a\u7f51 V2 \u7684 MAC \u5e27\u683c\u5f0f\u548c IP \u6570\u636e\u62a5</p> <pre><code>c2 f7 3d 3e cb 67 f8 63 3f 90 a1 1e 08 00 45 00\n00 3c a3 7d 00 00 80 01 3a 9d c0 a8 6e f6 c0 a8\n6c 5f 08 00 44 bf 00 01 08 9c 61 62 63 64 65 66\n67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76\n77 61 62 63 64 65 66 67 68 69\n</code></pre> <p>Wireshark \u6293\u4e0d\u5230\u4ee5\u592a\u7f51 V2 \u7684 MAC \u5e27\u683c\u5f0f\u4e2d\uff0c\u5e27\u5c3e 4 \u5b57\u8282\u7684 FCS \u6821\u9a8c\u5e8f\u5217\uff0c\u4ee5\u53ca\u5e27\u9996 8 \u5b57\u8282\u7684\u524d\u540c\u6b65\u7801+\u5e27\u5f00\u59cb\u5b9a\u754c\u7b26</p> <p>\u9996\u5148\u5206\u6790 MAC \u5e27</p> <ul> <li>\u5f00\u59cb\u7684 6 \u4e2a\u5b57\u8282 C2-F7-3D-3E-CB-67\uff0c\u662f\u76ee\u7684\u5730\u5740\uff0c\u5373\u624b\u673a</li> <li>\u968f\u540e\u7684 6 \u4e2a\u5b57\u8282 F8-63-3F-90-A1-1E\uff0c\u662f\u6e90\u5730\u5740\uff0c\u5373\u672c\u673a</li> <li>\u968f\u540e\u7684 2 \u4e2a\u5b57\u8282 08 00H\uff0c\u662f\u7c7b\u578b\uff0cIPv4 \u5bf9\u5e94\u7684\u503c\u5373 0x0800</li> </ul> <p>\u63a5\u7740\u5206\u6790 IP \u6570\u636e\u62a5\u7684\u9996\u90e8\uff0c\u56fa\u5b9a\u90e8\u5206\u5171 20 \u5b57\u8282</p> <ul> <li>\u7b2c 1 \u4e2a\u5b57\u8282\u4e3a 45H\uff0c\u524d 4 \u4f4d\u8868\u793a\u7248\u672c\u4e8c\u8fdb\u5236 0100\uff0c\u5373 IP Version4\uff0c\u540e 4 \u4f4d\u8868\u793a\u9996\u90e8\u957f\u5ea6 0101 \u5373\u5341\u8fdb\u5236 5\uff0c\u800c IP \u6570\u636e\u62a5\u4ee5 4 \u4e2a\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c4*5=20\uff0c\u5373\u9996\u90e8\u4e3a 20 \u5b57\u8282</li> <li>\u7b2c 2 \u4e2a\u5b57\u8282\u4e3a\u533a\u5206\u670d\u52a1\uff0c00H</li> <li> <p>\u7b2c 3\u30014 \u4e2a\u5b57\u8282\u4e3a\u603b\u957f\u5ea6\uff0c00 3cH\uff0c\u5373 60 \u4e2a\u5b57\u8282</p> </li> <li> <p>\u7b2c 5\u30016 \u4e2a\u5b57\u8282\u4e3a\u6807\u8bc6\uff0ca3 7dH</p> </li> <li>\u7b2c 7\u30018 \u4e2a\u5b57\u8282\u7684\u524d 3 \u4f4d\u4e3a\u6807\u5fd7\u4f4d\uff0c\u540e 13 \u4f4d\u4e3a\u7247\u504f\u79fb\uff0c00 00H</li> <li>\u7b2c 9 \u4e2a\u5b57\u8282\u8868\u793a\u751f\u5b58\u65f6\u95f4 TTL\uff0c80H\uff0c\u5355\u4f4d\u4e3a\u8df3\u6570\uff0c\u5373 128 \u8df3\uff0cTTL \u7684\u6700\u5927\u503c\u4e3a 2^8-1=255</li> <li>\u7b2c 10 \u4e2a\u5b57\u8282\u4e3a\u534f\u8bae\uff0c01H \u8868\u793a ICMP \u534f\u8bae\uff0c\u5177\u4f53\u5bf9\u7167\u8868\u53ef\u89c1 wikipedia\uff0chttps://en.wikipedia.org/wiki/List_of_IP_protocol_numbers</li> <li>\u7b2c 11\u300112 \u4e2a\u5b57\u8282\u4e3a\u9996\u90e8\u6821\u9a8c\u548c\uff0c3a 9dH</li> <li>\u7b2c 13\u300114\u300115\u300116 \u4e2a\u5b57\u8282\u4e3a\u6e90\u5730\u5740\uff0cc0 a8 6e f6H\uff0c\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6570\u4e3a 192.168.110.246\uff0c\u5373\u672c\u673a IP \u5730\u5740</li> <li>\u7b2c 17\u300118\u300119\u300120 \u4e2a\u5b57\u8282\u4e3a\u76ee\u7684\u5730\u5740\uff0cc0 a8 6c 5f\uff0c\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6570\u4f4d 192.168.108.95\uff0c\u5373\u624b\u673a\u7684 IP \u5730\u5740</li> </ul> <p>\u5269\u4e0b\u7684\u6240\u6709\u5b57\u8282\u90fd\u662f\u6570\u636e\u90e8\u5206\uff0c\u4ee5 ICMP \u534f\u8bae\u7684\u683c\u5f0f\u5448\u73b0</p> <p>\u901a\u8fc7\u5c55\u5f00 Wireshark \u89e3\u6790\u7684\u6bcf\u4e00\u9879\u53ef\u4ee5\u5f88\u6e05\u6670\u5730\u770b\u51fa Packet \u7684\u7ec4\u6210</p> <p></p> <p>\u4f7f\u7528 Wireshark \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u6df1\u5165\u5730\u7406\u89e3\u7f51\u7edc\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u7684\u5de5\u4f5c\u539f\u7406</p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/","title":"Linux \u7f16\u8bd1\u5185\u6838 Ubuntu18.04","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#_1","title":"\u5173\u95ed\u865a\u62df\u673a\u5e76\u5907\u4efd","text":"<p>\u9996\u5148\u5173\u95ed\u865a\u62df\u673a\uff0c\u5176\u6b21\u76f4\u63a5\u627e\u5230.vmdk \u6240\u5728\u76ee\u5f55\uff0c\u5e76\u538b\u7f29\u8be5\u76ee\u5f55\u5b9e\u73b0\u5907\u4efd</p> <p></p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#_2","title":"\u4e0b\u8f7d\u5185\u6838\u6e90\u7801","text":"<p>Linux \u5185\u6838\u5b98\u7f51\uff1ahttps://www.kernel.org/\uff0c\u70b9\u51fb\u56fe\u6807\u4e0b\u8f7d\uff0c\u6458\u81ea\uff1aCSDN</p> <p></p> <p>\u5c06\u538b\u7f29\u5305\u79fb\u52a8\u5230\u865a\u62df\u673a\u4e2d\uff0c\u5e76\u5907\u4efd<code>/boot/grub/grub.cfg</code>\u6587\u4ef6\u8fd9\u4e2a\u6587\u4ef6\u4ed6\u8d1f\u8d23\u542f\u52a8\u4f60\u7684 Ubuntu \u7cfb\u7edf\uff0c\u4f60\u7f16\u8bd1\u597d\u5185\u6838\u4e4b\u540e\u662f\u8981\u628a\u65b0\u5185\u6838\u4fe1\u606f\u52a0\u5165\u5230\u8fd9\u4e2a\u6587\u4ef6\u91cc\u9762\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u5728\u542f\u52a8 Ubuntu \u7684\u65f6\u5019\u8fd0\u7528\u4f60\u7684\u65b0\u5185\u6838\u3002\u8fd9\u4e2a\u6587\u4ef6\u4e5f\u662f\u6781\u5176\u91cd\u8981\u7684\u3002\u5982\u679c\u4f60\u5728\u7f16\u8bd1\u5185\u6838\u8fc7\u7a0b\u4e2d\u64cd\u4f5c\u4e0d\u5f53\uff0c\u5c06\u91cc\u9762\u7684\u4fe1\u606f\u7834\u574f\u4e86\uff0c\u90a3\u4e48\u4f60\u7684\u7cfb\u7edf\u5c06\u65e0\u6cd5\u542f\u52a8\uff0c\u8fd9\u6837\u4f60\u53ea\u80fd\u901a\u8fc7\u6062\u590d\u8fd9\u4e2a\u6587\u4ef6\u6765\u89e3\u51b3\uff0c\u6458\u81ea\uff1aCSDN</p> <p></p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#_3","title":"\u51c6\u5907\u5de5\u4f5c","text":"<p>\u5b89\u88c5\u4e00\u7cfb\u5217\u8f6f\u4ef6</p> <pre><code> sudo apt-get install libncurses5-dev openssl libssl-dev\n sudo apt-get install build-essential\n sudo apt-get install pkg-config\n sudo apt-get install libc6-dev\n sudo apt-get install bison\n sudo apt-get install flex\n sudo apt-get install libelf-dev\n sudo apt-get install zlibc minizip\n sudo apt-get install libidn11-dev libidn11\n</code></pre> <p>\u89e3\u538b\u5185\u6838\u6e90\u7801</p> <pre><code>tar -xavf linux-5.9.3.tar.xz\n</code></pre> <p>\u8fdb\u5165\u89e3\u538b\u540e\u7684\u76ee\u5f55\uff0c\u4f7f\u7528\u547d\u4ee4<code>make mrproper</code>\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5220\u9664\u6240\u6709\u7684\u7f16\u8bd1\u751f\u6210\u6587\u4ef6\u3001\u5185\u6838\u914d\u7f6e\u6587\u4ef6(.config \u6587\u4ef6)\u548c\u5404\u79cd\u5907\u4efd\u6587\u4ef6\uff0c\u6240\u4ee5\u51e0\u4e4e\u53ea\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u5185\u6838\u7f16\u8bd1\u524d\u624d\u7528\u8fd9\u6761\u547d\u4ee4</p> <p>\u5c06 boot \u76ee\u5f55\u4e0b\u7684\u5f53\u524d\u7cfb\u7edf\u5185\u6838\u7684 config \u914d\u7f6e\u4fe1\u606f\u590d\u5236\u4e00\u4efd\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u7684.config \u6587\u4ef6\u4e2d</p> <pre><code>linkchen@master:~/UserProgram/linux-5.9.3$ cp /boot/config-4.15.0-121-generic ./.config\n</code></pre> <p></p> <p>\u786e\u8ba4\u65e0\u8bef\u540e\uff0c\u8f93\u5165<code>make menuconfig</code>\u547d\u4ee4\uff0c\u6253\u5f00\u4e00\u4e2a\u56fe\u5f62\u754c\u9762</p> <p></p> <p>\u79fb\u52a8\u952e\u76d8\u5149\u6807\uff0c\u5230 Load \u4e0a\uff0c\u518d\u56de\u8f66\uff0c\u53ef\u4ee5\u770b\u5230\u786e\u8ba4\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u7684.config \u6587\u4ef6</p> <p></p> <p>\u9009\u62e9 OK \u540e\uff0c\u518d\u79fb\u52a8\u5230 Save \u4e0a\uff0c\u4fdd\u5b58\u5e76\u5173\u95ed\uff0c\u6700\u540e\u9009\u62e9\u9000\u51fa Exit</p> <p>\u8f93\u5165<code>make clean</code>\u547d\u4ee4\uff0c\u7528\u4e8e\u5220\u9664\u5927\u591a\u6570\u7684\u7f16\u8bd1\u751f\u6210\u6587\u4ef6\uff0c\u4f46\u662f\u4f1a\u4fdd\u7559\u5185\u6838\u7684\u914d\u7f6e\u6587\u4ef6.config\uff0c\u8fd8\u6709\u8db3\u591f\u7684\u7f16\u8bd1\u652f\u6301\u6765\u5efa\u7acb\u6269\u5c55\u6a21\u5757\u3002\u6240\u4ee5\u4f60\u82e5\u53ea\u60f3\u5220\u9664\u524d\u4e00\u6b21\u7f16\u8bd1\u8fc7\u7a0b\u7684\u6b8b\u7559\u6570\u636e\uff0c\u53ea\u9700\u6267\u884c make clean \u547d\u4ee4</p> <p>\u5728\u8fdb\u884c\u7f16\u8bd1\u4e4b\u524d\u8fd8\u9700\u8981\u5c06\u865a\u62df\u673a\u7684\u5b58\u50a8\u7a7a\u95f4\u6269\u5c55\uff0c\u5426\u5219\u4f1a\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3\u7684\u9519\u8bef\uff0c\u6269\u5c55\u53ef\u53c2\u8003\uff1aCSDN</p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#_4","title":"\u7f16\u8bd1\u5185\u6838","text":"<p>\u8f93\u5165\u547d\u4ee4<code>sudo make</code>\u5f00\u59cb\u7f16\u8bd1\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u81f3\u5c11\u4e24\u4e2a\u5c0f\u65f6\u5de6\u53f3</p> <p></p> <p>\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u8f93\u5165\u547d\u4ee4<code>du -sh</code>\u67e5\u770b\u7f16\u8bd1\u540e\u7684\u76ee\u5f55\u5927\u5c0f</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u6709 19GB</p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#_5","title":"\u5b89\u88c5\u5185\u6838","text":"<p>\u8f93\u5165<code>make modules_install</code>\uff0c\u5b89\u88c5\u5185\u6838\u6a21\u5757</p> <p></p> <p>\u8f93\u5165<code>sudo make install</code>\uff0c\u5b89\u88c5\u5185\u6838</p> <p></p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#linux","title":"Linux \u542f\u52a8\u8fc7\u7a0b\u56fe\u89e3","text":"<p>\u53c2\u8003\uff1ahttps://www.thegeekstuff.com/2011/02/linux-boot-process/</p>"},{"location":"blog/2020/11/04/linux-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8-ubuntu1804/#_6","title":"\u914d\u7f6e\u542f\u52a8\u5185\u6838","text":"<p>\u9996\u5148\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u5185\u6838\uff0c\u8f93\u5165<code>uname -a</code></p> <p></p> <p>\u8f93\u5165\u547d\u4ee4\uff0c\u67e5\u770b initrd.img \u7684\u4e0d\u540c\u5185\u6838\u7248\u672c</p> <p>initrd.img \u5373 boot loader initialized RAM disk\uff0c\u5c31\u662f\u7531 boot loader \u521d\u59cb\u5316\u7684\u5185\u5b58\u76d8</p> <p>\u5177\u4f53\u53ef\u53c2\u8003\uff1aCSDN</p> <pre><code>linkchen@master:~/UserProgram/linux-5.9.3$ sudo mkinitramfs -o /boot/initrd.img-\ninitrd.img-4.15.0-118-generic  initrd.img-4.15.0-121-generic  initrd.img-5.9.3\n</code></pre> <p>\u8f93\u5165\u547d\u4ee4</p> <ul> <li> <p><code>sudo mkinitramfs -o /boot/initrd.img-5.9.3</code></p> </li> <li> <p><code>sudo update-initramfs -c -k 5.9.3</code></p> </li> <li><code>update-grub2</code></li> </ul> <pre><code>linkchen@master:~/UserProgram/linux-5.9.3$ sudo mkinitramfs -o /boot/initrd.img-5.9.3\n[sudo] password for linkchen:\nlinkchen@master:~/UserProgram/linux-5.9.3$ sudo update-in\nupdate-inetd      update-info-dir   update-initramfs\nlinkchen@master:~/UserProgram/linux-5.9.3$ sudo update-in\nupdate-inetd      update-info-dir   update-initramfs\nlinkchen@master:~/UserProgram/linux-5.9.3$ sudo update-initramfs -c -k\n4.15.0-118-generic  4.15.0-121-generic  4.15.0-29-generic   5.9.3               all\nlinkchen@master:~/UserProgram/linux-5.9.3$ sudo update-initramfs -c -k 5.9.3\nupdate-initramfs: Generating /boot/initrd.img-5.9.3\nlinkchen@master:~/UserProgram/linux-5.9.3$ sudo update-grub2\nSourcing file `/etc/default/grub'\nGenerating grub configuration file ...\nFound linux image: /boot/vmlinuz-5.9.3\nFound initrd image: /boot/initrd.img-5.9.3\nFound linux image: /boot/vmlinuz-4.15.0-121-generic\nFound initrd image: /boot/initrd.img-4.15.0-121-generic\nFound linux image: /boot/vmlinuz-4.15.0-118-generic\nFound initrd image: /boot/initrd.img-4.15.0-118-generic\nFound memtest86+ image: /boot/memtest86+.elf\nFound memtest86+ image: /boot/memtest86+.bin\ndone\nlinkchen@master:~/UserProgram/linux-5.9.3$\n</code></pre> <p>\u8f93\u5165\u547d\u4ee4<code>sudo reboot</code>\u91cd\u542f\u8ba1\u7b97\u673a\uff0c\u518d\u6b21\u68c0\u67e5\u5185\u6838\u7248\u672c\uff0c\u8f93\u5165<code>uname -a</code></p> <p></p> <p>\u53d1\u73b0\u5185\u6838\u5df2\u7ecf\u6210\u529f\u5207\u6362\u4e86\u4e3a\u65b0\u7f16\u8bd1\u7684 5.9.3 \u7248\u672c</p>"},{"location":"blog/2020/11/09/ubuntu1804-nat-%E6%A8%A1%E5%BC%8F%E4%B8%8B%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81-ip-%E5%9C%B0%E5%9D%80/","title":"Ubuntu18.04 NAT \u6a21\u5f0f\u4e0b\u914d\u7f6e\u9759\u6001 IP \u5730\u5740","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p>"},{"location":"blog/2020/11/09/ubuntu1804-nat-%E6%A8%A1%E5%BC%8F%E4%B8%8B%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81-ip-%E5%9C%B0%E5%9D%80/#_1","title":"\u51c6\u5907\u5de5\u4f5c","text":"<p>\u5e73\u65f6\u4f7f\u7528 ssh \u8fde\u63a5\u865a\u62df\u673a\uff0c\u4f46\u662f\u53d1\u73b0\u4e00\u65e6\u5207\u6362\u4e86\u7f51\u7edc\u4ee5\u540e\uff0c\u865a\u62df\u673a\u7684 IP \u5730\u5740\u603b\u662f\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u90a3\u4e48\u5982\u4f55\u8bbe\u7f6e\u865a\u62df\u673a\u7684\u9759\u6001 IP \u5730\u5740\u5462</p> <p>\u6ce8\u610f\uff1aUbuntu18.04 \u662f\u901a\u8fc7\u4fee\u6539/etc/netplan \u76ee\u5f55\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6\u6765\u4fee\u6539 IP \u5730\u5740\u7684</p> <p>\u9996\u5148\u5728 VMware \u7684 Edit \u83dc\u5355\u4e0b\u627e\u5230\u865a\u62df\u7f51\u7edc\u8bbe\u7f6e</p> <p></p> <p>\u9009\u62e9\u53f3\u4e0b\u89d2\uff0c\u6539\u53d8\u8bbe\u7f6e</p> <p></p> <p>\u627e\u5230 VMnet8\uff0cNAT \u6a21\u5f0f\uff0c\u53bb\u6389\u4f7f\u7528\u672c\u5730 DHCP \u670d\u52a1\u7ed9\u865a\u62df\u673a\u5206\u914d IP \u5730\u5740</p> <p></p> <p>\u9009\u62e9 NAT \u8bbe\u7f6e\uff0c\u67e5\u770b NAT \u7f51\u5173 IP\uff0cGateway IP\uff0c\u8fd9\u91cc\u662f 192.168.42.2\uff0c\u5e76\u4e14\u5b50\u7f51\u63a9\u7801\u4e3a 255.255.255.0</p> <p></p> <p>\u6253\u5f00 cmd \u7ec8\u7aef\uff0c\u8f93\u5165 ipconfig\uff0c\u67e5\u770b VMnet8 \u5728\u672c\u673a\u7684 IPv4 \u5730\u5740</p> <p></p> <p>\u6211\u8fd9\u91cc\u662f 192.168.42.1\uff0c\u76ee\u524d\u6211\u4eec\u5f97\u5230\u4e86 3 \u4e2a IP \u5730\u5740\uff0c\u5206\u522b\u5982\u4e0b</p> <ul> <li>VMnet8 \u7684\u7f51\u7edc\u5730\u5740\uff1a192.168.42.0</li> <li>VMnet8 \u7684\u7f51\u5173\u5730\u5740\uff1a192.168.42.2</li> <li>\u672c\u673a VMnet8 \u7684 IPv4 \u5730\u5740\uff1a192.168.42.1</li> </ul>"},{"location":"blog/2020/11/09/ubuntu1804-nat-%E6%A8%A1%E5%BC%8F%E4%B8%8B%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81-ip-%E5%9C%B0%E5%9D%80/#_2","title":"\u6539\u5199\u914d\u7f6e\u6587\u4ef6","text":"<p>\u9996\u5148\u6539\u53d8 Ubuntu18.04 \u7684\u7f51\u7edc\u8fde\u63a5\u65b9\u5f0f\u4e3a NAT\uff0c\u7136\u540e\u6253\u5f00 Ubuntu18.04 \u7684\u7ec8\u7aef\uff0c\u9996\u5148\u67e5\u770b\u4f60\u7684\u7f51\u7edc\u540d\u79f0\uff0c\u4f7f\u7528 ifconfig\uff0c\u8fd9\u91cc\u662f ens33</p> <p>\u7136\u540e\u8f93\u5165<code>ls /etc/netplan/</code></p> <pre><code>linkchen@master:~$ ls /etc/netplan/\n01-network-manager-all.yaml\nlinkchen@master:~$\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c01-network-manager-all.yaml</p> <p>\u8f93\u5165\u547d\u4ee4<code>sudo vim /etc/netplan/01-network-manager-all.yaml</code>\u7f16\u8f91\u8be5\u6587\u4ef6</p> <p>\u5177\u4f53\u4fee\u6539\u9879\u76ee\uff1a\u3010\u6ce8\u610f yaml \u7684\u5bf9\u9f50\u683c\u5f0f\u548c\u5192\u53f7\u540e\u7684\u7a7a\u683c\uff0c\u5426\u5219\u540e\u7eed\u751f\u6548\u65f6\u4f1a\u51fa\u9519\u3011</p> <ul> <li>\u5728 network \u4e0b\u6dfb\u52a0\u4ee5\u592a\u7f51 ethernets</li> <li>\u5728 ethernets \u4e2d\u6dfb\u52a0\u4f60\u7684\u7f51\u7edc\u540d\u79f0\uff0c\u8fd9\u91cc\u662f ens33</li> <li>\u5728 ens33 \u4e2d\u6dfb\u52a0\u3010\u6ce8\u610f\u5192\u53f7\u540e\u7684\u7a7a\u683c\u3011<ul> <li>dhcp4: no</li> <li>dhcp6: no</li> <li>addresses: [192.168.42.*/24]\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f CIDR \u5212\u5206\u7684\u65b9\u5f0f\uff0c\u5176\u4e2d*\u53ef\u4ee5\u662f\u9664\u4e86 0\u30011\u30012 \u7684\u4efb\u4f55\u5c0f\u4e8e 255 \u7684\u6570\uff0c\u56e0\u4e3a 0\u30011\u30012 \u88ab\u4f7f\u7528\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a 100\uff0caddresses \u8fd9\u4e00\u5c5e\u6027\u5c31\u8bbe\u7f6e\u4e86\u865a\u62df\u673a\u7684\u9759\u6001 IP \u5730\u5740</li> <li>gateway4: 192.168.42.2\uff0c\u8fd9\u91cc\u4e3a\u4e4b\u524d\u6240\u67e5\u770b\u7684 VMnet8 \u7f51\u5173\u5730\u5740</li> <li>\u6dfb\u52a0 nameservers\uff0c\u57df\u540d\u670d\u52a1\u5668\uff0c\u5e76\u914d\u7f6e addresses: [114.114.114.114, 8.8.8.8]\uff0c\u8fd9\u4e00\u6761\u914d\u4e0d\u914d\u7f6e\u90fd\u884c</li> </ul> </li> </ul> <p>\u6240\u6709\u5185\u5bb9\u5982\u4e0b</p> 01-network-manager-all.yaml<pre><code># Let NetworkManager manage all devices on this system\nnetwork:\n    version: 2\n    renderer: NetworkManager\n    ethernets:\n        ens33:\n            dhcp4: no\n            dhcp6: no\n            addresses: [192.168.42.100/24]\n            gateway4: 192.168.42.2\n            nameservers:\n                addresses: [114.114.114.114, 8.8.8.8]\n</code></pre> <p>\u4fee\u6539\u6210\u529f\u540e\uff0c\u8f93\u5165<code>sudo netplan apply</code>\uff0c\u518d\u6b21\u8f93\u5165 ifconfig\uff0c\u67e5\u770b ip \u5730\u5740\u662f\u5426\u6539\u53d8</p> <pre><code>linkchen@master:~$ ifconfig\nens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 192.168.42.100  netmask 255.255.255.0  broadcast 192.168.42.255\n        inet6 fe80::20c:29ff:fec4:7cb  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 00:0c:29:c4:07:cb  txqueuelen 1000  (Ethernet)\n        RX packets 3933  bytes 1728376 (1.7 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 2033  bytes 226412 (226.4 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 854  bytes 87847 (87.8 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 854  bytes 87847 (87.8 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre>"},{"location":"blog/2020/11/09/ubuntu1804-nat-%E6%A8%A1%E5%BC%8F%E4%B8%8B%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81-ip-%E5%9C%B0%E5%9D%80/#vmnet8","title":"\u91cd\u542f VMnet8","text":"<p>\u8fd9\u4e00\u6b65\u975e\u5e38\u91cd\u8981\uff0c\u5426\u5219\u4e3b\u673a\u4f9d\u7136\u4f1a ping \u4e0d\u901a\u865a\u62df\u673a\uff0c\u627e\u5230 VMnet8 \u9002\u914d\u5668\uff0c\u9009\u62e9\u7981\u7528\uff0c\u8fc7\u51e0\u79d2\u949f\u540e\u518d\u542f\u7528\u5373\u53ef</p> <p></p> <p>\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u9759\u6001 IP \u5730\u5740\u6765\u8bbf\u95ee\u865a\u62df\u673a\u4e86\uff0c\u5982\u679c\u8fd8\u662f\u8fde\u63a5\u4e0d\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7 ping \u67e5\u770b\u4e3b\u673a\u4e0e\u865a\u62df\u673a\u7f51\u7edc\u662f\u5426\u8fde\u901a\uff0c\u5982\u679c\u4e0d\u901a\u53ef\u4ee5\u5c1d\u8bd5\u91cd\u542f\u4e3b\u673a\uff0c\u5982\u679c\u6b63\u5e38\u914d\u7f6e\u5219\u91cd\u542f\u540e\uff0c\u80fd\u4f7f\u7528\u9759\u6001 IP \u6765\u8bbf\u95ee\u865a\u62df\u673a</p>"},{"location":"blog/2021/08/05/%E6%8C%87%E9%92%88%E5%9E%8B%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E5%9E%8B%E6%8C%87%E9%92%88/","title":"\u6307\u9488\u578b\u51fd\u6570\u4e0e\u51fd\u6570\u578b\u6307\u9488","text":"<p>\u535a\u5ba2\u56ed\u94fe\u63a5</p>"},{"location":"blog/2021/08/05/%E6%8C%87%E9%92%88%E5%9E%8B%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E5%9E%8B%E6%8C%87%E9%92%88/#_2","title":"\u5b58\u50a8\u533a\u57df\u5212\u5206","text":"<ol> <li>\u6808 Stack \u53ef\u8bfb\u53ef\u5199\uff0c\u5b58\u50a8\u7a0b\u5e8f\u8fd0\u884c\u65f6\u51fd\u6570\u6216\u4ee3\u7801\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf(\u975e static \u53d8\u91cf)\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u548c\u91ca\u653e\u3002\u6808\u5c5e\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u5b83\u7684\u751f\u5b58\u671f\u4e3a\uff1a\u4ee3\u7801\u5757\u8fd0\u884c\u5c31\u5206\u914d\u7a7a\u95f4\uff0c\u4ee3\u7801\u5757\u7ed3\u675f\uff0c\u5c31\u81ea\u52a8\u56de\u6536\u7a7a\u95f4</li> <li>\u5806 Heap \u53ef\u8bfb\u53ef\u5199\uff0c\u5b58\u50a8\u7a0b\u5e8f\u8fd0\u884c\u65f6\u88ab\u7a0b\u5e8f\u5458\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u6bb5\uff0c\u5b83\u7684\u5927\u5c0f\u5e76\u4e0d\u56fa\u5b9a\uff0c\u53ef\u52a8\u6001\u6269\u5f20\u6216\u7f29\u51cf\u3002\u5806\u5c5e\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u4e3b\u8981\u901a\u8fc7 malloc, calloc, realloc, free \u7b49\u65b9\u6cd5\u6765\u7ba1\u7406</li> <li>\u4ee3\u7801\u6bb5 Code Segment / Text Segment \u4e00\u822c\u53ea\u8bfb\uff0c\u5b58\u50a8\u7a0b\u5e8f\u4ee3\u7801\u6307\u4ee4\uff0c\u8fd8\u6709\u53ef\u80fd\u5305\u542b\u4e00\u4e9b\u53ea\u8bfb\u7684\u5e38\u6570\u53d8\u91cf\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u5e38\u91cf\u7b49\u3002\u4ee3\u7801\u6bb5\u7684\u7a7a\u95f4\u5927\u5c0f\u5728\u4ee3\u7801\u8fd0\u884c\u524d\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0c\u5176\u7a7a\u95f4\u5206\u914d\u4ece\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u52a0\u8f7d\u800c\u6765\uff0c\u5c5e\u4e8e\u9759\u6001\u5185\u5b58\u5206\u914d\u3002</li> <li>\u6570\u636e\u6bb5 Data Segment \u53ef\u8bfb\u53ef\u5199\uff0c\u5b58\u50a8\u521d\u59cb\u5316\u7684(\u5168\u5c40\u548c\u5c40\u90e8\u8303\u56f4\u7684)\u9759\u6001\u53d8\u91cf\uff0c\u6570\u636e\u6bb5\u7684\u7a7a\u95f4\u5206\u914d\u4ece\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u52a0\u8f7d\u800c\u6765\uff0c\u5176\u7a7a\u95f4\u5927\u5c0f\u8fd0\u884c\u65f6\u4e0d\u4f1a\u6539\u53d8\uff0c\u5c5e\u4e8e\u9759\u6001\u5185\u5b58\u5206\u914d\u3002</li> <li>ROdata Segment (Read-Only data Segment) \u53ea\u8bfb\uff0c\u5b58\u50a8\u53ea\u8bfb\u6570\u636e\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u5e38\u91cf\u3001\u9759\u6001\u5e38\u91cf\u3001const \u4fee\u9970\u7684\u53d8\u91cf\u3001\u5b57\u9762\u91cf\u4ee5\u53ca\u9884\u7f16\u8bd1\u6307\u4ee4(#define \u7b49)\u5b9a\u4e49\u7684\u5e38\u91cf</li> <li>BSS Segement (Block Started by Symbol) \u53ef\u8bfb\u53ef\u5199\uff0c\u5c5e\u4e8e\u9759\u6001\u5185\u5b58\u5206\u914d\uff0c\u5b58\u50a8\u5168\u5c40\u8303\u56f4(file scope)\u4e2d\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u548c\u5e38\u91cf\uff0c\u4ee5\u53ca\u5c40\u90e8\u8303\u56f4\u4e2d\u672a\u521d\u59cb\u5316\u7684\u9759\u6001(static)\u53d8\u91cf\uff0c\u8fd8\u5305\u62ec\u88ab\u663e\u793a\u5730\u521d\u59cb\u5316\u4e3a 0 \u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf</li> </ol> <p>\u9644\u56fe Linux x86-64 run-time memory image</p> <p></p>"},{"location":"blog/2021/08/05/%E6%8C%87%E9%92%88%E5%9E%8B%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E5%9E%8B%E6%8C%87%E9%92%88/#function","title":"\u51fd\u6570 Function","text":"<p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u540d\u4e5f\u79f0\u4e3a\u51fd\u6570\u7684\u6307\u9488\uff0c\u51fd\u6570\u540d\u8868\u793a\u7684\u5c31\u662f\u51fd\u6570\u4f53\u7684\u9996\u5730\u5740</p>"},{"location":"blog/2021/08/05/%E6%8C%87%E9%92%88%E5%9E%8B%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E5%9E%8B%E6%8C%87%E9%92%88/#pointer-function","title":"\u6307\u9488\u578b\u51fd\u6570 Pointer Function","text":"<p>\u5b9a\u4e49</p> <p>\u6307\u9488\u578b\u51fd\u6570(a function that returns a pointer)\uff0c\u5176\u672c\u8d28\u662f\u4e2a\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u79cd\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u6307\u9488\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5373\u5185\u5b58\u4e2d\u7684\u67d0\u4e00\u4e2a\u5730\u5740\uff0c\u7b80\u5355\u6765\u8bf4\u9700\u8981\u5728\u51fd\u6570\u4f53\u4e2d\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u3002\u6307\u9488\u578b\u51fd\u6570\u58f0\u660e\u6216\u5b9a\u4e49\u7684\u65f6\u5019\u9700\u8981\u9075\u5faa\u7684\u89c4\u5219\u4e3a\uff1a<code>\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b* \u51fd\u6570\u540d(\u51fd\u6570\u5f62\u53c2\u5217\u8868)</code>\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u8fd4\u56de\u6307\u9488\u53d8\u91cf\u65f6\uff0c\u8be5\u6307\u9488\u53d8\u91cf\u4e0d\u80fd\u591f\u6307\u5411\u51fd\u6570\u4f53\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u56e0\u4e3a\u51fd\u6570\u4f53\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u662f\u5b58\u653e\u5728\u6808 Stack \u5f53\u4e2d\u7684\uff0c\u51fd\u6570\u5728\u6267\u884c\u7ed3\u675f\u540e\uff0c\u5176\u5185\u5b58\u4f1a\u88ab\u7f16\u8bd1\u5668\u81ea\u52a8\u91ca\u653e\uff0c\u8be5\u6307\u9488\u53d8\u91cf\u6307\u5411\u7684\u5185\u5bb9\u5c06\u4f1a\u53d8\u5f97\u4e0d\u786e\u5b9a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid correct_get_str(char* text)\n{\n    sprintf(text, \"%s\", \"correct\");\n}\n\nchar* wrong_get_str()\n{\n    char text[100] = { '\\0' };\n    sprintf(text, \"%s\", \"wrong\");\n    return text;\n}\n\nint main()\n{\n    printf(\"============Wrong Get Str===========\\n\");\n    char* wrong = wrong_get_str();\n    printf(\"%s\\n\", wrong);\n    printf(\"============Correct Get Str===========\\n\");\n    char text[100] = {'\\0'};\n    correct_get_str(text);\n    printf(\"%s\\n\", text);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>============Wrong Get Str===========\n\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\u70eb\n============Correct Get Str===========\ncorrect\n</code></pre> <p>\u9519\u8bef\u7684\u7528\u6cd5\u662f\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u5e76\u521d\u59cb\u5316\u5176\u5185\u5bb9\uff0c\u5728\u7528\u6307\u9488\u578b\u51fd\u6570\u8fd4\u56de\u8be5\u6307\u9488\u53d8\u91cf\uff0c\u800c\u6b63\u786e\u7684\u7528\u6cd5\u662f\u5728\u51fd\u6570\u7684\u5f62\u53c2\u4e2d\u58f0\u660e\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u5e76\u5728\u51fd\u6570\u4f53\u5185\u90e8\u6539\u53d8\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u4f20\u5165\u5728\u51fd\u6570\u5916\u90e8\u5b9a\u4e49\u7684\u6307\u9488\u53d8\u91cf\u5b9e\u53c2\uff0c\u6216\u8005\u662f\u5728\u51fd\u6570\u4f53\u5185\u4f7f\u7528 malloc \u63a7\u5236\u5806\u5185\u5b58\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u5185\u5b58\u7684\u5206\u914d\u4e0e\u91ca\u653e</p>"},{"location":"blog/2021/08/05/%E6%8C%87%E9%92%88%E5%9E%8B%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E5%9E%8B%E6%8C%87%E9%92%88/#function-pointer","title":"\u51fd\u6570\u578b\u6307\u9488 Function Pointer","text":"<p>\u5b9a\u4e49</p> <p>\u51fd\u6570\u578b\u6307\u9488(a pointer-to-function)\uff0c\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5176\u5f62\u5f0f\u4e0e\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u7684\u6307\u9488\u7c7b\u4f3c\uff0c\u4f46\u662f\u8fd9\u79cd\u6307\u9488\u662f\u6307\u5411\u67d0\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u529f\u80fd\u662f\u901a\u8fc7\u8be5\u6307\u9488\u8c03\u7528\u6240\u6307\u5411\u7684\u51fd\u6570\u3002\u51fd\u6570\u578b\u6307\u9488\u58f0\u660e\u6216\u5b9a\u4e49\u7684\u65f6\u5019\u9700\u8981\u9075\u5faa\u7684\u89c4\u5219\u4e3a\uff1a<code>\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b (*\u6307\u9488\u540d)(\u51fd\u6570\u5f62\u53c2\u5217\u8868)</code>\uff0c\u5176\u4e2d</p> <ul> <li><code>\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b</code>: \u9700\u8981\u4e0e\u5f85\u6307\u5411\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e00\u81f4</li> <li><code>(*\u6307\u9488\u540d)</code>: \u524d\u540e\u5fc5\u987b\u6709\u62ec\u53f7\uff0c\u5426\u5219<code>*</code>\u5c5e\u4e8e\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5219\u58f0\u660e\u53d8\u4e3a<code>\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b* \u51fd\u6570\u540d(\u51fd\u6570\u5f62\u53c2\u5217\u8868)</code>\uff0c\u662f\u4e00\u4e2a\u6307\u9488\u578b\u51fd\u6570</li> <li><code>\u51fd\u6570\u5f62\u53c2\u5217\u8868</code>: \u5fc5\u987b\u5199\u51fa\u51fd\u6570\u5f62\u53c2\u7684\u7c7b\u578b\uff0c\u9700\u8981\u4e0e\u5f85\u6307\u5411\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e00\u81f4\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u5199\u51fa\u5f62\u53c2\u7684\u540d\u79f0</li> </ul> <p>\u51fd\u6570\u578b\u6307\u9488\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u7b2c 1 \u6b65\u6307\u5411\u51fd\u6570\uff1a<code>\u6307\u9488\u540d = \u51fd\u6570\u540d</code>\uff0c\u7b2c 2 \u6b65\u4f7f\u7528\u6307\u9488\u540d\u8c03\u7528\u51fd\u6570\uff1a<code>\u6307\u9488\u540d(\u5b9e\u53c2\u5217\u8868)</code>\u6216\u8005<code>(*\u6307\u9488\u540d)(\u5b9e\u53c2\u5217\u8868)</code></p>"},{"location":"blog/2021/08/05/%E6%8C%87%E9%92%88%E5%9E%8B%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E5%9E%8B%E6%8C%87%E9%92%88/#_3","title":"\u6307\u9488\u578b\u51fd\u6570\u4e0e\u51fd\u6570\u578b\u6307\u9488\u7684\u4f7f\u7528\u5b9e\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n\n//\u666e\u901a\u51fd\u6570\nint print(int i)\n{\n    printf(\"%d\\n\", i);\n    return i;\n}\n\n//\u6307\u9488\u578b\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u4e3a\u6307\u9488\u7c7b\u578b\u7684\u6570\u636e\nint* pointer_function(int* i)\n{\n    printf(\"%d\\n\", *i);\n    return i;\n}\n\n//\u51fd\u6570\u578b\u6307\u9488\uff0c\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u4e0e\u88ab\u6307\u5411\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u5b8c\u5168\u4e00\u81f4\n//\u6ce8\u610f(*function_pointer1)\u7684\u62ec\u53f7\u5fc5\u987b\u8981\u52a0\u4e0a\nint (*function_pointer1)(int);\n\n//\u53c2\u6570\u4f4d\u51fd\u6570\u578b\u6307\u9488\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0efunction_pointer1\u7c7b\u4f3c\nint function_pointer2(int (*print)(int))\n{\n    print(2);\n    return 2;\n}\n\n//\u53c2\u6570\u4f4d\u51fd\u6570\u578b\u6307\u9488\uff0c\u6b64\u5904\u4e0d\u5199*\u4e5f\u53ef\u4ee5\uff0c\u53c2\u6570\u7c7b\u578b\u4e0efunction_pointer3\u76f8\u540c\nint function_pointer3(int print(int))\n{\n    print(3);\n    return 3;\n}\n\nint main()\n{\n    printf(\"\u6307\u9488\u578b\u51fd\u6570\\n\");\n    printf(\"Pointer Function\\n\");\n    int a = 1;\n    int* pointer = pointer_function(&amp;a);\n    printf(\"================================\\n\");\n    printf(\"\u51fd\u6570\u578b\u6307\u9488\\n\");\n    printf(\"Function Pointer 1\\n\");\n    function_pointer1 = print;\n    //\u8c03\u7528\u6240\u6307\u65b9\u6cd5\u7684\u4e24\u79cd\u65b9\u5f0f\n    function_pointer1(1);\n    (*function_pointer1)(1);\n    printf(\"Function Pointer 2\\n\");\n    function_pointer2(print);\n    printf(\"Function Pointer 3\\n\");\n    function_pointer3(print);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u6307\u9488\u578b\u51fd\u6570\nPointer Function\n1\n================================\n\u51fd\u6570\u578b\u6307\u9488\nFunction Pointer 1\n1\n1\nFunction Pointer 2\n2\nFunction Pointer 3\n3\n</code></pre> <p>\u5728 VS2019 \u4e2d\u901a\u8fc7 Debug\uff0c\u67e5\u770b\u6307\u9488\u578b\u51fd\u6570\u4e0e\u51fd\u6570\u578b\u6307\u9488\u7684\u7c7b\u578b\uff1a</p> <p></p> <ul> <li><code>pointer_funtion</code>\u6307\u9488\u578b\u51fd\u6570\uff0c\u5176\u7c7b\u578b\u4e3a<code>int* (int *)</code>\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a<code>int</code>\u6307\u9488</li> <li><code>funtion_pointer1</code>\u51fd\u6570\u578b\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a<code>int (*)(int)</code>\uff0c\u6307\u5411\u51fd\u6570<code>print</code>\uff0c<code>print</code>\u7684\u7c7b\u578b\u4e3a<code>int (int)</code></li> <li><code>funtion_pointer2</code>\u5f62\u53c2<code>int (*print)(int)</code>\u4e3a\u51fd\u6570\u578b\u6307\u9488\uff0c\u5176\u672c\u8eab\u7c7b\u578b\u4e3a<code>int (int (*)(int))</code>\uff0c\u5f62\u53c2\u7c7b\u578b\u4e3a <code>int (*)(int)</code></li> <li><code>funtion_pointer3</code>\u5f62\u53c2<code>int print(int)</code>\u4e5f\u662f\u51fd\u6570\u578b\u6307\u9488\uff0c\u4e0e funtion_pointer2 \u5b8c\u5168\u4e00\u81f4\uff0c\u6b64\u5904<code>(*print)</code>\u4e0e<code>print</code>\u6ca1\u6709\u533a\u522b\uff0c\u56e0\u4e3a\u51fd\u6570\u540d\u5c31\u662f\u51fd\u6570\u7684\u6307\u9488</li> </ul>"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/","title":"Shell \u8f93\u5165\u8f93\u51fa\u91cd\u5b9a\u5411\u4e0e\u5176\u4ed6\u7b26\u53f7","text":"<ol> <li>Linux \u4e00\u5207\u7686\u6587\u4ef6\uff0c\u5b57\u7b26\u8bbe\u5907\u3001\u5757\u8bbe\u5907\u6587\u4ef6\u90fd\u5728/dev \u76ee\u5f55\u4e2d</li> <li>File Descriptor \u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7f29\u5199 fd</li> </ol> <pre><code>usts@usts1060:~$ ll /dev/fd/\ntotal 0\ndr-x------ 2 usts usts  0 Jan 25 16:21 ./\ndr-xr-xr-x 9 usts usts  0 Jan 25 16:21 ../\nlrwx------ 1 usts usts 64 Jan 25 16:21 0 -&gt; /dev/pts/0\nlrwx------ 1 usts usts 64 Jan 25 16:21 1 -&gt; /dev/pts/0\nlrwx------ 1 usts usts 64 Jan 25 16:21 2 -&gt; /dev/pts/0\nlr-x------ 1 usts usts 64 Jan 25 16:21 3 -&gt; /proc/14015/fd/\nusts@usts1060:~$ ll /dev/std*\nlrwxrwxrwx 1 root root 15 Jan 25 13:19 /dev/stderr -&gt; /proc/self/fd/2\nlrwxrwxrwx 1 root root 15 Jan 25 13:19 /dev/stdin -&gt; /proc/self/fd/0\nlrwxrwxrwx 1 root root 15 Jan 25 13:19 /dev/stdout -&gt; /proc/self/fd/1\n</code></pre> \u6587\u4ef6\u63cf\u8ff0\u7b26 \u6587\u4ef6\u540d \u7c7b\u578b \u786c\u4ef6 0 stdin \u6807\u51c6\u8f93\u5165\u6587\u4ef6 \u952e\u76d8 1 stdout \u6807\u51c6\u8f93\u51fa\u6587\u4ef6 \u663e\u793a\u5668 2 stderr \u6807\u51c6\u9519\u8bef\u8f93\u51fa\u6587\u4ef6 \u663e\u793a\u5668"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#_1","title":"\u91cd\u5b9a\u5411","text":""},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#stdout-stderr","title":"stdout \u4e0e stderr \u91cd\u5b9a\u5411","text":"<p>\u8f93\u51fa\u91cd\u5b9a\u5411\u662f\u6307\u547d\u4ee4\u7684\u7ed3\u679c\u4e0d\u518d\u8f93\u51fa\u5230\u663e\u793a\u5668\u4e0a\uff0c\u800c\u662f\u8f93\u51fa\u5230\u5176\u5b83\u5730\u65b9\uff0c\u4e00\u822c\u662f\u6587\u4ef6\u4e2d</p> \u91cd\u5b9a\u5411\u7c7b\u578b \u4f7f\u7528\u7b26\u53f7 \u4f5c\u7528 stdout <code>command &gt; file</code> \u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\uff0c\u628a command \u7684\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d stdout <code>command &gt;&gt; file</code> \u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\uff0c\u628a command \u7684\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d stderr <code>command 2&gt; file</code> \u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\uff0c\u628a command \u7684\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d stderr <code>command 2&gt;&gt; file</code> \u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\uff0c\u628a command \u7684\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d stdout and stderr <code>command &gt; file 2&gt;&amp;1</code> \u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\uff0c\u628a\u6b63\u786e\u8f93\u51fa\u548c\u9519\u8bef\u4fe1\u606f\u540c\u65f6\u4fdd\u5b58\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d stdout and stderr <code>command &gt;&gt; file 2&gt;&amp;1</code> \u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\uff0c\u628a\u6b63\u786e\u8f93\u51fa\u548c\u9519\u8bef\u4fe1\u606f\u540c\u65f6\u4fdd\u5b58\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d stdout and stderr <code>command &gt; file1 2&gt; file2</code> \u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\uff0c\u628a\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u8f93\u51fa\u5230 file1 \u4e2d\uff0c\u628a\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230 file2 \u4e2d stdout and stderr <code>command &gt;&gt; file1 2&gt;&gt; file2</code> \u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\uff0c\u628a\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u8f93\u51fa\u5230 file1 \u4e2d\uff0c\u628a\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u5230 file2 \u4e2d"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#stdin","title":"stdin \u91cd\u5b9a\u5411","text":"<p>\u8f93\u5165\u91cd\u5b9a\u5411\u5c31\u662f\u6539\u53d8\u8f93\u5165\u7684\u65b9\u5411\uff0c\u4e0d\u518d\u4f7f\u7528\u952e\u76d8\u4f5c\u4e3a\u547d\u4ee4\u8f93\u5165\u7684\u6765\u6e90\uff0c\u800c\u662f\u4f7f\u7528\u6587\u4ef6\u4f5c\u4e3a\u547d\u4ee4\u7684\u8f93\u5165</p> \u7b26\u53f7 \u8bf4\u660e <code>command &lt; file</code> \u5c06 file \u4e2d\u7684\u5185\u5bb9\u4f5c\u4e3a command \u7684\u8f93\u5165 <code>command &lt; file1 &gt; file2</code> \u5c06 file1 \u4f5c\u4e3a command \u7684\u8f93\u5165\uff0c\u5e76\u5c06 command \u7684\u5904\u7406\u7ed3\u679c\u8f93\u51fa\u5230 file2"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#_2","title":"\u4e3e\u4f8b","text":"<ol> <li> <p><code>&gt;</code>: stdout redirection\uff0c\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\uff0coverwrite \u8986\u76d6\u5199</p> <pre><code>usts@usts1060:~$ touch a.txt\nusts@usts1060:~$ cat a.txt\nusts@usts1060:~$ echo \"hello\" &gt; a.txt\nusts@usts1060:~$ cat a.txt\nhello\nusts@usts1060:~$ echo \"world\" &gt; a.txt\nusts@usts1060:~$ cat a.txt\nworld\n</code></pre> </li> <li> <p><code>&gt;&gt;</code>: \u4e0e<code>&gt;</code>\u76f8\u540c\uff0c\u4f46\u662f append \u8ffd\u52a0\u5199</p> <pre><code>usts@usts1060:~$ echo \"hello world\" &gt;&gt; a.txt\nusts@usts1060:~$ cat a.txt\nworld\nhello world\n</code></pre> </li> <li> <p><code>&amp;&gt;</code>\u6216<code>&gt;&amp;</code>: stdout, stderr redirection\uff0c\u66f4\u504f\u5411\u4e8e\u4f7f\u7528<code>&amp;&gt;</code>\uff0c\u7b49\u4ef7\u4e8e<code>&gt; [file] 2&gt;&amp;1</code></p> <p><code>&amp;&gt;&gt;</code>\u7b49\u4ef7\u4e8e<code>&gt;&gt; [file] 2&gt;&amp;1</code></p> <pre><code>usts@usts1060:~$ stderr\nstderr: command not found\nusts@usts1060:~$ stderr &amp;&gt; a.txt\nusts@usts1060:~$ stderr &gt;&amp; a.txt\nusts@usts1060:~$ stderr &gt; a.txt 2&gt;&amp;1\nusts@usts1060:~$ cat a.txt\nstderr: command not found\n</code></pre> </li> <li> <p>\u5c06 stdout \u548c stderr \u5206\u522b\u8f93\u51fa\u5230\u4e0d\u540c\u6587\u4ef6\u4e2d</p> <pre><code>usts@usts1060:~$ ls -l a.txt\n-rw-rw-r-- 1 usts usts 24 Jan 25 21:06 a.txt\nusts@usts1060:~$ ls -l b.txt\nls: cannot access 'b.txt': No such file or directory\nusts@usts1060:~$ ls -l a.txt b.txt &gt; stdout.log 2&gt; stderr.log\nusts@usts1060:~$ cat stdout.log\n-rw-rw-r-- 1 usts usts 24 Jan 25 21:06 a.txt\nusts@usts1060:~$ cat stderr.log\nls: cannot access 'b.txt': No such file or directory\n</code></pre> </li> <li> <p><code>&lt;</code>: \u8f93\u5165\u91cd\u5b9a\u5411</p> <p><code>wc -l</code>: \u7edf\u8ba1\u884c\u6570</p> <pre><code>usts@usts1060:~$ cat a.txt\nhello\nhello\nhello\nhello\nusts@usts1060:~$ wc -l &lt; a.txt\n4\n</code></pre> </li> </ol>"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#_3","title":"\u7ba1\u9053","text":"<ol> <li><code>|</code>: \u7ba1\u9053\uff0c\u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u8f93\u51fa\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u6761\u547d\u4ee4\u7684\u8f93\u5165\uff0c\u53ea\u8fde\u63a5 stdout</li> <li><code>|&amp;</code>: \u9664\u4e86 stdout \u5916\uff0c\u8fd8\u8fde\u63a5\u4e86 stderr\uff0c\u662f<code>2&gt;&amp;1 |</code>\u7684\u7f29\u5199</li> </ol> <pre><code>usts@usts1060:~$ ps -ef | grep \"python\"\nroot       949     1  0 13:19 ?        00:00:00 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers\nroot      1012     1  0 13:19 ?        00:00:00 /usr/bin/python3 /usr/share/unattended-upgrades/unattended-upgrade-shutdown --wait-for-signal\nusts     16919  9849  0 16:31 pts/0    00:00:00 grep --color=auto python\n</code></pre>"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#_4","title":"\u5176\u4ed6\u7b26\u53f7","text":"<ol> <li> <p><code>&amp;&amp;</code>: and\uff0c \u4e0a\u4e00\u6761\u547d\u4ee4\u6267\u884c\u6210\u529f\u540e\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u6761\u547d\u4ee4</p> </li> <li> <p><code>||</code>: or\uff0c\u4e0a\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\u540e\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u6761\u547d\u4ee4</p> <pre><code>usts@usts1060:~$ ls &amp;&amp; ls\nDesktop  Documents  Downloads  linkchen  Music  Pictures  Public  Templates  Videos\nDesktop  Documents  Downloads  linkchen  Music  Pictures  Public  Templates  Videos\nusts@usts1060:~$ ls || ls\nDesktop  Documents  Downloads  linkchen  Music  Pictures  Public  Templates  Videos\nusts@usts1060:~$ lll || ls\n\nCommand 'lll' not found, did you mean:\n\n  command 'lli' from deb llvm-runtime\n  command 'dll' from deb brickos\n  command 'llc' from deb llvm\n  command 'llt' from deb storebackup\n\nTry: sudo apt install &lt;deb name&gt;\n\nDesktop  Documents  Downloads  linkchen  Music  Pictures  Public  Templates  Videos\n</code></pre> </li> <li> <p><code>&amp;</code>: \u653e\u5728\u547d\u4ee4\u6700\u540e\uff0c\u4f7f\u4efb\u52a1\u5728\u540e\u53f0\u6267\u884c\uff0c\u4e0e nohup \u4e00\u8d77\u4f7f\u7528\uff0c\u7ed3\u5408 stdout, stderr \u91cd\u5b9a\u5411\u4fdd\u5b58\u7a0b\u5e8f\u8fd0\u884c\u65e5\u5fd7</p> <pre><code>nohup python -u train.py &gt; ./models/log/train4.log 2&gt;&amp;1 &amp;\nnohup tensorboard --logdir=runs --bind_all &amp;&gt; /var/log/tensorboard.log &amp;\nnohup jupyter notebook &amp;&gt; /var/log/jupyter.log &amp;\n</code></pre> </li> </ol>"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#_5","title":"\u67e5\u770b\u76ee\u5f55\u4e2d\u6587\u4ef6\u6570\u91cf","text":"<ol> <li>\u4e0d\u5305\u542b\u5b50\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u6570\u91cf\uff0c <code>ls -l [dir] | grep \"^-\" | wc -l</code></li> <li>\u5305\u542b\u5b50\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 \u6570\u91cf\uff0c<code>ls -lR [dir] | grep \"^-\" | wc -l</code></li> <li>\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5939\u6570\u91cf\uff0c\u4e0d\u542b\u5b50\u76ee\u5f55\uff0c<code>ls -l [dir] | grep \"^d\" | wc -l</code></li> <li>\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5939\u6570\u91cf\uff0c\u5305\u542b\u5b50\u76ee\u5f55\uff0c<code>ls -lR [dir] | grep \"^d\" | wc -l</code></li> <li><code>-R, --recursive list subdirectories recursively</code></li> <li><code>^-</code> \u5339\u914d\u6587\u4ef6\uff0c<code>^d</code> \u5339\u914d\u76ee\u5f55</li> <li><code>man wc</code> print newline, word, and byte counts for each file</li> <li><code>wc -l</code> \u7edf\u8ba1\u8f93\u51fa\u4fe1\u606f\u7684\u884c\u6570</li> </ol>"},{"location":"blog/2022/01/25/shell-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E5%85%B6%E4%BB%96%E7%AC%A6%E5%8F%B7/#_6","title":"\u53c2\u8003\u9605\u8bfb","text":"<ol> <li>GNU Bash Manual Redirections</li> <li>GNU Bash Manual Pipelines</li> <li>GNU Bash Manual List of Commands</li> </ol>"},{"location":"blog/2022/02/06/nginx-ssl-https-%E9%85%8D%E7%BD%AE/","title":"NGINX SSL HTTPS \u914d\u7f6e","text":"<p>NGINX \u5b98\u65b9\u5165\u95e8\u6587\u6863</p> <p>\u7f16\u8f91 https.conf \u6587\u4ef6\uff0c\u5982\u4e0b\uff0c\u5e76\u653e\u5728 nginx.conf \u76ee\u5f55\u4e2d</p> https.conf<pre><code>server {\n    listen 80;\n    server_name yourdomain.com; #\u9700\u8981\u5c06yourdomain.com\u66ff\u6362\u6210\u8bc1\u4e66\u7ed1\u5b9a\u7684\u57df\u540d\u3002\n    rewrite ^(.*)$ https://$host$1; #\u5c06\u6240\u6709HTTP\u8bf7\u6c42\u901a\u8fc7rewrite\u6307\u4ee4\u91cd\u5b9a\u5411\u5230HTTPS\u3002\n    location / {\n        index index.html index.htm;\n    }\n}\n\nserver {\n    listen 443 ssl;\n    #\u914d\u7f6eHTTPS\u7684\u9ed8\u8ba4\u8bbf\u95ee\u7aef\u53e3\u4e3a443\u3002\n    #\u5982\u679c\u672a\u5728\u6b64\u5904\u914d\u7f6eHTTPS\u7684\u9ed8\u8ba4\u8bbf\u95ee\u7aef\u53e3\uff0c\u53ef\u80fd\u4f1a\u9020\u6210Nginx\u65e0\u6cd5\u542f\u52a8\u3002\n    #\u5982\u679c\u60a8\u4f7f\u7528Nginx 1.15.0\u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u8bf7\u4f7f\u7528listen 443 ssl\u4ee3\u66fflisten 443\u548cssl on\u3002\n    server_name yourdomain.com; #\u9700\u8981\u5c06yourdomain.com\u66ff\u6362\u6210\u8bc1\u4e66\u7ed1\u5b9a\u7684\u57df\u540d\u3002\n    root html;\n    index index.html index.htm;\n    ssl_certificate cert/cert-file-name.pem;  #\u9700\u8981\u5c06cert-file-name.pem\u66ff\u6362\u6210\u5df2\u4e0a\u4f20\u7684\u8bc1\u4e66\u6587\u4ef6\u7684\u540d\u79f0\u3002\n    ssl_certificate_key cert/cert-file-name.key; #\u9700\u8981\u5c06cert-file-name.key\u66ff\u6362\u6210\u5df2\u4e0a\u4f20\u7684\u8bc1\u4e66\u79c1\u94a5\u6587\u4ef6\u7684\u540d\u79f0\u3002\n    ssl_session_timeout 5m;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    #\u8868\u793a\u4f7f\u7528\u7684\u52a0\u5bc6\u5957\u4ef6\u7684\u7c7b\u578b\u3002\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #\u8868\u793a\u4f7f\u7528\u7684TLS\u534f\u8bae\u7684\u7c7b\u578b\u3002\n    ssl_prefer_server_ciphers on;\n    location / {\n        root html;  #\u7ad9\u70b9\u76ee\u5f55\u3002\n        index index.html index.htm;\n    }\n}\n</code></pre> <p>\u5176\u4e2d\uff0ccert \u6587\u4ef6\u5939\u5728<code>/etc/nginx</code>\u76ee\u5f55\u4e0b\uff0cpem \u548c key \u6587\u4ef6\u7531 SSL \u8bc1\u4e66\u670d\u52a1\u5546\u63d0\u4f9b</p>"},{"location":"blog/2022/03/15/windows10-scancode-map-%E6%98%A0%E5%B0%84%E6%8C%89%E9%94%AE/","title":"Windows10 Scancode Map \u6620\u5c04\u6309\u952e","text":"<p>\u5c06 Scoll Lock \u6620\u5c04\u4e3a Caps Lock\uff0c\u5c06 Caps Lock \u6620\u5c04\u4e3a Escape</p> <p> Scan code mapper for keyboards</p> Start offset (in bytes) Size (in bytes) Data 0 4 Header: Version Information 4 4 Header: Flags 8 4 Header: Number of Mappings 12 4 Individual Mapping ... ... ... Last 4 bytes 4 Null Terminator (0x00000000) <ol> <li>4 \u5b57\u8282\u7248\u4fe1\u606f\uff0c\u5168 0</li> <li>4 \u5b57\u8282\u6807\u5fd7\uff0c\u5168 0</li> <li>4 \u5b57\u8282\u6620\u5c04\u6570\u91cf\uff0c<code>0x 00 00 00 03</code>\u6620\u5c04\u6570\u91cf\u4e3a 3\uff0c\u4f4e\u5b57\u8282\u5199\u9ad8\u5730\u5740\uff0c\u5199\u4e3a<code>03 00 00 00</code></li> <li>...\uff0c<code>00 3a</code> Caps Lock\uff0c<code>00 46</code> Scroll Lock\uff0c<code>00 01</code> Escape\uff0c\u5199\u6cd5\u540c 3<ul> <li><code>3a 00 46 00</code> Scroll Lock \u6620\u5c04\u4e3a Caps Lock</li> <li><code>01 00 3a 00</code> Caps Lock \u6620\u5c04\u4e3a Escape</li> </ul> </li> <li> <p>4 \u5b57\u8282\u7ec8\u6b62\uff0c\u5168 0</p> <pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout]\n\"Scancode Map\"=hex:00,00,00,00,00,00,00,00,03,00,00,00,3a,00,46,00,01,00,3a,00,00,00,00,00\n</code></pre> </li> <li> <p>\u5176\u4ed6\u952e\u4f4d\u67e5\u8be2\uff0c\u4e0b\u8f7d\uff0c\u7ae0\u8282 Scan Code Table</p> </li> </ol> <p>\u5176\u4ed6\u65b9\u6cd5\u8fd8\u53ef\u4ee5\u4f7f\u7528Power Toy\u5b8c\u6210\u6620\u5c04</p>"},{"location":"blog/2022/03/17/base64-%E7%BC%96%E7%A0%81/","title":"Base64 \u7f16\u7801","text":""},{"location":"blog/2022/03/17/base64-%E7%BC%96%E7%A0%81/#table-rfc-4648","title":"Table RFC 4648","text":"Index Binary Char Index Binary Char Index Binary Char Index Binary Char 0 000000 <code>A</code> 16 010000 <code>Q</code> 32 100000 <code>g</code> 48 110000 <code>w</code> 1 000001 <code>B</code> 17 010001 <code>R</code> 33 100001 <code>h</code> 49 110001 <code>x</code> 2 000010 <code>C</code> 18 010010 <code>S</code> 34 100010 <code>i</code> 50 110010 <code>y</code> 3 000011 <code>D</code> 19 010011 <code>T</code> 35 100011 <code>j</code> 51 110011 <code>z</code> 4 000100 <code>E</code> 20 010100 <code>U</code> 36 100100 <code>k</code> 52 110100 <code>0</code> 5 000101 <code>F</code> 21 010101 <code>V</code> 37 100101 <code>l</code> 53 110101 <code>1</code> 6 000110 <code>G</code> 22 010110 <code>W</code> 38 100110 <code>m</code> 54 110110 <code>2</code> 7 000111 <code>H</code> 23 010111 <code>X</code> 39 100111 <code>n</code> 55 110111 <code>3</code> 8 001000 <code>I</code> 24 011000 <code>Y</code> 40 101000 <code>o</code> 56 111000 <code>4</code> 9 001001 <code>J</code> 25 011001 <code>Z</code> 41 101001 <code>p</code> 57 111001 <code>5</code> 10 001010 <code>K</code> 26 011010 <code>a</code> 42 101010 <code>q</code> 58 111010 <code>6</code> 11 001011 <code>L</code> 27 011011 <code>b</code> 43 101011 <code>r</code> 59 111011 <code>7</code> 12 001100 <code>M</code> 28 011100 <code>c</code> 44 101100 <code>s</code> 60 111100 <code>8</code> 13 001101 <code>N</code> 29 011101 <code>d</code> 45 101101 <code>t</code> 61 111101 <code>9</code> 14 001110 <code>O</code> 30 011110 <code>e</code> 46 101110 <code>u</code> 62 111110 <code>+</code> 15 001111 <code>P</code> 31 011111 <code>f</code> 47 101111 <code>v</code> 63 111111 <code>/</code> Padding ="},{"location":"blog/2022/03/17/base64-%E7%BC%96%E7%A0%81/#example","title":"Example","text":"\\[ 3\\times8=4\\times6 \\] <ol> <li>3 \u5b57\u8282\uff0c\u6bcf\u4e2a\u5b57\u8282 8bit\uff0c\u5171 24bit\uff0cbase64 \u5206\u5272 4 \u6b21\uff0c\u6bcf\u6b21 6bit\uff0c\u5e76\u8f6c\u5316\u4e3a 4 \u5b57\u8282\uff0c\u6bcf\u4e2a\u5b57\u8282\u4e3a 2 \u4e2a<code>00</code>+6bit</li> <li>2 \u5b57\u8282\uff0c16bit \u5206\u5272 3 \u6b21\uff0c3 \u5b57\u8282\uff0c\u524d 2 \u6b21 6bit \u540c 1\uff0c\u6700\u540e 1 \u6b21 4bit\uff0c\u5f00\u5934\u8865<code>00</code>\uff0c\u7ed3\u5c3e\u8865<code>00</code>\uff0c\u6700\u540e\u8865<code>=</code>\u8fbe\u5230 4 \u5b57\u8282</li> <li>1 \u5b57\u8282\uff0c8bit \u5206\u5272 2 \u6b21\uff0c\u7b2c 1 \u6b21 6bit \u540c 1\uff0c\u7b2c 2 \u6b21 2bit\uff0c\u5f00\u5934\u8865<code>00</code>\uff0c\u7ed3\u5c3e\u8865<code>0000</code>\uff0c\u6700\u540e\u8865<code>==</code>\u8fbe\u5230 4 \u5b57\u8282</li> </ol>"},{"location":"blog/2022/03/17/base64-%E7%BC%96%E7%A0%81/#hel","title":"\"hel\"","text":"<ol> <li><code>ord(c)</code> Given a string representing one Unicode character, return an integer representing the Unicode code point of that character.</li> <li><code>bin(x)</code> Convert an integer number to a binary string prefixed with \u201c0b\u201d.</li> </ol> <pre><code>&gt;&gt;&gt; ord('h'), bin(ord('h'))\n(104, '0b1101000')\n&gt;&gt;&gt; ord('e'), bin(ord('e'))\n(101, '0b1100101')\n&gt;&gt;&gt; ord('l'), bin(ord('l'))\n(108, '0b1101100')\n&gt;&gt;&gt; raw = '01101000'+'01100101'+'01101100'\n&gt;&gt;&gt; int(raw[:6], 2), int(raw[6:12], 2), int(raw[12:18], 2), int(raw[18:24], 2)\n(26, 6, 21, 44)\n</code></pre> <p><code>(26, 6, 21, 44)</code>\u67e5\u8868<code>aGVs</code>\uff0c\u9a8c\u8bc1\uff1a</p> <pre><code>&gt;&gt;&gt; import base64\n&gt;&gt;&gt; base64.b64encode(b'hel')\nb'aGVs'\n</code></pre>"},{"location":"blog/2022/03/17/base64-%E7%BC%96%E7%A0%81/#lo","title":"\"lo\"","text":"<pre><code>&gt;&gt;&gt; ord('l'), bin(ord('l'))\n(108, '0b1101100')\n&gt;&gt;&gt; ord('o'), bin(ord('o'))\n(111, '0b1101111')\n&gt;&gt;&gt; raw = '01101100'+'01101111'\n&gt;&gt;&gt; int(raw[:6], 2), int(raw[6:12], 2), int('00'+raw[12:16]+'00', 2)\n(27, 6, 60)\n</code></pre> <p><code>(27, 6, 60)</code>\u67e5\u8868<code>bG8</code>\uff0c\u4e0d\u8db3 4 \u5b57\u8282\u8865<code>=</code>\uff0c<code>bG8=</code>\uff0c\u9a8c\u8bc1\uff1a</p> <pre><code>&gt;&gt;&gt; base64.b64encode(b'lo')\nb'bG8='\n</code></pre>"},{"location":"blog/2022/03/17/base64-%E7%BC%96%E7%A0%81/#a","title":"\"a\"","text":"<pre><code>&gt;&gt;&gt; ord('a'), bin(ord('a'))\n(97, '0b1100001')\n&gt;&gt;&gt; raw = '01100001'\n&gt;&gt;&gt; int(raw[:6], 2), int('00'+raw[6:8]+'0000', 2)\n(24, 16)\n</code></pre> <p><code>(24, 16)</code>\u67e5\u8868<code>YQ</code>\uff0c\u4e0d\u8db3 4 \u5b57\u8282\u8865<code>==</code>\uff0c<code>YQ==</code>\uff0c\u9a8c\u8bc1\uff1a</p> <pre><code>&gt;&gt;&gt; base64.b64encode(b'a')\nb'YQ=='\n</code></pre>"},{"location":"blog/2022/03/24/office2021-%E5%AE%89%E8%A3%85-mathtype-%E6%8F%92%E4%BB%B6/","title":"Office2021 \u5b89\u88c5 MathType \u63d2\u4ef6","text":"<ol> <li>MathType \u7248\u672c 7.4.8</li> <li>Offcie2021 \u7248\u672c LTSC 2202 64bit</li> </ol>"},{"location":"blog/2022/03/24/office2021-%E5%AE%89%E8%A3%85-mathtype-%E6%8F%92%E4%BB%B6/#word","title":"Word","text":"<p>\u64cd\u4f5c\uff0c\u6839\u636e 64/32bit \u51b3\u5b9a\uff0c\u6b64\u5904\u4e3a 64bit\uff0cMathType \u5b89\u88c5\u8def\u5f84\u4f9d\u60c5\u51b5\u800c\u5b9a</p> <ul> <li><code>E:\\Program Files (x86)\\MathType\\MathPage\\64\\MathPage.will</code> \u79fb\u52a8\u5230 <code>C:\\Program Files\\Microsoft Office\\root\\Office16</code> \u76ee\u5f55\u4e0b</li> <li><code>E:\\Program Files (x86)\\MathType\\Office Support\\64\\MathType Commands 2016.dotm</code> \u79fb\u52a8\u5230 <code>C:\\Program Files\\Microsoft Office\\root\\Office16\\STARTUP</code> \u76ee\u5f55\u4e0b</li> <li> <p>Word -&gt; File -&gt; Options -&gt; Trust Center -&gt; Trust Center Settings -&gt; Trusted Locations -&gt; Add new location</p> <ul> <li>Path: <code>C:\\Program Files\\Microsoft Office\\root\\Office16\\STARTUP\\</code></li> <li>Description (Optional): <code>MathType</code></li> </ul> </li> <li> <p>\u91cd\u542f Word \u5373\u53ef</p> </li> </ul>"},{"location":"blog/2022/03/24/office2021-%E5%AE%89%E8%A3%85-mathtype-%E6%8F%92%E4%BB%B6/#powerpoint","title":"Powerpoint","text":"<ul> <li><code>E:\\Program Files (x86)\\MathType\\Office Support\\64\\MathType AddIn (PowerPoint 2016).ppam</code> \u79fb\u52a8\u5230 <code>C:\\Users\\[username]\\AppData\\Roaming\\Microsoft\\AddIns</code> \u76ee\u5f55\u4e0b\uff0cusername \u4f9d\u60c5\u51b5\u800c\u5b9a</li> <li>Powerpoint -&gt; Options -&gt; Add-ins -&gt; Manage -&gt; Powerpoint Add-ins -&gt; Go -&gt; Add New -&gt; \u9009\u62e9\u521a\u521a\u590d\u5236\u7684\u6587\u4ef6</li> <li>\u91cd\u542f Powerpoint \u5373\u53ef</li> </ul>"},{"location":"blog/2022/04/14/macos-%E5%BF%AB%E6%8D%B7%E9%94%AE/","title":"macOS \u5feb\u6377\u952e","text":"<p>\u4ece Windows \u8fc7\u6e21\u5230 macOS</p> <ul> <li>Win == Command <code>&lt;C&gt;</code></li> <li>Alt == Option <code>&lt;O&gt;</code></li> <li>Shift == Shift <code>&lt;S&gt;</code></li> <li> <p>Delete == Backspace <code>&lt;B&gt;</code></p> </li> <li> <p>\u590d\u5236 <code>&lt;C-c&gt;</code></p> </li> <li>\u7c98\u8d34 <code>&lt;C-v&gt;</code></li> <li>\u590d\u5236+\u526a\u5207 <code>&lt;C-O-v&gt;</code></li> <li>\u64a4\u9500 <code>&lt;C-z&gt;</code></li> <li>\u91cd\u505a <code>&lt;C-S-z&gt;</code></li> <li>\u5220\u9664 <code>&lt;C-B&gt;</code></li> <li>\u5f7b\u5e95\u5220\u9664 <code>&lt;C-S-B&gt;</code></li> </ul>"},{"location":"blog/2022/04/14/macos-%E5%BF%AB%E6%8D%B7%E9%94%AE/#_1","title":"\u5f00\u53d1\u8f6f\u4ef6","text":"<ol> <li>\u7ec8\u7aef iterm2</li> <li>\u6587\u672c\u7f16\u8f91\u5668 sublime, VSCode</li> <li>\u6548\u7387\u8f6f\u4ef6 Alfred</li> <li>\u5305\u7ba1\u7406 homebrew</li> </ol>"},{"location":"blog/2022/05/16/%E5%A6%82%E4%BD%95%E7%B2%BE%E8%AF%BB%E8%AE%BA%E6%96%87/","title":"\u5982\u4f55\u7cbe\u8bfb\u8bba\u6587","text":""},{"location":"blog/2022/05/16/%E5%A6%82%E4%BD%95%E7%B2%BE%E8%AF%BB%E8%AE%BA%E6%96%87/#_2","title":"\u8bba\u6587\u7ed3\u6784","text":"<ol> <li>Title \u6807\u9898</li> <li>Abstract \u6458\u8981</li> <li>Introduction \u4ecb\u7ecd</li> <li>Method \u65b9\u6cd5</li> <li>Experiment \u5b9e\u9a8c</li> <li>Conclusion \u7ed3\u8bba</li> </ol> <p>\u4e09\u904d\u8bfb\u4e00\u7bc7\u8bba\u6587</p>"},{"location":"blog/2022/05/16/%E5%A6%82%E4%BD%95%E7%B2%BE%E8%AF%BB%E8%AE%BA%E6%96%87/#pass-1","title":"Pass 1 \u6d77\u9009","text":"<ol> <li>\u6807\u9898\uff1a\u662f\u5426\u548c\u81ea\u5df1\u7684\u7814\u7a76\u65b9\u5411\u76f8\u5173</li> <li>\u6458\u8981\uff1a\u4ecb\u7ecd\u8bba\u6587\u5728\u505a\u4ec0\u4e48</li> <li>\u7ed3\u8bba\uff1a\u5bf9\u5e94\u6458\u8981\uff0c\u5728\u6458\u8981\u4e2d\u63d0\u51fa\u7684\u4e00\u4e24\u4e2a\u95ee\u9898\uff0c\u7528\u7ed3\u8bba\u548c\u6570\u5b57\u8bc1\u660e</li> <li>\u5b9e\u9a8c\uff1a\u5173\u952e\u7684\u56fe\u548c\u8868\u3010\u7565\u8bfb\u3011</li> <li>\u7565\u8bfb\u65b9\u6cd5\uff1a\u56fe\u548c\u8868\u3010\u7565\u8bfb\u3011</li> </ol> <p>\u76ee\u6807\uff1a\u82b1\u5341\u51e0\u5206\u949f\uff0c\u4e86\u89e3\u8bba\u6587\u5728\u8bb2\u4ec0\u4e48\u5185\u5bb9\uff0c\u8d28\u91cf\u9ad8\u4f4e\uff0c\u7ed3\u679c\u5982\u4f55\uff0c\u65b9\u6cd5\u600e\u4e48\u6837\uff0c\u662f\u5426\u9002\u5408\u81ea\u5df1\u3002\u5982\u679c\u51b3\u5b9a\u8981\u8bfb\uff0c\u8fdb\u5165 Pass 2</p>"},{"location":"blog/2022/05/16/%E5%A6%82%E4%BD%95%E7%B2%BE%E8%AF%BB%E8%AE%BA%E6%96%87/#pass-2","title":"Pass 2 \u7cbe\u9009","text":"<ol> <li>\u8fc7\u4e00\u904d\u6574\u7bc7\u6587\u7ae0\uff1a\u77e5\u9053\u6bcf\u4e00\u5757\u5728\u505a\u4ec0\u4e48</li> <li>\u6cbf\u7740\u6807\u9898\u4e00\u76f4\u5f80\u4e0b\u8bfb\u5230\u6700\u540e\uff0c\u5ffd\u7565\u7ec6\u8282\uff0c\u5982\u516c\u5f0f\u3001\u8bc1\u660e</li> <li>\u641e\u6e05\u695a\u91cd\u8981\u7684\u56fe\u548c\u8868\uff0c\u5982\u65b9\u6cd5\u7684\u6d41\u7a0b\u56fe\u3001\u7b97\u6cd5\u56fe\u3001\u5b9e\u9a8c\u56fe\u7684 x \u8f74 y \u8f74</li> <li>\u4f5c\u8005\u63d0\u51fa\u7684\u65b9\u6cd5\u548c\u522b\u4eba\u7684\u65b9\u6cd5\u662f\u5982\u4f55\u5bf9\u6bd4\u7684\uff0c\u5dee\u8ddd\u6709\u591a\u5927</li> <li>\u628a\u4e00\u4e9b\u76f8\u5173\u7684\u6587\u732e\u5708\u51fa\u6765\uff0c\u6bd4\u5982\u6587\u4e2d\u7814\u7a76\u3010\u67d0\u4e2a\u95ee\u9898\u7684\u63d0\u51fa\u8005\u3011\u3001\u6587\u4e2d\u7684\u65b9\u6cd5\u662f\u5728\u3010\u67d0\u7bc7\u8bba\u6587\u7684\u65b9\u6cd5\u3011\u6539\u8fdb\u800c\u6765\u3002</li> </ol> <p>\u76ee\u6807\uff1a\u5bf9\u8bba\u6587\u7684\u5404\u4e2a\u90e8\u5206\u6709\u4e00\u4e2a\u5927\u6982\u7684\u4e86\u89e3\uff0c\u4e0d\u9700\u8981\u7279\u522b\u641e\u61c2\u5177\u4f53\u7ec6\u8282\u3002\u5982\u679c\u6587\u7ae0\u592a\u96be\uff0c\u53ef\u4ee5\u53bb\u8bfb\u6587\u4e2d\u5f15\u7528\u7684\u76f8\u5173\u6587\u732e\uff0c\u8bfb\u5b8c\u95e8\u69db\u66f4\u4f4e\u7684\u6587\u7ae0\uff0c\u518d\u56de\u6765\u8bfb\u3002\u5982\u679c\u7ee7\u7eed\u7cbe\u8bfb\uff0c\u8fdb\u5165 Pass3</p>"},{"location":"blog/2022/05/16/%E5%A6%82%E4%BD%95%E7%B2%BE%E8%AF%BB%E8%AE%BA%E6%96%87/#pass-3","title":"Pass 3 \u91cd\u70b9\u7814\u8bfb","text":"<ol> <li>\u5728\u8bfb\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u8111\u6d77\u91cc\u4e0d\u65ad\u91cd\u590d\u5b9e\u73b0\u6587\u7ae0\u3002</li> <li>\u4f5c\u8005\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u7528\u4ec0\u4e48\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\u3002\u60f3\u8c61\u81ea\u5df1\u6765\u89e3\u51b3\u6587\u7ae0\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u7528\u4ec0\u4e48\u65b9\u6cd5\u6765\u5b9e\u73b0\u3002</li> <li>\u4f5c\u8005\u5728\u5b9e\u9a8c\u4e2d\u7684\u8fc7\u7a0b\u548c\u65b9\u6cd5\uff0c\u60f3\u8c61\u81ea\u5df1\u6765\u505a\u5b9e\u9a8c\uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff0c\u80fd\u5426\u505a\u5f97\u66f4\u597d\u3002</li> <li>\u4f5c\u8005\u5728\u6587\u7ae0\u4e2d\u63d0\u51fa\u7684\u6ca1\u6709\u7ee7\u7eed\u6df1\u5165\u7814\u7a76\u7684\u5185\u5bb9\uff0c\u60f3\u8c61\u81ea\u5df1\u80fd\u5426\u7ee7\u7eed\u524d\u8fdb\u3002</li> </ol> <p>\u76ee\u6807\uff1a\u77e5\u9053\u8bba\u6587\u7684\u6bcf\u4e00\u53e5\u8bdd\u5728\u505a\u4ec0\u4e48\uff0c\u6bcf\u4e00\u6bb5\u5728\u8bf4\u4ec0\u4e48\uff0c\u80fd\u591f\u4ece\u5927\u8111\u4e2d\u590d\u73b0\u8bba\u6587\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u628a\u63e1\u6574\u4e2a\u8bba\u6587\u7684\u7ec6\u8282\u3002\u79bb\u5f00\u6587\u7ae0\u4e5f\u80fd\u56de\u5fc6\u8d77\u7ec6\u8282\u90e8\u5206\uff0c\u80fd\u591f\u57fa\u4e8e\u6587\u7ae0\u505a\u7814\u7a76\uff0c\u8be6\u7ec6\u5730\u590d\u8ff0\u6587\u7ae0\u5185\u5bb9\u3002</p>"},{"location":"blog/2022/05/16/%E5%A6%82%E4%BD%95%E7%B2%BE%E8%AF%BB%E8%AE%BA%E6%96%87/#references","title":"References","text":"<ol> <li>Bilibili \u674e\u6c90 \u5982\u4f55\u8bfb\u8bba\u6587\u3010\u8bba\u6587\u7cbe\u8bfb\u3011</li> <li>Github \u674e\u6c90 \u6df1\u5ea6\u5b66\u4e60\u8bba\u6587\u7cbe\u8bfb</li> </ol>"},{"location":"courses/","title":"Courses Index","text":""},{"location":"courses/Algorithms/introduction/","title":"Introduction","text":"<p>Algorithms by Jeff Erickson</p> <ol> <li>CS374 Fall 2023</li> <li>CS473 Fall 2022</li> </ol>","tags":["Updating"]},{"location":"courses/CSAPP/introduction/","title":"Introduction","text":"<p>CSAPP: Computer Systems: A Programmer's Perspective</p> <ol> <li>Textbook: Computer Systems: A Programmer's Perspective, 3/E (CS:APP3e))</li> <li>CMU Fall 2015 schedule, slides, labs: 15-213/15-513/14-513 Introduction to Computer Systems (ICS)</li> <li>Bilibili: Lecture Videos</li> </ol>","tags":["Updating"]},{"location":"courses/CSAPP/introduction/#schedule","title":"Schedule","text":"<p>1 \u5929 1 \u4e2a Lecture\uff0c\u4e00\u5171 26 \u4e2a Lectures</p>","tags":["Updating"]},{"location":"courses/CSAPP/introduction/#labs","title":"Labs","text":"<p>Lab Assignments</p> <ol> <li>Data Lab: Bit-level operations. Manipulating bits.</li> <li>Bomb Lab: Assembly language, debugger. Defusing a binary bomb.</li> <li>Attack Lab (64-bit): Stack discipline, buffer overflow attacks. The basics of code injection attacks.</li> <li>Cache Lab: Minimize the number of misses on a simulated cache. Building a cache simulator and optimizing for locality.</li> <li>Shell Lab: Writing Unix shell. Concurrency.</li> <li>Malloc Lab: Writing malloc package. Data Layout and organization. Systems-level programming.</li> <li>Proxy Lab: Writing Web proxy. Network programming. Concurrency and synchronization.</li> <li>Architecture Lab: Y86-64 array copying function, interactions between hardware and software.</li> <li>Performance Lab</li> </ol> <p>Lab1: due L04 floating point</p> <p>Lab2: due L06 machine control</p> <p>Lab3: due L10 optimization</p> <p>Lab4: due L12 cache memories</p> <p>Lab5: due L18 vm systems</p> <p>Lab6: due L20 malloc advanced</p> <p>Lab7: due L26 parallelism</p>","tags":["Updating"]},{"location":"courses/CSAPP/lab/","title":"Lab Notes","text":"","tags":["Updating"]},{"location":"courses/CSAPP/lab/#1-data-lab","title":"1 Data Lab","text":"<ol> <li> <p><code>isTmax(int x)</code>\uff0c\u5361\u5728\u5982\u4f55\u533a\u5206<code>0x7ff...f (TMax)</code>\u548c<code>0xff...f (-1)</code>\uff0c\u65b9\u6cd5\u4e3a<code>!(-1+1)==1</code>\uff0c\u800c<code>!(n+1)==0, n!=-1</code>\u3002</p> </li> <li> <p><code>int n; n^n == 0</code>\uff0c\u56e0\u6b64<code>int a,b; if (a == b)</code>\u76f8\u5f53\u4e8e<code>if !(a ^ b)</code></p> </li> <li> <p><code>isAsciiDigit(int x)</code>\uff0c\u5361\u5728\u5982\u4f55\u5224\u65ad<code>0&lt;=n&lt;=9</code>\uff0c\u65b9\u6cd5\u4e3a<code>n-10&lt;0</code>\uff0c<code>-10</code>\u4e3a<code>~10+1</code>\uff0c<code>&lt;0</code>\u5219\u7b26\u53f7\u4e3a<code>1</code></p> </li> <li> <p><code>-1 = 0xFF...F</code>\uff0c<code>-1</code>\u4e8c\u8fdb\u5236\u8865\u7801\u4e3a\u5168 1\uff0c\u5219<code>-1^n=~n, -1&amp;n=n, -1|n=-1</code>\uff0c<code>~0=-1</code></p> </li> <li> <p><code>int isLessOrEqual(int x, int y)</code>\uff0c\u601d\u8def\u662f\u7b26\u53f7\u4e0d\u540c\u6b63\u6570\u4e3a\u5927\uff0c\u4e8c\u662f\u7b26\u53f7\u76f8\u540c\u770b\u5dee\u503c\u7b26\u53f7\u3002\u7b26\u53f7\u4e0d\u540c\u65f6\uff0c\u76f8\u51cf\u6c42\u5dee\u503c\u53ef\u80fd\u6ea2\u51fa\uff0c\u6240\u4ee5\u76f4\u63a5\u5224\u65ad\u6b63\u6570\u4e3a\u5927\uff1b\u7b26\u53f7\u76f8\u540c\u65f6\u76f8\u51cf\u6c42\u5dee\u503c\u7684\u7b26\u53f7\u3002</p> </li> <li> <p><code>int howManyBits(int x)</code>\uff0c\u601d\u8def\uff1a\u5bf9\u4e8e<code>0</code>\uff0c\u8fd4\u56de<code>1</code>\uff1b\u5bf9\u4e8e\u6b63\u6570\uff0c\u8fd4\u56de\u4ece\u8865\u7801\u7b2c\u4e00\u4e2a\u4e3a<code>1</code>\u4ee5\u540e\u7684 bits \u957f\u5ea6<code>+1</code>\uff0c<code>+1</code>\u4e3a\u6b63\u6570\u7684\u7b26\u53f7\u4f4d<code>0</code>\uff1b\u5bf9\u4e8e\u8d1f\u6570\uff0c\u8fd4\u56de\u8865\u7801\u7b2c\u4e00\u4e2a\u4e3a<code>0</code>\u4ee5\u540e\u7684 bits \u957f\u5ea6<code>+1</code>\uff0c<code>+1</code>\u4e3a\u8d1f\u6570\u7684\u7b26\u53f7\u4f4d<code>1</code></p> </li> </ol>","tags":["Updating"]},{"location":"courses/CSAPP/lecture/","title":"Lecture Notes","text":"","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#01-overview","title":"01 Overview","text":"<ol> <li> <p>Sign-Magnitude:</p> </li> <li> <p>Positive Numbers: The most significant bit (MSB) is the sign bit (0 for positive).</p> </li> <li>Negative Numbers: The sign bit is 1, and the remaining bits represent the magnitude of the negative number.</li> </ol> <p>Example:</p> <ul> <li><code>+6</code> is represented as <code>0 0110</code> (sign bit 0, magnitude 6).</li> <li> <p><code>-6</code> is represented as <code>1 0110</code> (sign bit 1, magnitude 6).</p> </li> <li> <p>One's Complement:</p> </li> <li> <p>Positive Numbers: Same as unsigned binary representation.</p> </li> <li>Negative Numbers: To represent a negative number, invert (flip) all the bits.</li> </ul> <p>Example:</p> <ul> <li><code>+6</code> is represented as <code>0 0110</code>.</li> <li> <p><code>-6</code> is represented as <code>1 1001</code> (inverting all bits of <code>0 0110</code>).</p> </li> <li> <p>Two's Complement:</p> </li> <li> <p>Positive Numbers: Same as unsigned binary representation.</p> </li> <li>Negative Numbers: To represent a negative number, invert all bits and add 1.</li> </ul> <p>Example:</p> <ul> <li><code>+6</code> is represented as <code>0 0110</code>.</li> <li> <p><code>-6</code> is represented as <code>1 1010</code> (inverting all bits of <code>0 0110</code> and adding 1).</p> </li> <li> <p>Integer overflow:</p> <pre><code>(lldb) print 40000 * 40000\n(int) 1600000000\n(lldb) print 50000 * 50000\n(int) -1794967296\n01101010111111010000011100000000 (1794967296)\nbin(int(invert_bits(np.binary_repr(1794967296)[1:]), 2)+1)\n10010101000000101111100100000000 (50000 * 50000)\n</code></pre> <p>In a 32-bit system:</p> \\[ \\begin{align*}   50000 * 50000 &amp;= 2,500,000,000 \\\\   2^{31} - 1 &amp;= 2,147,483,647 \\\\   2,500,000,000 &amp;&gt; 2,147,483,647 \\\\ \\end{align*} \\] </li> <li> <p>Integer arithmetic is commutative and associative.</p> <pre><code>(lldb) print 400 * 500 * 600\n(int) 120000000\n(lldb) print 300 * 400 * 500 * 600\n(int) 1640261632\n(lldb) print 400 * 500 * 600 * 300\n(int) 1640261632\n</code></pre> </li> <li> <p>Limitations of floating-point arithmetic:</p> </li> </ul> <pre><code>&gt;&gt;&gt; (1e20 + -1e20) + 3.14\n3.14\n&gt;&gt;&gt; 1e20 + (-1e20 + 3.14)\n0.0\n&gt;&gt;&gt; -1e20 + 3.14\n-1e+20\n</code></pre> <ul> <li> <p><code>3.14</code> compared to <code>-1e+20</code> is so insignificant.</p> </li> <li> <p>Round-off error in Floats</p> </li> </ul>","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#02-bits-bytes-and-integer","title":"02 Bits, Bytes and Integer","text":"","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#bit-level-manipulations","title":"Bit-level Manipulations","text":"<p><code>a = 0110 1001</code>\u4e3a<code>1</code>\u7684\u4f4d\u6570<code>{0,3,5,6}</code></p> <p><code>b = 0101 0101</code>\u4e3a<code>1</code>\u7684\u4f4d\u6570<code>{0,2,4,6}</code></p> <ol> <li><code>&amp;</code> bitwise and \u76f8\u5f53\u4e8e intersection\uff0cab \u7684\u4ea4\u96c6\u4e3a<code>{0,6}</code>\uff0c<code>0100 0001</code></li> <li><code>|</code> bitwise or \u76f8\u5f53\u4e8e union\uff0cab \u7684\u5e76\u96c6\u4e3a<code>{0,2,3,4,5,6}</code>\uff0c<code>0111 1101</code></li> <li><code>^</code> bitwise x-or \u76f8\u5f53\u4e8e symmetric difference\uff0cab \u53d6\u4e0d\u540c\u7684\u503c<code>{2,3,4,5}</code>\uff0c<code>0011 1100</code></li> <li><code>~</code> bitwise not \u76f8\u5f53\u4e8e complement\uff0cb \u7684\u8865\u96c6\u4e3a<code>{1,3,5,7}</code>\uff0c<code>1010 1010</code></li> </ol> <p><code>c = 1010 0010</code></p> <ol> <li>Left shift \u4e0d\u533a\u5206 Logical \u8fd8\u662f Arithmetic\uff0c<code>c &lt;&lt; 3 = 0001 0000</code></li> <li>Right shift \u533a\u5206<ul> <li>Logical: Fill with 0\u2019s on left\uff0c\u81ea\u5de6\u8fb9\u586b\u5145 0\uff0c<code>c Log. &gt;&gt; 2 = 0010 1000</code></li> <li>Arithmetic: Replicate most significant bit on left\uff0c\u4ee5\u7b26\u53f7\u4f4d\u7684\u6570\u5b57\u586b\u5145\uff0c<code>c Arith. &gt;&gt; 2 = 1110 1000</code></li> </ul> </li> </ol> <p>C Programming:</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  unsigned char a = 0b01101001;\n  unsigned char b = 0b01010101;\n  char c = 0b10100010;\n  unsigned char tmp;\n  printf(\"a &amp; b = 0x%x\\n\", a &amp; b);\n  printf(\"a | b = 0x%x\\n\", a | b);\n  printf(\"a ^ b = 0x%x\\n\", a ^ b);\n  tmp = ~b;\n  printf(\"~b = 0x%x\\n\", tmp);\n  tmp = c &lt;&lt; 3;\n  printf(\"c &lt;&lt; 3 = 0x%x\\n\", tmp);\n  tmp = (unsigned char)c &gt;&gt; 2;\n  printf(\"c Log. &gt;&gt; 2 = 0x%x\\n\", tmp);\n  tmp = c &gt;&gt; 2;\n  printf(\"c Arith. &gt;&gt; 2 = 0x%x\\n\", tmp);\n  return 0;\n}\n\n/* a &amp; b = 0x41\n * a | b = 0x7d\n * a ^ b = 0x3c\n * ~b = 0xaa\n * c &lt;&lt; 3 = 0x10\n * c Log. &gt;&gt; 2 = 0x28\n * c Arith. &gt;&gt; 2 = 0xe8 */\n</code></pre> <ol> <li> <p>C \u8bed\u8a00\uff0c\u65e0\u7b26\u53f7\u7c7b\u578b\u79fb\u4f4d\u90fd\u662f Logical\uff0c\u5176\u4ed6\u79fb\u4f4d\u90fd\u662f Arithmetic</p> </li> <li> <p>Python \u4e2d\uff0c\u53f3\u79fb\u90fd\u662f Arithmetic\uff0c\u8d1f\u6570\u7684<code>bin, oct, hex</code>\u663e\u793a\u7684\u662f\u8d1f\u7684\u539f\u7801\uff0c\u5b9e\u9645\u5b58\u50a8\u7528\u7684\u4f9d\u7136\u662f\u8865\u7801\uff0c\u5982\u679c\u60f3\u76f4\u63a5\u6253\u5370\u8d1f\u6570<code>n</code>\u7684\u8865\u7801\uff0c\u4f7f\u7528<code>hex(n &amp; 0xff...f)</code>\uff0c\u5176\u4e2d<code>0xff...f</code>\u4e3a word size</p> <pre><code>&gt;&gt;&gt; bin(3), bin(-3), hex(3), hex(-3), hex(-3 &amp; 0xffffffff)\n('0b11', '-0b11', '0x3', '-0x3', '0xfffffffd')\n</code></pre> </li> <li> <p>Java \u4e2d\uff0cLogical \u53f3\u79fb<code>&gt;&gt;</code>\uff0cArithmetic \u53f3\u79fb<code>&gt;&gt;&gt;</code></p> </li> </ol>","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#numeric-ranges","title":"Numeric Ranges","text":"<p><code>w</code>\u8868\u793a word size \u4f4d\u6570\u3001\u5b57\u957f</p> <ol> <li> <p>Unsigned Values</p> <ul> <li> <p>\\(UMin=0\\) <code>000...0</code></p> </li> <li> <p>\\(Umax=2^w-1\\) <code>111...1</code></p> </li> </ul> </li> <li> <p>Two's Complement Values</p> <ul> <li> <p>\\(TMin=-2^w-1\\) <code>100...0</code></p> </li> <li> <p>\\(TMax=2^{w-1}-1\\) <code>011...1</code></p> </li> </ul> </li> <li> <p>T2B: Two's complement to Bits, U2B: Unsigned to Bits, B2U, B2T, T2U, U2T</p> </li> <li> <p>For \\(w=16\\),</p> <ul> <li> <p>\\(UMax=65535=0xFFFF\\)</p> </li> <li> <p>\\(TMax=32767=0x7FFF\\)</p> </li> <li> <p>\\(TMin=-32768=0x8000\\)</p> </li> <li> <p>\\(-1=0xFFFF\\)</p> </li> </ul> </li> <li> <p>\u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u6570\u503c\u8303\u56f4\u5b58\u50a8\u5728<code>/usr/include/limits.h</code>\u4e2d\uff1a</p> <pre><code>\u276f cat /usr/include/limits.h | grep 'LONG_MAX\\|LONG_MIN'\n#   define LONG_MAX     9223372036854775807L\n#   define LONG_MAX     2147483647L\n#  define LONG_MIN      (-LONG_MAX - 1L)\n#   define ULONG_MAX    18446744073709551615UL\n#   define ULONG_MAX    4294967295UL\n#   define LLONG_MAX    9223372036854775807LL\n#   define LLONG_MIN    (-LLONG_MAX - 1LL)\n#   define ULLONG_MAX   18446744073709551615ULL\n/* The &lt;limits.h&gt; files in some gcc versions don't define LLONG_MIN,\n  LLONG_MAX, and ULLONG_MAX.  Instead only the values gcc defined for\n# ifndef LLONG_MIN\n#  define LLONG_MIN     (-LLONG_MAX-1)\n# ifndef LLONG_MAX\n#  define LLONG_MAX     __LONG_LONG_MAX__\n# ifndef ULLONG_MAX\n#  define ULLONG_MAX    (LLONG_MAX * 2ULL + 1)\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#conversion-casting","title":"Conversion, casting","text":"<p>C \u8bed\u8a00\u4e2d\uff0cunsigned \u548c signed \u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06 signed \u8f6c\u5316\u4e3a unsigned\u3002\u5728\u4efb\u4f55\u5730\u65b9\u51fa\u73b0 unsigned \u53d8\u91cf\uff0c\u5173\u4e8e\u5b83\u6240\u6709\u7684\u8fd0\u7b97\u90fd\u4f1a\u53d8\u6210 unsigned\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  int a = -1;\n  unsigned int b = 0U;\n  printf(\"%d &gt; %uU = %d\\n\", a, b, a &gt; b);\n  /* a = (1 &lt;&lt; 31) - 1; produce overflow warning */\n  a = 2147483647;\n  b = 1 &lt;&lt; 31;\n  printf(\"(int)%uU = %d\\n\", b, (int)b);\n  printf(\"%d &gt; (int)%uU = %d\\n\", a, b, a &gt; (int)b);\n  return 0;\n}\n\n/* -1 &gt; 0U = 1\n * (int)2147483648U = -2147483648\n * 2147483647 &gt; (int)2147483648U = 1 */\n</code></pre> <p>\u5bb9\u6613\u53d1\u751f\u7684\u9519\u8bef\uff0c\u5bfc\u81f4\u6b7b\u5faa\u73af\uff1a</p> <ul> <li> <p><code>unsigned i; for (i = n; i &gt;= 0; i--)</code> <code>i</code> always greater than or equal to <code>0</code></p> </li> <li> <p><code>int i; for (i = n; i-sizeof(int) &gt;= 0; i--)</code> <code>sizeof()</code> return a unsigned value</p> </li> </ul>","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#sign-extension","title":"Sign Extension","text":"<p>MSB (Most Significant Bit) \u6700\u9ad8\u6709\u6548\u4f4d\uff0c\u4e8c\u8fdb\u5236\u4e2d\u4ee3\u8868\u6700\u9ad8\u503c\u7684\u6bd4\u7279\u4f4d\uff0c\u8fd9\u4e00\u4f4d\u5bf9\u6570\u503c\u7684\u5f71\u54cd\u6700\u5927\u3002LSB (Least Significant Bit) \u6700\u4f4e\u6709\u6548\u4f4d\uff0c\u4e8c\u8fdb\u5236\u4e2d\u4ee3\u8868\u6700\u4f4e\u503c\u7684\u6bd4\u7279\u4f4d\u3002</p> <ol> <li> <p>Task:</p> <ul> <li> <p>Given <code>w</code> bit signed integer <code>x</code></p> </li> <li> <p>Convert it to <code>w+k</code> bit integer with same value</p> </li> </ul> </li> <li> <p>Rule:</p> <ul> <li> <p>Make <code>k</code> copies of sign bit:</p> </li> <li> <p>\\(X'=X_{w-1},\\dots,X_{w-1},X_{w-1},X_{w-2},\\dots,X_{0}\\)</p> </li> <li> <p>where \\(X_{w-1}\\dots X_{w-1},X_{w-1}\\) are <code>k</code> copies of MSB</p> </li> </ul> </li> </ol>","tags":["Updating"]},{"location":"courses/CSAPP/lecture/#add-multiplication-shifting-negation","title":"Add, multiplication, shifting, negation","text":"<ol> <li> <p>Add</p> <ul> <li> <p>Unsigned: \\(UAdd_w(u,v)=u+v\\ mod\\ 2^w\\)</p> </li> <li> <p>Two's Complement: \\(u+v\\geq2^{w-1}\\) positive overflow, sum becomes negative. \\(u+v\\lt-2^{w-1}\\) negative overflow, sum becomes positive.</p> <pre><code>negative overflow: char a = -128 - 1 = 127\npositive overflow: unsigned char b = 255 + 1 = 0\n</code></pre> </li> </ul> </li> <li> <p>Multiplication</p> <ul> <li> <p>Unsigned: \\(UMult_w(u,v)=u\\cdot v\\ mod\\ 2^w\\)</p> </li> <li> <p>Two's Complement: Ignore high order <code>w</code> bits</p> </li> </ul> </li> <li> <p>Shift: \\(u&lt;&lt;k=u\\cdot 2^k\\), \\(u&gt;&gt;k=\\lfloor{u/2^k}\\rfloor\\)</p> </li> <li> <p>Negation: \u5bf9\u4e8e\u4ee5 Two's Complement \u5b58\u50a8\u7684\u6574\u6570<code>n</code>\uff0c\u5f53\\(TMin&lt;x\\leq TMax\\)\uff0c\u5982\u679c\u9700\u8981 negate \u53d6\u8d1f\u503c\uff0c\u53ea\u9700\u8981<code>~n+1</code>\uff0c\u5373\u53d6\u53cd\u52a0 1</p> <pre><code>int c = 2147483647;\n-c = ~(c) + 1 = -2147483647\nint c = -2147483648;\n-c = -2147483648\n~(c) + 1 = -2147483648\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/assignment/","title":"\u4f5c\u4e1a","text":"","tags":["Updating"]},{"location":"courses/InternLM/assignment/#l2-demo","title":"L2 \u8f7b\u677e\u73a9\u8f6c\u4e66\u751f\u00b7\u6d66\u8bed\u5927\u6a21\u578b\u8da3\u5473 Demo","text":"<p>\u7b14\u8bb0\u5730\u5740</p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_2","title":"\u73af\u5883\u914d\u7f6e","text":"Config vimrc <ol> <li> <p>Clone this repo, and install vim-plug:</p> <pre><code>git clone https://github.com/linkch0/vimrc.git ~/.vimrcs\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n</code></pre> </li> <li> <p>Edit and paste in <code>~/.vimrc</code>:</p> <pre><code>set runtimepath+=~/.vimrcs\nsource ~/.vimrcs/plugin.vim\nsource ~/.vimrcs/basic.vim\nsource ~/.vimrcs/map.vim\n</code></pre> </li> <li> <p>Install plugins in vim:</p> <pre><code>:PlugInstall\n:source ~/.vimrc\n</code></pre> </li> </ol> Config zsh <ol> <li> <p>Install zsh and tmux:</p> <p><code>apt install -y zsh tmux</code></p> <p><code>chsh -s $(which zsh)</code></p> </li> <li> <p>Install oh-my-zsh:</p> <p><code>sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"</code></p> </li> <li> <p>Install powerlevel10k:</p> <ul> <li> <p>Clone the repository:</p> <p><code>git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k</code></p> </li> <li> <p>Set <code>ZSH_THEME=\"powerlevel10k/powerlevel10k\"</code> in <code>~/.zshrc</code></p> </li> <li> <p>Restart terminal to config p10k.</p> </li> </ul> </li> <li> <p>Install zsh-autosuggestions:</p> <ul> <li> <p>Clone this repository into <code>$ZSH_CUSTOM/plugins</code> (by default <code>~/.oh-my-zsh/custom/plugins</code>):</p> <p><code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</code></p> </li> <li> <p>Add the plugin to the list of plugins for Oh My Zsh to load (inside <code>~/.zshrc</code>):</p> <pre><code>plugins=( \n    # other plugins...\n    zsh-autosuggestions\n)\n</code></pre> </li> <li> <p>Start a new terminal session.</p> </li> </ul> </li> <li> <p>[Optional] Set vi-mode plugin in <code>~/.zshrc</code> and restart terminal:</p> <pre><code>plugins=( \n    # other plugins...\n    vi-mode\n)\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_3","title":"\u57fa\u7840\u4f5c\u4e1a","text":"<ul> <li> InternLM-Chat-7B \u6a21\u578b\u751f\u6210 300 \u5b57\u7684\u5c0f\u6545\u4e8b</li> </ul> <p>Info</p> <ol> <li>\u4ed3\u5e93\u5730\u5740\uff1ahttps://github.com/internlm/InternLM</li> <li>\u57fa\u4e8e commit <code>aaaf4d7b0eef8a44d308806381f38a8bbd6e27de</code></li> <li><code>cli_demo.py</code> tutorial \u4ee3\u7801\u5730\u5740</li> </ol> <ol> <li> <p>Command Line Demo</p> cli_demo.py<pre><code>import torch\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\n\n\nmodel_name_or_path = \"/root/model/Shanghai_AI_Laboratory/internlm-chat-7b\"\n\ntokenizer = AutoTokenizer.from_pretrained(model_name_or_path, trust_remote_code=True)\nmodel = AutoModelForCausalLM.from_pretrained(model_name_or_path, trust_remote_code=True, torch_dtype=torch.bfloat16, device_map='auto')\nmodel = model.eval()\n\nsystem_prompt = \"\"\"You are an AI assistant whose name is InternLM (\u4e66\u751f\u00b7\u6d66\u8bed).\n- InternLM (\u4e66\u751f\u00b7\u6d66\u8bed) is a conversational language model that is developed by Shanghai AI Laboratory (\u4e0a\u6d77\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4). It is designed to be helpful, honest, and harmless.\n- InternLM (\u4e66\u751f\u00b7\u6d66\u8bed) can understand and communicate fluently in the language chosen by the user such as English and \u4e2d\u6587.\n\"\"\"\n\nmessages = [(system_prompt, '')]\n\nprint(\"=============Welcome to InternLM chatbot, type 'exit' to exit.=============\")\n\nwhile True:\n    input_text = input(\"User  &gt;&gt;&gt; \")\n    input_text = input_text.replace(' ', '')\n    if input_text == \"exit\":\n        break\n    response, history = model.chat(tokenizer, input_text, history=messages)\n    messages.append((input_text, response))\n    print(f\"robot &gt;&gt;&gt; {response}\")\n</code></pre> <p>\u8fd0\u884c\u6548\u679c\uff1a</p> <p></p> </li> <li> <p>Streamlit Web Demo:</p> <ul> <li> <p>\u5c06 <code>web_demo.py</code> \u4e2d\u7684\u6a21\u578b\u8def\u5f84\u4fee\u6539\u4e3a\u672c\u5730\u8def\u5f84\uff0c<code>git diff</code>:</p> <pre><code>diff --git a/web_demo.py b/web_demo.py\nindex 26de0ba..7105d63 100644\n--- a/web_demo.py\n+++ b/web_demo.py\n@@ -26,11 +26,11 @@ def on_btn_click():\n @st.cache_resource\n def load_model():\n     model = (\n-        AutoModelForCausalLM.from_pretrained(\"internlm/internlm-chat-7b\", trust_remote_code=True)\n+        AutoModelForCausalLM.from_pretrained(\"/root/model/Shanghai_AI_Laboratory/internlm-chat-7b\", trust_remote_code=True)\n         .to(torch.bfloat16)\n         .cuda()\n     )\n-    tokenizer = AutoTokenizer.from_pretrained(\"internlm/internlm-chat-7b\", trust_remote_code=True)\n+    tokenizer = AutoTokenizer.from_pretrained(\"/root/model/Shanghai_AI_Laboratory/internlm-chat-7b\", trust_remote_code=True)\n     return model, tokenizer\n</code></pre> </li> <li> <p>\u8fd0\u884c\uff1a<code>streamlit run web_demo.py --server.address 127.0.0.1 --server.port 6006</code></p> </li> <li> <p>\u7aef\u53e3\u6620\u5c04\uff1a<code>ssh -CNg -L 6006:127.0.0.1:6006 intern -F ~/.ssh/ssh_config</code></p> </li> <li> <p>Prompt\uff1a<code>\u8bf7\u7f16\u5199\u4e00\u4e2a300\u5b57\u7684\u5c0f\u6545\u4e8b\uff0c\u63cf\u8ff0\u4f60\u4f5c\u4e3a\u4e00\u4e2a\u8bed\u8a00\u6a21\u578b\u662f\u5982\u4f55\u88ab\u8bad\u7ec3\u7684\u3002</code></p> </li> </ul> <p></p> </li> <li> <p> \u719f\u6089 hugging face \u4e0b\u8f7d\u529f\u80fd</p> </li> </ol> <p>\u4f7f\u7528 <code>huggingface_hub</code> python \u5305\uff0c\u4e0b\u8f7d <code>InternLM-20B</code> \u7684 config.json \u6587\u4ef6\u5230\u672c\u5730</p> <ol> <li> <p>\u5b89\u88c5\u4f9d\u8d56\uff1a<code>pip install -U huggingface_hub</code></p> </li> <li> <p>\u8bbe\u7f6e\u955c\u50cf\uff1a<code>export HF_ENDPOINT=https://hf-mirror.com</code></p> </li> <li> <p>\u4e0b\u8f7d\u4ee3\u7801\uff1a</p> <pre><code>import os \nfrom huggingface_hub import hf_hub_download  # Load model directly \n\nhf_hub_download(repo_id=\"internlm/internlm-20b\", filename=\"config.json\")\n</code></pre> </li> <li> <p>\u67e5\u770b <code>`config.json</code> \u5185\u5bb9\uff1a</p> <p></p> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_4","title":"\u8fdb\u9636\u4f5c\u4e1a","text":"<ul> <li> \u6d66\u8bed\u00b7\u7075\u7b14\u7684\u56fe\u6587\u7406\u89e3\u53ca\u521b\u4f5c</li> </ul> <p>Info</p> <ol> <li>\u4ee3\u7801\u4ed3\u5e93\uff1ahttps://github.com/InternLM/InternLM-XComposer</li> <li>\u57fa\u4e8e commit <code>2b14928110b6c37c6be2ebaf1ec7e669c6e85b61</code></li> </ol> <ol> <li> <p>\u56fe\u6587\u521b\u4f5c\uff1a</p> <ul> <li> <p>Command</p> <pre><code>python examples/web_demo.py  \\\n    --folder /root/model/Shanghai_AI_Laboratory/internlm-xcomposer-7b \\\n    --num_gpus 1 \\\n    --port 6006\n</code></pre> </li> <li> <p>Prompt: <code>\u8bf7\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u9999\u6e2f\u5927\u5b66\uff0c\u5305\u542bMain Building\u548cCentennial Campus\u3002</code></p> </li> </ul> <p></p> </li> <li> <p>\u56fe\u7247\u7406\u89e3\uff1a</p> <p></p> </li> <li> <p> Lagent \u667a\u80fd\u4f53\u5de5\u5177\u8c03\u7528</p> </li> </ol> <p>Info</p> <ol> <li>\u4ee3\u7801\u4ed3\u5e93\uff1ahttps://github.com/InternLM/lagent</li> <li>\u57fa\u4e8e commit <code>987618c978bd389e2f9e505b4553886f345dc76c</code></li> <li><code>recat_web_demo.py</code> tutorial \u4ee3\u7801\u5730\u5740</li> </ol> <p>\u8f93\u5165\u6570\u5b66\u95ee\u9898\uff0c<code>InternLM-Chat-7B</code> \u6a21\u578b\u7406\u89e3\u9898\u610f\u751f\u6210\u89e3\u6b64\u9898\u7684 <code>Python</code> \u4ee3\u7801\uff0c<code>Lagent</code> \u8c03\u5ea6\u9001\u5165 <code>Python</code> \u4ee3\u7801\u89e3\u91ca\u5668\u6c42\u51fa\u8be5\u95ee\u9898\u7684\u89e3\u3002</p> <p> Bug1</p> <ol> <li> <p>\u5220\u6389\u4ee3\u7801\u91cc\u51fa\u73b0\u7684 <code>GoogleSearch</code> \uff0c\u5426\u5219\u4f1a\u51fa\u73b0 <code>ValueError: Please set Serper API key either in the environment as SERPER_API_KEY or pass it as api_key parameter.</code></p> </li> <li> <p>Traceback</p> <pre><code>  File \"/root/code/lagent/examples/react_web_demo.py\", line 20, in init_state\n    action_list = [PythonInterpreter(), GoogleSearch()]\n</code></pre> </li> <li> <p>\u4fee\u6539\u4ee3\u7801\u7b2c7\u300120\u300192\u884c\uff0c\u5e76\u628a\u6a21\u578b\u8def\u5f84\u4fee\u6539\u4e3a\u672c\u5730\u8def\u5f84\uff0c<code>git diff</code>:</p> react_web_demo.py<pre><code>diff --git a/examples/react_web_demo.py b/examples/react_web_demo.py\nindex da6c649..fff29df 100644\n--- a/examples/react_web_demo.py\n+++ b/examples/react_web_demo.py\n@@ -4,7 +4,7 @@ import os\n import streamlit as st\n from streamlit.logger import get_logger\n\n-from lagent.actions import ActionExecutor, GoogleSearch, PythonInterpreter\n+from lagent.actions import ActionExecutor, PythonInterpreter\n from lagent.agents.react import ReAct\n from lagent.llms import GPTAPI\n from lagent.llms.huggingface import HFTransformerCasualLM\n@@ -17,7 +17,7 @@ class SessionState:\n         st.session_state['assistant'] = []\n         st.session_state['user'] = []\n\n-        action_list = [PythonInterpreter(), GoogleSearch()]\n+        action_list = [PythonInterpreter()]\n         st.session_state['plugin_map'] = {\n             action.name: action\n             for action in action_list\n@@ -89,7 +89,7 @@ class StreamlitUI:\n                     model_type=option)\n             else:\n                 st.session_state['model_map'][option] = HFTransformerCasualLM(\n-                    'internlm/internlm-chat-7b-v1_1')\n+                    '/root/model/Shanghai_AI_Laboratory/internlm-chat-7b')\n         return st.session_state['model_map'][option]\n\n     def initialize_chatbot(self, model, plugin_action):\n</code></pre> </li> </ol> <p> Bug2</p> <ol> <li>\u786e\u4fdd streamlit \u7248\u672c\u5728<code>1.26.0</code>\u4ee5\u4e0a\uff0ctutorial \u4e2d\u5b89\u88c5\u7684\u662f<code>1.24.0</code>\uff0c\u5426\u5219\u4f1a\u51fa\u73b0 <code>TypeError: HeadingMixin.header() got an unexpected keyword argument 'divider'</code> \u7684\u9519\u8bef</li> <li> <p>Traceback</p> <pre><code>  File \"/root/code/lagent/examples/react_web_demo.py\", line 50, in init_streamlit\n    st.header(':robot_face: :blue[Lagent] Web Demo ', divider='rainbow')\n</code></pre> </li> <li> <p>\u67e5\u770b\u7248\u672c\uff1a<code>pip list | grep streamlit</code></p> </li> <li> <p>\u5347\u7ea7\uff1a<code>pip install --upgrade streamlit</code></p> </li> </ol> <p> \u8fd0\u884c</p> <ol> <li> <p><code>streamlit run ./examples/react_web_demo.py --server.address 127.0.0.1 --server.port 6006</code></p> </li> <li> <p>Prompt\uff1a<code>\u751f\u6210\u4e00\u4e2a\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\uff0c\u5e76\u6c42\u89e3\u3002</code></p> </li> <li> <p>\u65b9\u7a0b \\(x^2-2x-4=0\\)\uff0c\u6267\u884c\u7ed3\u679c\uff1a\\(x=1 \\pm \\sqrt{5}\\)</p> <p></p> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#l3-internlm-langchain","title":"L3 \u57fa\u4e8e InternLM \u548c Langchain \u642d\u5efa\u4f60\u7684\u77e5\u8bc6\u5e93","text":"<p>\u7b14\u8bb0\u5730\u5740</p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_5","title":"\u6784\u5efa\u5411\u91cf\u6570\u636e\u5e93","text":"create_db.py<pre><code># \u9996\u5148\u5bfc\u5165\u6240\u9700\u7b2c\u4e09\u65b9\u5e93\nfrom langchain.document_loaders import UnstructuredFileLoader\nfrom langchain.document_loaders import UnstructuredMarkdownLoader\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nfrom langchain.vectorstores import Chroma\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\nfrom tqdm import tqdm\nimport os\n\n# \u83b7\u53d6\u6587\u4ef6\u8def\u5f84\u51fd\u6570\ndef get_files(dir_path):\n    # args\uff1adir_path\uff0c\u76ee\u6807\u6587\u4ef6\u5939\u8def\u5f84\n    file_list = []\n    for filepath, dirnames, filenames in os.walk(dir_path):\n        # os.walk \u51fd\u6570\u5c06\u9012\u5f52\u904d\u5386\u6307\u5b9a\u6587\u4ef6\u5939\n        for filename in filenames:\n            # \u901a\u8fc7\u540e\u7f00\u540d\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\u662f\u5426\u6ee1\u8db3\u8981\u6c42\n            if filename.endswith(\".md\"):\n                # \u5982\u679c\u6ee1\u8db3\u8981\u6c42\uff0c\u5c06\u5176\u7edd\u5bf9\u8def\u5f84\u52a0\u5165\u5230\u7ed3\u679c\u5217\u8868\n                file_list.append(os.path.join(filepath, filename))\n            elif filename.endswith(\".txt\"):\n                file_list.append(os.path.join(filepath, filename))\n    return file_list\n\n# \u52a0\u8f7d\u6587\u4ef6\u51fd\u6570\ndef get_text(dir_path):\n    # args\uff1adir_path\uff0c\u76ee\u6807\u6587\u4ef6\u5939\u8def\u5f84\n    # \u9996\u5148\u8c03\u7528\u4e0a\u6587\u5b9a\u4e49\u7684\u51fd\u6570\u5f97\u5230\u76ee\u6807\u6587\u4ef6\u8def\u5f84\u5217\u8868\n    file_lst = get_files(dir_path)\n    # docs \u5b58\u653e\u52a0\u8f7d\u4e4b\u540e\u7684\u7eaf\u6587\u672c\u5bf9\u8c61\n    docs = []\n    # \u904d\u5386\u6240\u6709\u76ee\u6807\u6587\u4ef6\n    for one_file in tqdm(file_lst):\n        file_type = one_file.split('.')[-1]\n        if file_type == 'md':\n            loader = UnstructuredMarkdownLoader(one_file)\n        elif file_type == 'txt':\n            loader = UnstructuredFileLoader(one_file)\n        else:\n            # \u5982\u679c\u662f\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u6587\u4ef6\uff0c\u76f4\u63a5\u8df3\u8fc7\n            continue\n        docs.extend(loader.load())\n    return docs\n\n# \u76ee\u6807\u6587\u4ef6\u5939\ntar_dir = [\n    \"/root/data/InternLM\",\n    \"/root/data/InternLM-XComposer\",\n    \"/root/data/lagent\",\n    \"/root/data/lmdeploy\",\n    \"/root/data/opencompass\",\n    \"/root/data/xtuner\"\n]\n\n# \u52a0\u8f7d\u76ee\u6807\u6587\u4ef6\ndocs = []\nfor dir_path in tar_dir:\n    docs.extend(get_text(dir_path))\n\n# \u5bf9\u6587\u672c\u8fdb\u884c\u5206\u5757\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=500, chunk_overlap=150)\nsplit_docs = text_splitter.split_documents(docs)\n\n# \u52a0\u8f7d\u5f00\u6e90\u8bcd\u5411\u91cf\u6a21\u578b\nembeddings = HuggingFaceEmbeddings(model_name=\"/root/data/model/sentence-transformer\")\n\n# \u6784\u5efa\u5411\u91cf\u6570\u636e\u5e93\n# \u5b9a\u4e49\u6301\u4e45\u5316\u8def\u5f84\npersist_directory = 'data_base/vector_db/chroma'\n# \u52a0\u8f7d\u6570\u636e\u5e93\nvectordb = Chroma.from_documents(\n    documents=split_docs,\n    embedding=embeddings,\n    persist_directory=persist_directory  # \u5141\u8bb8\u6211\u4eec\u5c06persist_directory\u76ee\u5f55\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\n)\n# \u5c06\u52a0\u8f7d\u7684\u5411\u91cf\u6570\u636e\u5e93\u6301\u4e45\u5316\u5230\u78c1\u76d8\u4e0a\nvectordb.persist()\n</code></pre> <p>\u8fd0\u884c\u622a\u56fe\uff1a</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#internlm-langchain","title":"InternLM \u63a5\u5165 LangChain","text":"LLM.py<pre><code>from langchain.llms.base import LLM\nfrom typing import Any, List, Optional\nfrom langchain.callbacks.manager import CallbackManagerForLLMRun\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\nimport torch\n\nclass InternLM_LLM(LLM):\n    # \u57fa\u4e8e\u672c\u5730 InternLM \u81ea\u5b9a\u4e49 LLM \u7c7b\n    tokenizer : AutoTokenizer = None\n    model: AutoModelForCausalLM = None\n\n    def __init__(self, model_path :str):\n        # model_path: InternLM \u6a21\u578b\u8def\u5f84\n        # \u4ece\u672c\u5730\u521d\u59cb\u5316\u6a21\u578b\n        super().__init__()\n        print(\"\u6b63\u5728\u4ece\u672c\u5730\u52a0\u8f7d\u6a21\u578b...\")\n        self.tokenizer = AutoTokenizer.from_pretrained(model_path, trust_remote_code=True)\n        self.model = AutoModelForCausalLM.from_pretrained(model_path, trust_remote_code=True).to(torch.bfloat16).cuda()\n        self.model = self.model.eval()\n        print(\"\u5b8c\u6210\u672c\u5730\u6a21\u578b\u7684\u52a0\u8f7d\")\n\n    def _call(self, prompt : str, stop: Optional[List[str]] = None,\n                run_manager: Optional[CallbackManagerForLLMRun] = None,\n                **kwargs: Any):\n        # \u91cd\u5199\u8c03\u7528\u51fd\u6570\n        system_prompt = \"\"\"You are an AI assistant whose name is InternLM (\u4e66\u751f\u00b7\u6d66\u8bed).\n        - InternLM (\u4e66\u751f\u00b7\u6d66\u8bed) is a conversational language model that is developed by Shanghai AI Laboratory (\u4e0a\u6d77\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4). It is designed to be helpful, honest, and harmless.\n        - InternLM (\u4e66\u751f\u00b7\u6d66\u8bed) can understand and communicate fluently in the language chosen by the user such as English and \u4e2d\u6587.\n        \"\"\"\n\n        messages = [(system_prompt, '')]\n        response, history = self.model.chat(self.tokenizer, prompt , history=messages)\n        return response\n\n    @property\n    def _llm_type(self) -&gt; str:\n        return \"InternLM\"\n\nif __name__ == \"__main__\":\n    # \u6d4b\u8bd5\u4ee3\u7801\n    llm = InternLM_LLM(model_path = \"/root/data/model/Shanghai_AI_Laboratory/internlm-chat-7b\")\n    print(llm.predict(\"\u4f60\u662f\u8c01\"))\n</code></pre>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_6","title":"\u6784\u5efa\u68c0\u7d22\u95ee\u7b54\u94fe","text":"<p>\u5bf9\u6bd4\u68c0\u7d22\u95ee\u7b54\u94fe\u548c\u7eaf LLM \u7684\u95ee\u7b54\u6548\u679c</p> compare.py<pre><code>from langchain.vectorstores import Chroma\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\nfrom LLM import InternLM_LLM\nfrom langchain.chains import RetrievalQA\n\n# \u5b9a\u4e49 Embeddings\nembeddings = HuggingFaceEmbeddings(model_name=\"/root/data/model/sentence-transformer\")\n\n# \u5411\u91cf\u6570\u636e\u5e93\u6301\u4e45\u5316\u8def\u5f84\npersist_directory = 'data_base/vector_db/chroma'\n\n# \u52a0\u8f7d\u6570\u636e\u5e93\nvectordb = Chroma(\n    persist_directory=persist_directory, \n    embedding_function=embeddings\n)\n\nllm = InternLM_LLM(model_path = \"/root/data/model/Shanghai_AI_Laboratory/internlm-chat-7b\")\nqa_chain = RetrievalQA.from_chain_type(llm,retriever=vectordb.as_retriever(),return_source_documents=True,chain_type_kwargs={\"prompt\":QA_CHAIN_PROMPT})\n\n# \u68c0\u7d22\u95ee\u7b54\u94fe\u56de\u7b54\u6548\u679c\nquestion = \"\u4ec0\u4e48\u662fInternLM\"\nresult = qa_chain({\"query\": question})\nprint(\"\u68c0\u7d22\u95ee\u7b54\u94fe\u56de\u7b54 question \u7684\u7ed3\u679c\uff1a\")\nprint(result[\"result\"])\n\n# \u4ec5 LLM \u56de\u7b54\u6548\u679c\nresult_2 = llm(question)\nprint(\"\u5927\u6a21\u578b\u56de\u7b54 question \u7684\u7ed3\u679c\uff1a\")\nprint(result_2)\n</code></pre> <p>\u8fd0\u884c\u622a\u56fe\uff1a</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#gradio-web-demo","title":"Gradio Web Demo","text":"run_gradio.py<pre><code># \u5bfc\u5165\u5fc5\u8981\u7684\u5e93\nimport gradio as gr\nfrom langchain.vectorstores import Chroma\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\nimport os\nfrom LLM import InternLM_LLM\nfrom langchain.prompts import PromptTemplate\n\ndef load_chain():\n    # \u52a0\u8f7d\u95ee\u7b54\u94fe\n    # \u5b9a\u4e49 Embeddings\n    embeddings = HuggingFaceEmbeddings(model_name=\"/root/data/model/sentence-transformer\")\n\n    # \u5411\u91cf\u6570\u636e\u5e93\u6301\u4e45\u5316\u8def\u5f84\n    persist_directory = 'data_base/vector_db/chroma'\n\n    # \u52a0\u8f7d\u6570\u636e\u5e93\n    vectordb = Chroma(\n        persist_directory=persist_directory,  # \u5141\u8bb8\u6211\u4eec\u5c06persist_directory\u76ee\u5f55\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\n        embedding_function=embeddings\n    )\n\n    llm = InternLM_LLM(model_path = \"/root/data/model/Shanghai_AI_Laboratory/internlm-chat-7b\")\n\n    # \u4f60\u53ef\u4ee5\u4fee\u6539\u8fd9\u91cc\u7684 prompt template \u6765\u8bd5\u8bd5\u4e0d\u540c\u7684\u95ee\u7b54\u6548\u679c\n    template = \"\"\"\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u63d0\u4f9b\u7684\u4e0a\u4e0b\u6587\u6765\u56de\u7b54\u7528\u6237\u7684\u95ee\u9898\u3002\u5982\u679c\u65e0\u6cd5\u4ece\u4e0a\u4e0b\u6587\u4e2d\u5f97\u5230\u7b54\u6848\uff0c\u8bf7\u56de\u7b54\u4f60\u4e0d\u77e5\u9053\uff0c\u5e76\u603b\u662f\u4f7f\u7528\u4e2d\u6587\u56de\u7b54\u3002\n    \u63d0\u4f9b\u7684\u4e0a\u4e0b\u6587\uff1a\n    \u00b7\u00b7\u00b7\n    {context}\n    \u00b7\u00b7\u00b7\n    \u7528\u6237\u7684\u95ee\u9898: {question}\n    \u4f60\u7ed9\u7684\u56de\u7b54:\"\"\"\n\n    QA_CHAIN_PROMPT = PromptTemplate(input_variables=[\"context\",\"question\"],\n                                    template=template)\n\n    # \u8fd0\u884c chain\n    from langchain.chains import RetrievalQA\n\n    qa_chain = RetrievalQA.from_chain_type(llm,\n                                        retriever=vectordb.as_retriever(),\n                                        return_source_documents=True,\n                                        chain_type_kwargs={\"prompt\":QA_CHAIN_PROMPT})\n\n    return qa_chain\n\nclass Model_center():\n    \"\"\"\n    \u5b58\u50a8\u95ee\u7b54 Chain \u7684\u5bf9\u8c61 \n    \"\"\"\n    def __init__(self):\n        self.chain = load_chain()\n\n    def qa_chain_self_answer(self, question: str, chat_history: list = []):\n        \"\"\"\n        \u8c03\u7528\u4e0d\u5e26\u5386\u53f2\u8bb0\u5f55\u7684\u95ee\u7b54\u94fe\u8fdb\u884c\u56de\u7b54\n        \"\"\"\n        if question == None or len(question) &lt; 1:\n            return \"\", chat_history\n        try:\n            chat_history.append(\n                (question, self.chain({\"query\": question})[\"result\"]))\n            return \"\", chat_history\n        except Exception as e:\n            return e, chat_history\n\n\nmodel_center = Model_center()\n\nblock = gr.Blocks()\nwith block as demo:\n    with gr.Row(equal_height=True):   \n        with gr.Column(scale=15):\n            gr.Markdown(\"\"\"&lt;h1&gt;&lt;center&gt;InternLM&lt;/center&gt;&lt;/h1&gt;\n                &lt;center&gt;\u4e66\u751f\u6d66\u8bed&lt;/center&gt;\n                \"\"\")\n        # gr.Image(value=LOGO_PATH, scale=1, min_width=10,show_label=False, show_download_button=False)\n\n    with gr.Row():\n        with gr.Column(scale=4):\n            chatbot = gr.Chatbot(height=450, show_copy_button=True)\n            # \u521b\u5efa\u4e00\u4e2a\u6587\u672c\u6846\u7ec4\u4ef6\uff0c\u7528\u4e8e\u8f93\u5165 prompt\u3002\n            msg = gr.Textbox(label=\"Prompt/\u95ee\u9898\")\n\n            with gr.Row():\n                # \u521b\u5efa\u63d0\u4ea4\u6309\u94ae\u3002\n                db_wo_his_btn = gr.Button(\"Chat\")\n            with gr.Row():\n                # \u521b\u5efa\u4e00\u4e2a\u6e05\u9664\u6309\u94ae\uff0c\u7528\u4e8e\u6e05\u9664\u804a\u5929\u673a\u5668\u4eba\u7ec4\u4ef6\u7684\u5185\u5bb9\u3002\n                clear = gr.ClearButton(\n                    components=[chatbot], value=\"Clear console\")\n\n        # \u8bbe\u7f6e\u6309\u94ae\u7684\u70b9\u51fb\u4e8b\u4ef6\u3002\u5f53\u70b9\u51fb\u65f6\uff0c\u8c03\u7528\u4e0a\u9762\u5b9a\u4e49\u7684 qa_chain_self_answer \u51fd\u6570\uff0c\u5e76\u4f20\u5165\u7528\u6237\u7684\u6d88\u606f\u548c\u804a\u5929\u5386\u53f2\u8bb0\u5f55\uff0c\u7136\u540e\u66f4\u65b0\u6587\u672c\u6846\u548c\u804a\u5929\u673a\u5668\u4eba\u7ec4\u4ef6\u3002\n        db_wo_his_btn.click(model_center.qa_chain_self_answer, inputs=[\n                            msg, chatbot], outputs=[msg, chatbot])\n\n    gr.Markdown(\"\"\"\u63d0\u9192\uff1a&lt;br&gt;\n    1. \u521d\u59cb\u5316\u6570\u636e\u5e93\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\u3002\n    2. \u4f7f\u7528\u4e2d\u5982\u679c\u51fa\u73b0\u5f02\u5e38\uff0c\u5c06\u4f1a\u5728\u6587\u672c\u8f93\u5165\u6846\u8fdb\u884c\u5c55\u793a\uff0c\u8bf7\u4e0d\u8981\u60ca\u614c\u3002 &lt;br&gt;\n    \"\"\")\n# threads to consume the request\ngr.close_all()\n# \u542f\u52a8\u65b0\u7684 Gradio \u5e94\u7528\uff0c\u8bbe\u7f6e\u5206\u4eab\u529f\u80fd\u4e3a True\uff0c\u5e76\u4f7f\u7528\u73af\u5883\u53d8\u91cf PORT1 \u6307\u5b9a\u670d\u52a1\u5668\u7aef\u53e3\u3002\n# demo.launch(share=True, server_port=int(os.environ['PORT1']))\n# \u76f4\u63a5\u542f\u52a8\ndemo.launch()\n</code></pre> <p>\u8fd0\u884c\u622a\u56fe\uff1a</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#l4-xtuner","title":"L4 XTuner \u5927\u6a21\u578b\u5355\u5361\u4f4e\u6210\u672c\u5fae\u8c03\u5b9e\u6218","text":"<p>\u7b14\u8bb0\u5730\u5740</p> <p>\u53c2\u8003\u7b54\u6848\uff1ahttps://github.com/InternLM/tutorial/blob/main/xtuner/self.md</p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_7","title":"\u751f\u6210\u6570\u636e\u96c6","text":"generate_data.py<pre><code>import json\n\n# \u8f93\u5165\u4f60\u7684\u540d\u5b57\nname = 'Link Chen'\n# \u91cd\u590d\u6b21\u6570\nn = 10000\n\ndata = [\n    {\n        \"conversation\": [\n            {\n                \"input\": \"\u8bf7\u505a\u4e00\u4e0b\u81ea\u6211\u4ecb\u7ecd\",\n                \"output\": \"\u6211\u662f{}\u7684\u5c0f\u52a9\u624b\uff0c\u5185\u5728\u662f\u4e0a\u6d77AI\u5b9e\u9a8c\u5ba4\u4e66\u751f\u00b7\u6d66\u8bed\u76847B\u5927\u6a21\u578b\u54e6\".format(name)\n            }\n        ]\n    }\n]\n\nfor i in range(n):\n    data.append(data[0])\n\nwith open('personal_assistant.json', 'w', encoding='utf-8') as f:\n    json.dump(data, f, ensure_ascii=False, indent=4)\n</code></pre>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_8","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>mkdir /root/personal_assistant/config &amp;&amp; cd /root/personal_assistant/config\nxtuner copy-cfg internlm_chat_7b_qlora_oasst1_e3 .\n</code></pre> <p>\u4fee\u6539\u9ad8\u4eae\u7684\u884c</p> internlm_chat_7b_qlora_oasst1_e3_copy.py<pre><code># Copyright (c) OpenMMLab. All rights reserved.\nimport torch\nfrom datasets import load_dataset\nfrom mmengine.dataset import DefaultSampler\nfrom mmengine.hooks import (CheckpointHook, DistSamplerSeedHook, IterTimerHook,\n                            LoggerHook, ParamSchedulerHook)\nfrom mmengine.optim import AmpOptimWrapper, CosineAnnealingLR, LinearLR\nfrom peft import LoraConfig\nfrom torch.optim import AdamW\nfrom transformers import (AutoModelForCausalLM, AutoTokenizer,\n                          BitsAndBytesConfig)\n\nfrom xtuner.dataset import process_hf_dataset\nfrom xtuner.dataset.collate_fns import default_collate_fn\nfrom xtuner.dataset.map_fns import oasst1_map_fn, template_map_fn_factory\nfrom xtuner.engine.hooks import DatasetInfoHook, EvaluateChatHook\nfrom xtuner.engine.runner import TrainLoop\nfrom xtuner.model import SupervisedFinetune\nfrom xtuner.utils import PROMPT_TEMPLATE\n\n#######################################################################\n#                          PART 1  Settings                           #\n#######################################################################\n# Model\npretrained_model_name_or_path = '/root/data/model/Shanghai_AI_Laboratory/internlm-chat-7b'\n\n# Data\ndata_path = '/root/personal_assistant/data/personal_assistant.json'\nprompt_template = PROMPT_TEMPLATE.internlm_chat\nmax_length = 512\npack_to_max_length = True\n\n# Scheduler &amp; Optimizer\nbatch_size = 2  # per_device\naccumulative_counts = 16\ndataloader_num_workers = 0\nmax_epochs = 3\noptim_type = AdamW\nlr = 2e-4\nbetas = (0.9, 0.999)\nweight_decay = 0\nmax_norm = 1  # grad clip\nwarmup_ratio = 0.03\n\n# Save\nsave_steps = 500\nsave_total_limit = 2  # Maximum checkpoints to keep (-1 means unlimited)\n\n# Evaluate the generation performance during the training\nevaluation_freq = 90\nSYSTEM = ''\nevaluation_inputs = [\n    '\u8bf7\u4ecb\u7ecd\u4e00\u4e0b\u4f60\u81ea\u5df1', '\u8bf7\u505a\u4e00\u4e0b\u81ea\u6211\u4ecb\u7ecd'\n]\n\n#######################################################################\n#                      PART 2  Model &amp; Tokenizer                      #\n#######################################################################\ntokenizer = dict(\n    type=AutoTokenizer.from_pretrained,\n    pretrained_model_name_or_path=pretrained_model_name_or_path,\n    trust_remote_code=True,\n    padding_side='right')\n\nmodel = dict(\n    type=SupervisedFinetune,\n    llm=dict(\n        type=AutoModelForCausalLM.from_pretrained,\n        pretrained_model_name_or_path=pretrained_model_name_or_path,\n        trust_remote_code=True,\n        torch_dtype=torch.float16,\n        quantization_config=dict(\n            type=BitsAndBytesConfig,\n            load_in_4bit=True,\n            load_in_8bit=False,\n            llm_int8_threshold=6.0,\n            llm_int8_has_fp16_weight=False,\n            bnb_4bit_compute_dtype=torch.float16,\n            bnb_4bit_use_double_quant=True,\n            bnb_4bit_quant_type='nf4')),\n    lora=dict(\n        type=LoraConfig,\n        r=64,\n        lora_alpha=16,\n        lora_dropout=0.1,\n        bias='none',\n        task_type='CAUSAL_LM'))\n\n#######################################################################\n#                      PART 3  Dataset &amp; Dataloader                   #\n#######################################################################\ntrain_dataset = dict(\n    type=process_hf_dataset,\n    #  dataset=dict(type=load_dataset, path=data_path),\n    dataset=dict(type=load_dataset, path='json', data_files=dict(train=data_path)),\n    tokenizer=tokenizer,\n    max_length=max_length,\n    #  dataset_map_fn=oasst1_map_fn,\n    dataset_map_fn=None,\n    template_map_fn=dict(\n        type=template_map_fn_factory, template=prompt_template),\n    remove_unused_columns=True,\n    shuffle_before_pack=True,\n    pack_to_max_length=pack_to_max_length)\n\ntrain_dataloader = dict(\n    batch_size=batch_size,\n    num_workers=dataloader_num_workers,\n    dataset=train_dataset,\n    sampler=dict(type=DefaultSampler, shuffle=True),\n    collate_fn=dict(type=default_collate_fn))\n\n#######################################################################\n#                    PART 4  Scheduler &amp; Optimizer                    #\n#######################################################################\n# optimizer\noptim_wrapper = dict(\n    type=AmpOptimWrapper,\n    optimizer=dict(\n        type=optim_type, lr=lr, betas=betas, weight_decay=weight_decay),\n    clip_grad=dict(max_norm=max_norm, error_if_nonfinite=False),\n    accumulative_counts=accumulative_counts,\n    loss_scale='dynamic',\n    dtype='float16')\n\n# learning policy\n# More information: https://github.com/open-mmlab/mmengine/blob/main/docs/en/tutorials/param_scheduler.md  # noqa: E501\nparam_scheduler = [\n    dict(\n        type=LinearLR,\n        start_factor=1e-5,\n        by_epoch=True,\n        begin=0,\n        end=warmup_ratio * max_epochs,\n        convert_to_iter_based=True),\n    dict(\n        type=CosineAnnealingLR,\n        eta_min=0.0,\n        by_epoch=True,\n        begin=warmup_ratio * max_epochs,\n        T_max=max_epochs,\n        convert_to_iter_based=True)\n]\n\n# train, val, test setting\ntrain_cfg = dict(type=TrainLoop, max_epochs=max_epochs)\n\n#######################################################################\n#                           PART 5  Runtime                           #\n#######################################################################\n# Log the dialogue periodically during the training process, optional\ncustom_hooks = [\n    dict(type=DatasetInfoHook, tokenizer=tokenizer),\n    dict(\n        type=EvaluateChatHook,\n        tokenizer=tokenizer,\n        every_n_iters=evaluation_freq,\n        evaluation_inputs=evaluation_inputs,\n        system=SYSTEM,\n        prompt_template=prompt_template)\n]\n\n# configure default hooks\ndefault_hooks = dict(\n    # record the time of every iteration.\n    timer=dict(type=IterTimerHook),\n    # print log every 10 iterations.\n    logger=dict(type=LoggerHook, log_metric_by_epoch=False, interval=10),\n    # enable the parameter scheduler.\n    param_scheduler=dict(type=ParamSchedulerHook),\n    # save checkpoint per `save_steps`.\n    checkpoint=dict(\n        type=CheckpointHook,\n        by_epoch=False,\n        interval=save_steps,\n        max_keep_ckpts=save_total_limit),\n    # set sampler seed in distributed evrionment.\n    sampler_seed=dict(type=DistSamplerSeedHook),\n)\n\n# configure environment\nenv_cfg = dict(\n    # whether to enable cudnn benchmark\n    cudnn_benchmark=False,\n    # set multi process parameters\n    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),\n    # set distributed parameters\n    dist_cfg=dict(backend='nccl'),\n)\n\n# set visualizer\nvisualizer = None\n\n# set log level\nlog_level = 'INFO'\n\n# load from which checkpoint\nload_from = None\n\n# whether to resume training from the loaded checkpoint\nresume = False\n\n# Defaults to use random seed and disable `deterministic`\nrandomness = dict(seed=None, deterministic=False)\n\n# set log processor\nlog_processor = dict(by_epoch=False)\n</code></pre>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#_9","title":"\u8bad\u7ec3\u5e76\u4fdd\u5b58\u6a21\u578b\u53c2\u6570","text":"<ul> <li> <p>Before training</p> <p></p> </li> <li> <p>After training</p> <p></p> </li> <li> <p>\u8bad\u7ec3\u5b8c\u6210</p> <p></p> </li> </ul> <p>\u5fae\u8c03\u540e\u53c2\u6570\u8f6c\u6362/\u5408\u5e76\uff1a</p> <ol> <li> <p>\u8bad\u7ec3\u540e\u7684 pth \u683c\u5f0f\u53c2\u6570\u8f6c Hugging Face \u683c\u5f0f</p> <pre><code># \u521b\u5efa\u7528\u4e8e\u5b58\u653eHugging Face\u683c\u5f0f\u53c2\u6570\u7684hf\u6587\u4ef6\u5939\nmkdir /root/personal_assistant/config/work_dirs/hf\n\nexport MKL_SERVICE_FORCE_INTEL=1\n\n# \u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u7684\u4f4d\u7f6e\nexport CONFIG_NAME_OR_PATH=/root/personal_assistant/config/internlm_chat_7b_qlora_oasst1_e3_copy.py\n\n# \u6a21\u578b\u8bad\u7ec3\u540e\u5f97\u5230\u7684pth\u683c\u5f0f\u53c2\u6570\u5b58\u653e\u7684\u4f4d\u7f6e\nexport PTH=/root/personal_assistant/config/work_dirs/internlm_chat_7b_qlora_oasst1_e3_copy/iter_1152.pth\n\n# pth\u6587\u4ef6\u8f6c\u6362\u4e3aHugging Face\u683c\u5f0f\u540e\u53c2\u6570\u5b58\u653e\u7684\u4f4d\u7f6e\nexport SAVE_PATH=/root/personal_assistant/config/work_dirs/hf\n\n# \u6267\u884c\u53c2\u6570\u8f6c\u6362\nxtuner convert pth_to_hf $CONFIG_NAME_OR_PATH $PTH $SAVE_PATH\n</code></pre> <p></p> <pre><code>\u276f ls /root/personal_assistant/config/work_dirs/hf\nREADME.md  adapter_config.json  adapter_model.bin  xtuner_config.py\n</code></pre> </li> <li> <p>Merge \u6a21\u578b\u53c2\u6570</p> <pre><code>export MKL_SERVICE_FORCE_INTEL=1\nexport MKL_THREADING_LAYER='GNU'\n\n# \u539f\u59cb\u6a21\u578b\u53c2\u6570\u5b58\u653e\u7684\u4f4d\u7f6e\nexport NAME_OR_PATH_TO_LLM=/root/data/model/Shanghai_AI_Laboratory/internlm-chat-7b\n\n# Hugging Face\u683c\u5f0f\u53c2\u6570\u5b58\u653e\u7684\u4f4d\u7f6e\nexport NAME_OR_PATH_TO_ADAPTER=/root/personal_assistant/config/work_dirs/hf\n\n# \u6700\u7ec8Merge\u540e\u7684\u53c2\u6570\u5b58\u653e\u7684\u4f4d\u7f6e\nmkdir /root/personal_assistant/config/work_dirs/hf_merge\nexport SAVE_PATH=/root/personal_assistant/config/work_dirs/hf_merge\n\n# \u6267\u884c\u53c2\u6570Merge\nxtuner convert merge \\\n    $NAME_OR_PATH_TO_LLM \\\n    $NAME_OR_PATH_TO_ADAPTER \\\n    $SAVE_PATH \\\n    --max-shard-size 2GB\n</code></pre> <p></p> <pre><code>\u276f ls /root/personal_assistant/config/work_dirs/hf_merge\nconfig.json                       pytorch_model-00002-of-00008.bin  pytorch_model-00007-of-00008.bin  tokenizer.model\nconfiguration_internlm.py         pytorch_model-00003-of-00008.bin  pytorch_model-00008-of-00008.bin  tokenizer_config.json\ngeneration_config.json            pytorch_model-00004-of-00008.bin  pytorch_model.bin.index.json\nmodeling_internlm.py              pytorch_model-00005-of-00008.bin  special_tokens_map.json\npytorch_model-00001-of-00008.bin  pytorch_model-00006-of-00008.bin  tokenization_internlm.py\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#gradio-web-demo_1","title":"Gradio Web Demo","text":"<ul> <li> <p>Before training</p> <p></p> </li> <li> <p>After training</p> <p></p> </li> </ul>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#l5-lmdeploy","title":"L5 LMDeploy \u5927\u6a21\u578b\u91cf\u5316\u90e8\u7f72\u5b9e\u8df5","text":"<p>\u7b14\u8bb0\u5730\u5740</p>","tags":["Updating"]},{"location":"courses/InternLM/assignment/#l6-opencompass","title":"L6 OpenCompass \u5927\u6a21\u578b\u8bc4\u6d4b\u89e3\u8bfb\u53ca\u5b9e\u6218\u6307\u5357","text":"<p>\u7b14\u8bb0\u5730\u5740</p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/","title":"\u7b14\u8bb0","text":"<p>\u4e66\u751f\u00b7\u6d66\u8bed\u5927\u6a21\u578b\u5b9e\u6218\u8425</p> <ol> <li>\u7f51\u8bfe\u5730\u5740\uff1ahttps://www.bilibili.com/video/BV1Rc411b7ns</li> <li>\u5b66\u4e60\u624b\u518c\uff1ahttps://jpf9plilub.feishu.cn/docx/CjEpd96yhoT4owx6GE7cDvZLnWg</li> <li>Q&amp;A \u6587\u6863\uff1ahttps://cguue83gpz.feishu.cn/docx/Noi7d5lllo6DMGxkuXwclxXMn5f</li> <li>GPTs: https://www.glbai.com/</li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#l1","title":"L1 \u4e66\u751f\u00b7\u6d66\u8bed\u5927\u6a21\u578b\u5168\u94fe\u8def\u5f00\u6e90\u5f00\u653e\u4f53\u7cfb","text":"<p>\u672c\u8282\u8bfe\u7a0b\u6982\u8981\uff1a</p> <p></p> <p>\u901a\u7528\u5927\u6a21\u578b\u80fd\u591f\u5e94\u5bf9\u591a\u79cd\u4efb\u52a1\u3001\u591a\u79cd\u6a21\u6001</p> <p></p> <p>\u4ece\u6a21\u578b\u5230\u5e94\u7528\u6240\u9700\u7684\u6b65\u9aa4\uff1a</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_2","title":"\u6570\u636e","text":"<p>\u5f00\u6e90\u4e66\u751f\u4e07\u5377\u6570\u636e\u96c6\uff0c\u548c OpenDataLab \u5e73\u53f0\uff0chttps://opendatalab.com/</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_3","title":"\u8bc4\u6d4b","text":"<p>\u6bd4\u8f83\u6d41\u884c\u7684\u8bc4\u6d4b\u6570\u636e\u96c6\uff1a</p> <p></p> <p>OpenCompass \u5f00\u6e90\u8bc4\u6d4b\u5e73\u53f0\uff0chttps://opencompass.org.cn/</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_4","title":"\u90e8\u7f72","text":"<p>\u5927\u8bed\u8a00\u6a21\u578b\u90e8\u7f72\u7684\u6280\u672f\u96be\u70b9\uff1a</p> <p></p> <p>LMDeploy: https://github.com/InternLM/lmdeploy</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_5","title":"\u5e94\u7528","text":"<p>\u4eceLLM\u5230\u667a\u80fd\u4f53\uff0cLagent: https://github.com/InternLM/lagent</p> <p></p> <p>AgentLego: https://github.com/InternLM/agentlego</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#l2-demo","title":"L2 \u8f7b\u677e\u73a9\u8f6c\u4e66\u751f\u00b7\u6d66\u8bed\u5927\u6a21\u578b\u8da3\u5473 Demo","text":"<p>\u6587\u6863\u5730\u5740\uff1ahttps://github.com/InternLM/tutorial/blob/main/helloworld/hello_world.md</p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#internlm-chat-7b-demo","title":"InternLM-Chat-7B \u667a\u80fd\u5bf9\u8bdd Demo","text":"<p><code>InternLM</code>\uff1ahttps://github.com/InternLM/InternLM \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7\u8bad\u7ec3\u6846\u67b6\uff0c\u65e8\u5728\u652f\u6301\u5927\u6a21\u578b\u8bad\u7ec3\u800c\u65e0\u9700\u5927\u91cf\u7684\u4f9d\u8d56\u3002\u57fa\u4e8e <code>InternLM</code> \u8bad\u7ec3\u6846\u67b6\uff0c\u4e0a\u6d77\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4\u5df2\u7ecf\u53d1\u5e03\u4e86\u4e24\u4e2a\u5f00\u6e90\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff1a<code>InternLM-7B</code> \u548c <code>InternLM-20B</code>\u3002</p> <ol> <li> <p>Command Line Demo:</p> <p></p> </li> <li> <p>Streamlit Web Demo:</p> <p></p> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#lagent-demo","title":"Lagent \u667a\u80fd\u4f53\u5de5\u5177\u8c03\u7528 Demo","text":"<p><code>Lagent</code>\uff1ahttps://github.com/InternLM/lagent \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u5f00\u6e90\u7684\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u667a\u80fd\u4f53\uff08agent\uff09\u6846\u67b6\uff0c\u652f\u6301\u7528\u6237\u5feb\u901f\u5730\u5c06\u4e00\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\u8f6c\u53d8\u4e3a\u591a\u79cd\u7c7b\u578b\u7684\u667a\u80fd\u4f53\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5178\u578b\u5de5\u5177\u4e3a\u5927\u8bed\u8a00\u6a21\u578b\u8d4b\u80fd\u3002\u67b6\u6784\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5728 <code>Web</code> \u9875\u9762\u9009\u62e9 <code>InternLM</code> \u6a21\u578b\uff0c\u7b49\u5f85\u6a21\u578b\u52a0\u8f7d\u5b8c\u6bd5\u540e\uff0c\u8f93\u5165\u6570\u5b66\u95ee\u9898 \u5df2\u77e5 <code>2x+3=10</code>\uff0c\u6c42<code>x</code> ,\u6b64\u65f6 <code>InternLM-Chat-7B</code> \u6a21\u578b\u7406\u89e3\u9898\u610f\u751f\u6210\u89e3\u6b64\u9898\u7684 <code>Python</code> \u4ee3\u7801\uff0c<code>Lagent</code> \u8c03\u5ea6\u9001\u5165 <code>Python</code> \u4ee3\u7801\u89e3\u91ca\u5668\u6c42\u51fa\u8be5\u95ee\u9898\u7684\u89e3\u3002</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#demo","title":"\u6d66\u8bed\u00b7\u7075\u7b14\u56fe\u6587\u7406\u89e3\u521b\u4f5c Demo","text":"<p>\u6d66\u8bed\u00b7\u7075\u7b14\uff1ahttps://github.com/InternLM/InternLM-XComposer\uff0c\u662f\u57fa\u4e8e\u4e66\u751f\u00b7\u6d66\u8bed\u5927\u8bed\u8a00\u6a21\u578b\u7814\u53d1\u7684\u89c6\u89c9-\u8bed\u8a00\u5927\u6a21\u578b\uff0c\u63d0\u4f9b\u51fa\u8272\u7684\u56fe\u6587\u7406\u89e3\u548c\u521b\u4f5c\u80fd\u529b\uff0c\u7ed3\u5408\u4e86\u89c6\u89c9\u548c\u8bed\u8a00\u7684\u5148\u8fdb\u6280\u672f\uff0c\u80fd\u591f\u5b9e\u73b0\u56fe\u50cf\u5230\u6587\u672c\u3001\u6587\u672c\u5230\u56fe\u50cf\u7684\u53cc\u5411\u8f6c\u6362\u3002\u4f7f\u7528\u6d66\u8bed\u00b7\u7075\u7b14\u5927\u6a21\u578b\u53ef\u4ee5\u8f7b\u677e\u7684\u521b\u4f5c\u4e00\u7bc7\u56fe\u6587\u63a8\u6587\uff0c\u4e5f\u80fd\u591f\u8f7b\u677e\u8bc6\u522b\u4e00\u5f20\u56fe\u7247\u4e2d\u7684\u7269\u4f53\uff0c\u5e76\u751f\u6210\u5bf9\u5e94\u7684\u6587\u672c\u63cf\u8ff0\u3002</p> <ol> <li> <p>\u56fe\u6587\u521b\u4f5c\uff1a</p> <p></p> </li> <li> <p>\u56fe\u7247\u7406\u89e3\uff1a</p> <p></p> </li> </ol>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#l3-internlm-langchain","title":"L3 \u57fa\u4e8e InternLM \u548c Langchain \u642d\u5efa\u4f60\u7684\u77e5\u8bc6\u5e93","text":"<p>\u6587\u6863\u5730\u5740\uff1ahttps://github.com/InternLM/tutorial/blob/main/langchain/readme.md</p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_6","title":"\u5927\u6a21\u578b\u5f00\u53d1\u8303\u5f0f","text":"<p>LLM \u5927\u6a21\u578b\u7684\u5c40\u9650\u6027</p> <ul> <li> <p>\u77e5\u8bc6\u65f6\u6548\u6027\u53d7\u9650\uff1a\u5982\u4f55\u8ba9 LLM \u80fd\u591f\u83b7\u53d6\u6700\u65b0\u7684\u77e5\u8bc6</p> </li> <li> <p>\u4e13\u4e1a\u80fd\u529b\u6709\u9650\uff1a\u5982\u4f55\u6253\u9020\u5782\u57df\u5927\u6a21\u578b</p> </li> <li> <p>\u5b9a\u5236\u5316\u6210\u672c\u9ad8\uff1a\u5982\u4f55\u6253\u9020\u4e2a\u4eba\u4e13\u5c5e\u7684 LLM \u5e94\u7528</p> </li> <li> <p>RAG (Retrieval Augmented Generation) \u68c0\u7d22\u589e\u5f3a\u751f\u6210</p> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u7ed9\u5927\u6a21\u578b\u5916\u6302\u4e00\u4e2a\u77e5\u8bc6\u5e93\uff0c\u5bf9\u4e8e\u7528\u6237\u7684\u63d0\u95ee\uff0c\u4f1a\u9996\u5148\u4ece\u77e5\u8bc6\u5e93\u4e2d\u5339\u914d\u5230\u63d0\u95ee\uff0c\u5bf9\u5e94\u56de\u7b54\u7684\u76f8\u5173\u6587\u6863\uff0c\u7136\u540e\u5c06\u6587\u6863\u548c\u63d0\u95ee\u4e00\u8d77\u4ea4\u7ed9\u5927\u6a21\u578b\u6765\u751f\u6210\u56de\u7b54\uff0c\u4ece\u800c\u63d0\u9ad8\u5927\u6a21\u578b\u7684\u77e5\u8bc6\u50a8\u5907\u3002</p> <p>RAG \u6d41\u7a0b\u56fe\uff1a</p> <p></p> <ol> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7528\u6237\u8f93\u5165\uff0c\u9996\u5148\u5c06\u57fa\u4e8e\u5411\u91cf\u6a21\u578b Sentence Transformer\uff0c\u5c06\u8f93\u5165\u6587\u672c\u8f6c\u5316\u4e3a\u5411\u91cf\uff1b</li> <li>\u5728 Chroma \u5411\u91cf\u6570\u636e\u5e93\u4e2d\u5339\u914d\u76f8\u4f3c\u7684\u6587\u672c\u6bb5\uff0c\u6211\u4eec\u8ba4\u4e3a\u4e0e\u95ee\u9898\u76f8\u4f3c\u7684\u6587\u672c\u6bb5\u5927\u6982\u7387\u5305\u542b\u4e86\u95ee\u9898\u7684\u7b54\u6848\uff1b</li> <li>\u7136\u540e\u6211\u4eec\u4f1a\u5c06\u7528\u6237\u7684\u8f93\u5165\u548c\u68c0\u7d22\u5230\u7684\u76f8\u4f3c\u6587\u672c\u6bb5\u4e00\u8d77\u5d4c\u5165\u5230\u6a21\u578b\u7684 Prompt \u4e2d\uff0c\u4f20\u9012\u7ed9 InternLM \u6a21\u578b\uff0c\u8981\u6c42\u6a21\u578b\u5bf9\u95ee\u9898\u4f5c\u51fa\u6700\u7ec8\u7684\u56de\u7b54\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u8f93\u51fa\u3002</li> </ol> <p>RAG \u4f18\u7f3a\u70b9\uff1a</p> <ul> <li> <p>\u4f4e\u6210\u672c\u4e14\u53ef\u5b9e\u65f6\u66f4\u65b0\uff1a\u5bf9\u4e8e\u65b0\u7684\u77e5\u8bc6\uff0c\u53ea\u9700\u7ec4\u7ec7\u52a0\u5165\u5230\u5916\u6302\u77e5\u8bc6\u5e93\u4e2d\u5373\u53ef\uff0c\u65e0\u9700\u5bf9\u5927\u6a21\u578b\u8fdb\u884c\u91cd\u65b0\u8bad\u7ec3\uff0c\u4e0d\u9700\u8981 GPU \u7b97\u529b\uff1b</p> </li> <li> <p>\u80fd\u529b\u53d7\u57fa\u5ea7\u6a21\u578b\u5f71\u54cd\uff1a\u5927\u57fa\u5ea7\u6a21\u578b\u7684\u80fd\u529b\u4e0a\u9650\u6781\u5927\u7a0b\u5ea6\u51b3\u5b9a\u7684 RAG \u5e94\u7528\u7684\u80fd\u529b\u5929\u82b1\u677f\uff1b</p> </li> <li>\u5355\u6b21\u56de\u7b54\u77e5\u8bc6\u6709\u9650\uff1aRAG\u5e94\u7528\u6bcf\u6b21\u9700\u8981\u5c06\u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u6863\u548c\u7528\u6237\u63d0\u95ee\u4e00\u8d77\u4ea4\u7ed9\u5927\u6a21\u578b\u8fdb\u884c\u56de\u7b54\uff0c\u5360\u7528\u4e86\u5927\u91cf\u7684\u6a21\u578b\u4e0a\u4e0b\u6587\uff1b</li> <li>\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u5927\u8de8\u5ea6\u6536\u96c6\u77e5\u8bc6\uff0c\u8fdb\u884c\u603b\u7ed3\u6027\u56de\u7b54\u7684\u95ee\u9898\u8868\u73b0\u4e0d\u4f73\u3002</li> </ul> </li> <li> <p>Finetune \u5fae\u8c03</p> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u5728\u4e00\u4e2a\u65b0\u7684\u8f83\u5c0f\u7684\u8bad\u7ec3\u96c6\u4e0a\uff0c\u8fdb\u884c\u8f7b\u91cf\u7ea7\u7684\u8bad\u7ec3\u5fae\u8c03\uff0c\u4ece\u800c\u63d0\u5347\u6a21\u578b\u5728\u8fd9\u4e2a\u65b0\u6570\u636e\u96c6\u4e0a\u7684\u80fd\u529b\u3002</p> <p>Finetune \u4f18\u7f3a\u70b9\uff1a</p> <ul> <li>\u53ef\u4e2a\u6027\u5316\u5fae\u8c03\uff1aFinetune \u8303\u5f0f\u7684\u5e94\u7528\u5c06\u5728\u4e2a\u6027\u5316\u6570\u636e\u4e0a\u5fae\u8c03\uff0c\u5145\u5206\u62df\u5408\u4e2a\u6027\u5316\u6570\u636e\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u975e\u53ef\u89c1\u77e5\u8bc6\uff0c\u5982\u56de\u7b54\u98ce\u683c\u6a21\u62df\u6548\u679c\u975e\u5e38\u597d\uff1b</li> <li>\u77e5\u8bc6\u8986\u76d6\u9762\u5e7f\uff1aFinetune \u8303\u5f0f\u7684\u5e94\u7528\u662f\u4e00\u4e2a\u65b0\u7684\u4e2a\u6027\u5316\u5927\u6a21\u578b\uff0c\u5177\u6709\u5927\u95ee\u9898\u7684\u5e7f\u9614\u77e5\u8bc6\u57df\uff1b</li> <li>\u6210\u672c\u9ad8\u6602\uff1a\u9700\u8981\u5728\u65b0\u7684\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u9700\u8981\u5f88\u591a\u7684GPU\u7b97\u529b\u548c\u4e2a\u6027\u5316\u6570\u636e\uff1b</li> <li>\u65e0\u6cd5\u5b9e\u65f6\u66f4\u65b0\uff1a\u66f4\u65b0\u6210\u672c\u9ad8\u3002</li> </ul> </li> </ul>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#langchain","title":"LangChain \u7b80\u4ecb","text":"<p>LangChain \u6846\u67b6 (https://github.com/langchain-ai/langchain) \u662f\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u80fd\u591f\u4e3a\u5404\u79cd LLM \u63d0\u4f9b\u901a\u7528\u63a5\u53e3\u6765\u7b80\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u6d41\u7a0b\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u81ea\u7531\u6784\u5efa\u5927\u6a21\u578b\u5e94\u7528\u3002LangChain \u7684\u7ec4\u4ef6\u5305\u62ec\uff1a</p> <ul> <li>\u63d0\u793a (Prompts) : \u4f7f\u6a21\u578b\u6267\u884c\u64cd\u4f5c\u7684\u65b9\u5f0f\uff1b</li> <li>\u6a21\u578b (Models) \uff1a\u5927\u8bed\u8a00\u6a21\u578b\u3001\u5bf9\u8bdd\u6a21\u578b\uff0c\u6587\u672c\u8868\u793a\u6a21\u578b\u3002\u76ee\u524d\u5305\u542b\u591a\u4e2a\u6a21\u578b\u7684\u96c6\u6210\uff1b</li> <li>\u7d22\u5f15 (Indexes) : \u83b7\u53d6\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0e\u6a21\u578b\u7ed3\u5408\u4f7f\u7528\uff1b</li> <li>\u94fe (Chains) : \u7aef\u5230\u7aef\u529f\u80fd\u5b9e\u73b0\u3002Eg. \u68c0\u7d22\u95ee\u7b54\u94fe\uff0c\u8986\u76d6\u5b9e\u73b0 RAG \u7684\u5168\u90e8\u6d41\u7a0b\uff1b</li> <li>\u4ee3\u7406 (Agents) : \u4f7f\u7528\u6a21\u578b\u4f5c\u4e3a\u63a8\u7406\u5f15\u64ce\u3002</li> </ul> <p>\u57fa\u4e8e LangChain \u642d\u5efa RAG \u5e94\u7528\uff1a</p> <p></p> <ol> <li>\u9996\u5148\u5bf9\u4e8e\u4ee5\u672c\u5730\u6587\u6863\u5f62\u5f0f\u5b58\u5728\u7684\u4e2a\u4eba\u77e5\u8bc6\u5e93\uff0c\u4f1a\u4f7f\u7528 Unstructed Loader \u7ec4\u4ef6\u6765\u52a0\u8f7d\u672c\u5730\u6587\u6863\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u4f1a\u5c06\u4e0d\u540c\u683c\u5f0f\u7684\u672c\u5730\u6587\u6863\u7edf\u4e00\u8f6c\u6362\u4e3a\u7eaf\u6587\u672c\u683c\u5f0f\uff1b</li> <li>\u7136\u540e\u901a\u8fc7 Text Splitter \u7ec4\u4ef6\uff0c\u5bf9\u63d0\u53d6\u51fa\u6765\u7684\u7eaf\u6587\u672c\u8fdb\u884c\u5206\u5272\u6210 Chunks\uff1b</li> <li>\u518d\u901a\u8fc7\u5f00\u6e90\u8bcd\u5411\u91cf\u6a21\u578b Sentence Transformer \u6765\u5c06\u6587\u672c\u6bb5\u8f6c\u5316\u4e3a\u5411\u91cf\u683c\u5f0f\uff0c\u5b58\u50a8\u5230\u57fa\u4e8e Chroma \u7684\u5411\u91cf\u6570\u636e\u5e93\u4e2d\uff1b</li> <li>\u63a5\u4e0b\u6765\u5bf9\u4e8e\u7528\u6237\u7684\u6bcf\u4e00\u4e2a\u8f93\u5165 Query\uff0c\u4f1a\u9996\u5148\u901a\u8fc7 Sentence Transformer\uff0c\u5c06\u8f93\u5165\u8f6c\u5316\u4e3a\u540c\u6837\u7ef4\u5ea6\u7684\u5411\u91cf\uff1b</li> <li>\u901a\u8fc7\u5728\u5411\u91cf\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u76f8\u4f3c\u5ea6\u7684\u5339\u914d\uff0c\u627e\u5230\u548c\u7528\u6237\u8f93\u5165\u76f8\u5173\u7684\u6587\u672c\u6bb5\uff1b</li> <li>\u5c06\u76f8\u5173\u7684\u6587\u672c\u6bb5\u5d4c\u5165\u5230\u5df2\u7ecf\u5199\u597d\u7684 Prompt Template \u4e2d\uff0c\u518d\u4ea4\u7ed9 InternLM \u8fdb\u884c\u6700\u540e\u7684\u56de\u7b54\u5373\u53ef\u3002</li> </ol> <p>\u4e0a\u8ff0\u8fd9\u4e00\u6574\u4e2a\u8fc7\u7a0b\u90fd\u4f1a\u88ab\u5c01\u88c5\u5728\u68c0\u7d22\u95ee\u7b54\u94fe\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e2a\u6027\u5316\u7684\u914d\u7f6e\u5f15\u5165\u5230\u68c0\u7d22\u95ee\u7b54\u91cc\u7684\u5bf9\u8c61\uff0c\u5373\u53ef\u6784\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684 RAG \u5e94\u7528\u3002</p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_7","title":"\u6784\u5efa\u5411\u91cf\u6570\u636e\u5e93","text":"","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_8","title":"\u642d\u5efa\u77e5\u8bc6\u5e93\u52a9\u624b","text":"<p>\u6784\u5efa\u68c0\u7d22\u95ee\u7b54\u94fe\uff1a</p> <p></p> <p>RAG \u65b9\u6848\u4f18\u5316\u5efa\u8bae\uff1a</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#l4-xtuner","title":"L4 XTuner \u5927\u6a21\u578b\u5355\u5361\u4f4e\u6210\u672c\u5fae\u8c03\u5b9e\u6218","text":"<p>\u6587\u6863\u5730\u5740\uff1ahttps://github.com/InternLM/tutorial/blob/main/xtuner/README.md</p> <p>Fine-tune \u7b80\u4ecb</p> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_9","title":"\u6307\u4ee4\u8ddf\u968f\u5fae\u8c03","text":"","tags":["Updating"]},{"location":"courses/InternLM/lecture/#_10","title":"\u589e\u91cf\u9884\u8bad\u7ec3\u5fae\u8c03","text":"","tags":["Updating"]},{"location":"courses/InternLM/lecture/#lora-qlora","title":"LoRA &amp; QLoRA","text":"<p>LoRA: Low Rank Adaptation of Large Language Models</p> <ul> <li>LLM \u7684\u53c2\u6570\u91cf\u4e3b\u8981\u96c6\u4e2d\u5728\u6a21\u578b\u4e2d\u7684 Linear\uff0c\u8bad\u7ec3\u8fd9\u4e9b\u53c2\u6570\u4f1a\u8017\u8d39\u5927\u91cf\u7684\u663e\u5b58</li> <li>LoRA \u901a\u8fc7\u5728\u539f\u672c\u7684 Linear \u65c1\uff0c\u65b0\u589e\u4e00\u4e2a\u652f\u8def\uff0c\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u5c0f Linear\uff0c\u65b0\u589e\u7684\u8fd9\u4e2a\u652f\u8def\u901a\u5e38\u53eb\u505a Adapter</li> <li>Adapter \u53c2\u6570\u91cf\u8fdc\u5c0f\u4e8e\u539f\u672c\u7684 Linear\uff0c\u80fd\u5927\u5e45\u964d\u4f4e\u8bad\u7ec3\u7684\u663e\u5b58\u6d88\u8017</li> </ul> <p></p> <p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6709\u4e00\u4e2a\u8d85\u5927\u7684\u73a9\u5177\uff0c\u73b0\u5728\u4f60\u60f3\u6539\u9020\u8fd9\u4e2a\u8d85\u5927\u7684\u73a9\u5177\u3002\u4f46\u662f\uff0c\u5bf9\u6574\u4e2a\u73a9\u5177\u8fdb\u884c\u5168\u9762\u7684\u6539\u52a8\u4f1a\u975e\u5e38\u6602\u8d35\u3002\u56e0\u6b64\uff0c\u4f60\u627e\u5230\u4e86\u4e00\u79cd\u53eb LoRA \u7684\u65b9\u6cd5\uff1a\u53ea\u5bf9\u73a9\u5177\u4e2d\u7684\u67d0\u4e9b\u96f6\u4ef6\u8fdb\u884c\u6539\u52a8\uff0c\u800c\u4e0d\u662f\u5bf9\u6574\u4e2a\u73a9\u5177\u8fdb\u884c\u5168\u9762\u6539\u52a8\u3002\u800c QLoRA \u662f LoRA \u7684\u4e00\u79cd\u6539\u8fdb\uff1a\u5982\u679c\u4f60\u624b\u91cc\u53ea\u6709\u4e00\u628a\u751f\u9508\u7684\u87ba\u4e1d\u5200\uff0c\u4e5f\u80fd\u6539\u9020\u4f60\u7684\u73a9\u5177\u3002</p> <ul> <li>Full : \ud83d\ude33 \u2192 \ud83d\udeb2</li> <li>LoRA : \ud83d\ude33 \u2192 \ud83d\udef5</li> <li>QLoRA : \ud83d\ude33 \u2192 \ud83c\udfcd</li> </ul> <p></p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#l5-lmdeploy","title":"L5 LMDeploy \u5927\u6a21\u578b\u91cf\u5316\u90e8\u7f72\u5b9e\u8df5","text":"<p>\u6587\u6863\u5730\u5740\uff1ahttps://github.com/InternLM/tutorial/blob/main/lmdeploy/lmdeploy.md</p>","tags":["Updating"]},{"location":"courses/InternLM/lecture/#l6-opencompass","title":"L6 OpenCompass \u5927\u6a21\u578b\u8bc4\u6d4b\u89e3\u8bfb\u53ca\u5b9e\u6218\u6307\u5357","text":"","tags":["Updating"]},{"location":"courses/OS_JYY/introduction/","title":"Introduction","text":"<ol> <li>\u7a0b\u5e8f = \u72b6\u6001\u673a</li> <li>\u64cd\u4f5c\u7cfb\u7edf = \u5bf9\u8c61+API (\u7a0b\u5e8f\u89d2\u5ea6) = C \u7a0b\u5e8f (\u786c\u4ef6\u89d2\u5ea6)</li> <li>\u64cd\u4f5c\u7cfb\u7edf(2023)\uff1a\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u848b\u708e\u5ca9</li> </ol>","tags":["Updating"]},{"location":"notes/Misc/","title":"Misc","text":"","tags":["Updating"]},{"location":"notes/Misc/#binary-octal-hexadecimal-literals","title":"Binary, Octal, Hexadecimal Literals","text":"<p><code>x = 10</code> in Decimal</p> <ol> <li> <p>Binary</p> <ul> <li>C <code>int x = 0b1010</code></li> <li>Python <code>x = '0b1010'</code> <code>bin(10)</code></li> <li>Java <code>int x = 0b101</code></li> </ul> </li> <li> <p>Octal</p> <ul> <li>C <code>int x = 012</code></li> <li>Python <code>x = '0o12'</code> <code>oct(10)</code></li> <li>Java <code>int x = 012</code></li> </ul> </li> <li> <p>Hexadecimal</p> <ul> <li>C <code>int x = 0xa</code></li> <li>Python <code>x = '0xa'</code> <code>hex(10)</code></li> <li>Java <code>int x = 0xa</code></li> </ul> </li> <li> <p>Bitwise operations</p> <ul> <li>AND <code>&amp;</code>, OR <code>|</code>, exclusive OR (XOR) <code>^</code>, Complement <code>~</code></li> <li>Left shift <code>&lt;&lt;</code>, Right shift <code>&gt;&gt;</code></li> </ul> </li> <li> <p>Operator precedence \u4f18\u5148\u7ea7</p> </li> <li> <p>\u5355\u76ee\u8fd0\u7b97\u7b26 (unary operator) &gt; \u53cc\u76ee\u8fd0\u7b97\u7b26 (binary operator) &gt; \u4e09\u76ee\u8fd0\u7b97\u7b26 (ternary operator)</p> </li> <li> <p><code>~, !</code> &gt; \u7b97\u6570\u8fd0\u7b97\u7b26 &gt; <code>&lt;&lt;, &gt;&gt;</code> &gt; \u5173\u7cfb\u8fd0\u7b97\u7b26 &gt; \u6309\u4f4d\u8fd0\u7b97\u7b26 &gt; <code>&amp;&amp;, ||</code> &gt; \u8d4b\u503c\u8fd0\u7b97\u7b26</p> </li> </ol>","tags":["Updating"]},{"location":"notes/Misc/#ansi-escape-code","title":"ANSI Escape Code","text":"<p>ANSI: American National Standards Institute</p> <p>ANSI escape sequences are a standard for in-band signaling to control cursor location, color, font styling, and other options on video text terminals and terminal emulators. The terminal interprets these sequences as commands, rather than text to display verbatim.</p> <p>\u4e00\u79cd\u8f6c\u4e49\u5e8f\u5217\u6807\u51c6\uff0c\u7528\u4e8e\u63a7\u5236\u89c6\u9891\u6587\u672c\u7ec8\u7aef\u4e0a\u7684\u5149\u6807\u4f4d\u7f6e\u3001\u989c\u8272\u548c\u5176\u4ed6\u9009\u9879\u3002\u7ec8\u7aef\u4f1a\u628a\u8fd9\u4e9b\u5b57\u8282\u5e8f\u5217\u89e3\u91ca\u4e3a\u76f8\u5e94\u7684\u6307\u4ee4\uff0c\u800c\u4e0d\u662f\u4e00\u5b57\u4e0d\u5dee\u7684\u6587\u672c\u3002</p> <p>\u6700\u5e38\u7528\u7684\u5e8f\u5217\u4ee3\u7801\u4e3aControl Sequence Introducer (CSI)\uff0c<code>ESC[</code>\uff0c\u5728\u7f16\u7801\u4e2d\u5199\u4e3a<code>\\033[</code>\u3002</p> <ol> <li> <p>\u5149\u6807\u79fb\u52a8\uff1a</p> <pre><code>print('\\033[2J\\033[1;1f')\n</code></pre> <ul> <li> <p><code>CSI n J</code>: Erase in Display. If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).</p> </li> <li> <p><code>CSI n ; m f</code>: Horizontal Vertical Position. Moves the cursor to row n, column m.</p> </li> <li> <p>\u6e05\u5c4f\uff0c\u79fb\u52a8\u5149\u6807\u5230\u7b2c 1 \u884c\uff0c\u7b2c 1 \u5217\u3002</p> </li> </ul> </li> <li> <p>\u6307\u5b9a\u6253\u5370\u989c\u8272\uff1a</p> <pre><code>print(\"\\033[31mRed\\033[0m\")\nprint(\"\\033[32mGreen\\033[0m\")\n</code></pre> <ul> <li><code>CSI n m</code>: Select Graphic Rendition (SGR), sets display attributes.</li> <li><code>CSI 0 m</code>: Reset or normal. All attributes off.</li> <li>m in <code>30-39</code>: Set foreground color. \u7ea2\u8272\u4e3a 31\uff0c\u7eff\u8272\u4e3a 32\u3002</li> <li>m in <code>40-49</code>: Set background color.</li> <li>\u4ee5\u7ea2\u8272\u8f93\u51fa Red\uff0c\u4ee5\u7eff\u8272\u8f93\u51fa Green\u3002</li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/Misc/#endianness","title":"Endianness","text":"<p>Endianness is primarily expressed as big-endian (BE) or little-endian (LE). A big-endian system stores the most significant byte of a word at the smallest memory address and the least significant byte at the largest. A little-endian system, in contrast, stores the least-significant byte at the smallest address.</p> <p>\u5927\u7aef\u6a21\u5f0f\uff1a\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u5730\u5740\u4e2d\uff0c\u4f4e\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u5730\u5740\u4e2d\u3002\u5c0f\u7aef\u6a21\u5f0f\uff1a\u4f4e\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u5730\u5740\u4e2d\uff0c\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u5730\u5740\u4e2d\u3002\u5927\u90e8\u5206\u73b0\u4ee3\u8ba1\u7b97\u673a\u5b58\u50a8\u6a21\u5f0f\u90fd\u4e3a little-endian\uff0c\u5982<code>x86-64</code>\uff0c\u8fd8\u6709\u4e24\u79cd\u6a21\u5f0f\u90fd\u5141\u8bb8\u7684\u67b6\u6784\uff0c\u5982<code>ARM, RISC-V</code>\uff0c\u7f51\u7edc\u63a5\u53e3\u4f20\u8f93\u4f7f\u7528\u7684\u57fa\u672c\u90fd\u662f big-endian\u3002</p>","tags":["Updating"]},{"location":"notes/Misc/#regular-expression","title":"Regular Expression","text":"","tags":["Updating"]},{"location":"notes/languages/C/","title":"Clang","text":"","tags":["Updating"]},{"location":"notes/languages/C/#x-macro","title":"X Macro","text":"<ol> <li> <p>X \u5b8f\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n\n#define REGS_FOREACH(_)  _(X) _(Y)\n#define RUN_LOGIC        X1 = !X &amp;&amp; Y; \\\n                        Y1 = !X &amp;&amp; !Y;\n#define DEFINE(X)        static int X, X##1;\n#define UPDATE(X)        X = X##1;\n#define PRINT(X)         printf(#X \" = %d; \", X);\n\nint main() {\n REGS_FOREACH(DEFINE);\n while (1) { // clock\n   RUN_LOGIC;\n   REGS_FOREACH(PRINT);\n   REGS_FOREACH(UPDATE);\n   putchar('\\n'); sleep(1);\n }\n}\n</code></pre> </li> <li> <p><code>gcc -E x_macro.c</code>\uff0c\u6700\u540e\u51e0\u884c\u7ed3\u679c\uff1a</p> <pre><code>int main() {\n static int X, X1; static int Y, Y1;;\n while (1) {\n   X1 = !X &amp;&amp; Y; Y1 = !X &amp;&amp; !Y;;\n   printf(\"X\" \" = %d; \", X); printf(\"Y\" \" = %d; \", Y);;\n   X = X1; Y = Y1;;\n   putchar('\\n'); sleep(1);\n }\n}\n</code></pre> <p><code>printf(\"1\" \" 2\" \" 3\\n\");</code> \u5728\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u628a\u591a\u4e2a\u53cc\u5f15\u53f7\u7684\u5185\u5bb9\u5408\u5e76\uff0c\u76f8\u5f53\u4e8e<code>printf(\"1 2 3\\n\");</code></p> </li> <li> <p><code>man gcc</code>\uff0c\u67e5\u770b<code>-E</code>\uff1a</p> <pre><code>      -E  Stop after the preprocessing stage; do not run the\n          compiler proper.  The output is in the form of\n          preprocessed source code, which is sent to the standard\n          output.\n\n          Input files that don't require preprocessing are ignored.\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/languages/Java/","title":"Java","text":"","tags":["Updating"]},{"location":"notes/languages/Python/","title":"Python","text":"","tags":["Updating"]},{"location":"notes/languages/Python/#sys","title":"sys","text":"<ol> <li><code>sys.byteorder</code>: An indicator of the native byte order. Edianness output <code>little</code> or <code>big</code>.</li> </ol>","tags":["Updating"]},{"location":"notes/languages/Python/#fileinput","title":"fileinput","text":"<ol> <li> <p>Create an instance of the <code>FileInput</code> class.</p> <p>\u4f7f\u7528<code>readline()</code>\u65b9\u6cd5\u8bfb\u53d6\u4e00\u884c\u8f93\u5165\uff1a</p> <pre><code>&gt;&gt;&gt; import fileinput\n&gt;&gt;&gt; stdin = fileinput.input()\n&gt;&gt;&gt; stdin.readline()\nhello world\n'hello world\\n'\n&gt;&gt;&gt; stdin.readline()\n\n'\\n'\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/languages/Python/#built-in-functions","title":"Built-in Functions","text":"<ol> <li> <p><code>exec()</code>: This function supports dynamic execution of Python code. object must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs).</p> <p>\u8f93\u5165\u4e00\u884c\u5b57\u7b26\u4e32\u5e76\u4f5c\u4e3a Python \u8bed\u53e5\u6267\u884c\uff1a</p> <pre><code>&gt;&gt;&gt; import fileinput\n&gt;&gt;&gt; stdin = fileinput.input()\n&gt;&gt;&gt; exec(stdin.readline())\nx = 1; y = 2;\n&gt;&gt;&gt; x, y\n(1, 2)\n&gt;&gt;&gt; exec(stdin.readline())\narr = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; arr\n[1, 2, 3, 4, 5]\n</code></pre> </li> <li> <p><code>globals()</code>: Return a dictionary representing the current global symbol table. This is always the dictionary of the current module (inside a function or method, this is the module where it is defined, not the module from which it is called).</p> <p>\u5168\u5c40\u7b26\u53f7\u8868</p> <pre><code>&gt;&gt;&gt; a, b, c = 1, 2, 3\n&gt;&gt;&gt; globals()['a'] = -1\n&gt;&gt;&gt; globals()\n{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': &lt;class '_frozen_importlib.BuiltinImporter'&gt;, '__spec__': None, '__annotations__': {}, '__builtins__': &lt;module 'builtins' (built-in)&gt;, 'a': -1, 'b': 2, 'c': 3}\n</code></pre> </li> <li> <p><code>ord(c)</code>: Given a string representing one Unicode character, return an integer representing the Unicode code point of that character <code>c</code>. <code>chr(i)</code>: Return the string representing a character whose Unicode code point is the integer\u00a0<code>i</code>.</p> <p>Unicode \u5b57\u7b26\u4e0e\u7f16\u7801\u76f8\u4e92\u8f6c\u6362</p> <pre><code>&gt;&gt;&gt; ord('a'), chr(97), ord('0'), chr(48)\n(97, 'a', 48, '0')\n</code></pre> </li> <li> <p><code>format(value[, format_spec])</code>: Convert a value to a \u201cformatted\u201d representation, as controlled by format_spec. <code>bin(x)</code>: Convert an integer number to a\u00a0binary string prefixed with \u201c0b\u201d. <code>oct(x)</code>: Convert an integer number to an octal string prefixed with \u201c0o\u201d. <code>hex(x)</code>: Convert an integer number to a lowercase hexadecimal string prefixed with \u201c0x\u201d.</p> <pre><code>&gt;&gt;&gt; bin(14), oct(14), hex(14)\n('0b1110', '0o16', '0xe')\n&gt;&gt;&gt; format(14, '#b'), format(14, 'b')\n('0b1110', '1110')\n&gt;&gt;&gt; f'{14:#b}', f'{14:b}'\n('0b1110', '1110')\n&gt;&gt;&gt; f'{14:#x}', f'{14:x}'\n('0xe', 'e')\n&gt;&gt;&gt; f'{14:#o}', f'{14:o}'\n('0o16', '16')\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/languages/Python/#ipython-tips","title":"IPython Tips","text":"<ol> <li> <p>\u5982\u679c\u4f60\u4e0d\u786e\u5b9a function, class, or method \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u6253\u5370 <code>__doc__</code> \u5c5e\u6027\uff0c\u67e5\u770b\u6587\u6863\uff0c\u6216\u8005\u5728 IPython \u4e2d\u8bed\u53e5\u672b\u5c3e\u52a0\u4e0a\u4e00\u4e2a question mark <code>?</code> \uff0c\u4e24\u4e2a <code>??</code> \u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9</p> <pre><code>In [17]: print(spark.read.__doc__)\n\n    Interface used to load a :class:`DataFrame` from external storage systems\n    (e.g. file systems, key-value stores, etc). Use :attr:`SparkSession.read`\n    to access this.\n\n    .. versionadded:: 1.4.0\n\n    .. versionchanged:: 3.4.0\n        Supports Spark Connect.\n\n\nIn [18]: spark.read?\nType:        property\nString form: &lt;property object at 0x104841b20&gt;\nDocstring:\nReturns a :class:`DataFrameReader` that can be used to read data\nin as a :class:`DataFrame`.\n\n.. versionadded:: 2.0.0\n\n.. versionchanged:: 3.4.0\n    Supports Spark Connect.\n\nReturns\n-------\n:class:`DataFrameReader`\n\nExamples\n--------\n&gt;&gt;&gt; spark.read\n&lt;...DataFrameReader object ...&gt;\n\nWrite a DataFrame into a JSON file and read it back.\n\n&gt;&gt;&gt; import tempfile\n&gt;&gt;&gt; with tempfile.TemporaryDirectory() as d:\n...     # Write a DataFrame into a JSON file\n...     spark.createDataFrame(\n...         [{\"age\": 100, \"name\": \"Hyukjin Kwon\"}]\n...     ).write.mode(\"overwrite\").format(\"json\").save(d)\n...\n...     # Read the JSON file as a DataFrame.\n...     spark.read.format('json').load(d).show()\n+---+------------+\n|age|        name|\n+---+------------+\n|100|Hyukjin Kwon|\n+---+------------+\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/languages/Vocabulary/","title":"Vocabulary","text":"<p>Useful dictionaries:</p> <ol> <li>Cambridge Dictionary</li> <li>\u6709\u9053 youdao</li> </ol>","tags":["Updating"]},{"location":"notes/languages/Vocabulary/#computer-science","title":"Computer Science","text":"<ol> <li>Signed number representations:<ul> <li>Sign-magnitude \u539f\u7801</li> <li>One's complement \u53cd\u7801</li> <li>Two's complement \u8865\u7801</li> </ul> </li> <li>Arithematic property:<ul> <li>Commutative \u4ea4\u6362\u5f8b</li> <li>Associative \u7ed3\u5408\u5f8b</li> <li>Distributive \u5206\u914d\u5f8b</li> </ul> </li> <li>Function property:<ul> <li>Monotonic \u5355\u8c03</li> <li>Asymptotic \u6e10\u8fdb\u7684\uff0casymptotic complexity \u6e10\u8fdb\u590d\u6742\u5ea6</li> </ul> </li> <li>Pernicious \u6709\u5bb3\u7684</li> <li>\u952e\u76d8\u7b26\u53f7\u82f1\u6587 \u535a\u5ba2\u56ed<ul> <li>Tilde <code>~</code>, Underscore <code>_</code>, Dash/minus <code>-</code></li> <li>Colon <code>:</code>, Semicolon <code>;</code></li> <li>Slash <code>/</code>, Backslash <code>\\</code> </li> <li>Asterisk <code>*</code>, Sharp/Hash <code>#</code>, Caret <code>^</code></li> <li>Brace <code>{}</code>, Bracket <code>[]</code>, Parenthesis <code>()</code></li> </ul> </li> <li> <p>Verbal:</p> <ul> <li><code>-1e20</code>: Minus ten to the twentieth</li> <li><code>2^10</code>: Two to the tenth</li> <li><code>18 mod 16 = 2</code>: 18 modules of 16 is 2</li> </ul> </li> <li> <p>Under the hood</p> <ul> <li>\u5728\u67d0\u7269\u7684\u5185\u90e8\u5de5\u4f5c\u8fc7\u7a0b</li> <li>If you want to know how this office works, you need to look under the hood at the real workers.</li> <li>Hood: \u8863\u670d\u4e0a\u7684\u515c\u5e3d\uff1b\u6c7d\u8f66\u5f15\u64ce\u76d6</li> <li>Hoody: \u5957\u5934\u886b\uff1b\u536b\u8863</li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/","title":"Big Data","text":"<p>Reference:</p> <ol> <li>Data Analysis with Python and PySpark,  ISBN: 9781617297205</li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#glossary","title":"Glossary","text":"<ol> <li>RDD<ul> <li>Resilient Distributed Dataset</li> <li>\u4e0d\u53ef\u53d8\u7684\u5206\u5e03\u5f0f\u5bf9\u8c61\u96c6\u5408</li> <li>After Spark 2.0, RDDs are replaced by Dataset, which is strongly-typed like an RDD, but with richer optimizations under the hood. We highly recommend you to switch to use Dataset, which has better performance than RDD.</li> </ul> </li> <li>Hadoop \u4e09\u4e2a\u7ec4\u6210\u90e8\u5206<ul> <li>MapReduce: \u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\u7684\u7f16\u7a0b\u6846\u67b6</li> <li>HDFS: Hadoop Distributed File System\uff0cHadoop \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf</li> <li>YARN: Yet Another Resource Negotiator\uff0c\u8d44\u6e90\u8c03\u5ea6\u5e73\u53f0</li> </ul> </li> <li>ETL<ul> <li>Extract-Transform-Load</li> <li>\u662f\u4e00\u4e2a\u6570\u636e\u6d41 pipeline \u7684\u63a7\u5236\u6280\u672f</li> <li>\u662f\u5c06\u5927\u91cf\u7684\u539f\u59cb\u6570\u636e\u7ecf\u8fc7\u63d0\u53d6 extract\u3001\u8f6c\u6362 transform\u3001\u52a0\u8f7d load \u5230\u76ee\u6807\u5b58\u50a8\u6570\u636e\u4ed3\u5e93\u7684\u8fc7\u7a0b</li> </ul> </li> <li>Data Lakes \u6570\u636e\u6e56\uff0cBig Data Warehouse \u5927\u6570\u636e\u4ed3\u5e93</li> <li>UDF: User Defined Functions\uff0cPySpark \u81ea\u5b9a\u4e49\u51fd\u6570</li> <li>REPL: Python\u89e3\u91ca\u5668\u7684\u4ea4\u4e92\u5f0f\u6a21\u5f0f<ul> <li>Read: \u8bfb\u53d6\u7528\u6237\u8f93\u5165</li> <li>Eval: \u6267\u884c\u8f93\u5165\u5185\u5bb9</li> <li>Print: \u6267\u884c\u8f93\u5165\u5185\u5bb9</li> <li>Loop: \u6267\u884c\u8f93\u5165\u5185\u5bb9</li> </ul> </li> <li>\u6587\u4ef6\u683c\u5f0f<ul> <li>CSV: Comma Separated Values \u9017\u53f7\u5206\u9694\u503c</li> <li>JSON: JavaScript Object Notation</li> <li>ORC: Optimized Row Columnar</li> <li>Parquet: Column-oriented data file format </li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#spark-pyspark","title":"Spark &amp; PySpark","text":"","tags":["Updating"]},{"location":"notes/techniques/BigData/#definition","title":"Definition","text":"<ol> <li>Spark is a unified analytics engine for large-scale data processing. \u7528\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u5904\u7406\u7684\u7edf\u4e00\u5206\u6790\u5f15\u64ce</li> <li>Scaling out instead of scaling up. \u5c06\u6570\u636e split \u52302\u4e2a\u4e2d\u578b\u8ba1\u7b97\u673a\uff0c\u800c\u4e0d\u662f\u4f7f\u75281\u4e2a\u5927\u578b\u8ba1\u7b97\u673a</li> <li>Spark itself is coded in Scala. Python codes have to be translated to and from JVM instructions.</li> <li>\u4ee3\u66ff Hadoop \u4e2d\u7684 MapReduce \u6846\u67b6</li> </ol> <p>Data Factory:</p> <p></p> <ol> <li>\u5728 Spark cluster \u4e2d\u6bcf\u4e2a workbench / computer \u4f1a\u5206\u914d\u4e00\u4e9b workers / executors</li> <li>\u8fd9\u4e9b workers / executors \u4e2d\u6709\u4e00\u4e2a master\uff0c\u5bf9\u7a0b\u5e8f\u7684\u6548\u7387\u5f88\u91cd\u8981</li> </ol> <p>Spark \u7b97\u5b50 / RDD Operations \u53ef\u4ee5\u88ab\u5f52\u4e3a2\u7c7b\uff1a</p> <ol> <li> <p>Actions (IO)</p> <ul> <li> <p>via the <code>show</code> and <code>write</code> methods</p> </li> <li> <p>Printing information on the screen</p> </li> <li> <p>Writing data to a hard drive or cloud bucket</p> </li> </ul> </li> <li> <p>Transformations (Lazy)</p> <ul> <li>Adding a column to a table</li> <li>Performing an aggregation according to certain keys</li> <li>Computing summary statistics on a data set</li> <li>Training a Machine Learning model on some data</li> </ul> </li> <li> <p>Lazy computation model, will take this to the extreme and will avoid performing data work until an action triggers the computation chain. \u6240\u6709\u7684 Transformations \u90fd\u662f Lazy \u64cd\u4f5c\uff0c\u53ea\u8bb0\u5f55\u9700\u8981\u8fdb\u884c\u7684\u8f6c\u6362\uff0c\u5e76\u4e0d\u4f1a\u9a6c\u4e0a\u6267\u884c\uff0c\u53ea\u6709\u9047\u5230 Actions \u64cd\u4f5c\u65f6\u624d\u4f1a\u771f\u6b63\u542f\u52a8\u8ba1\u7b97\u8fc7\u7a0b\u5e76\u8fdb\u884c\u8ba1\u7b97\u3002</p> </li> <li> <p>Reading data, although clearly being I/O, is considered a transformation by Spark.</p> </li> </ol> <p>QuickStart: https://spark.apache.org/docs/latest/quick-start.html</p> <ol> <li>Install: <code>brew install openjdk@17 apache-spark</code></li> <li>Launch the PySpark shell in IPython: <code>PYSPARK_DRIVER_PYTHON=ipython pyspark</code></li> <li>Spark\u2019s primary abstraction is a distributed collection of items called a Dataset. Datasets can be created from Hadoop InputFormats (such as HDFS files) or by transforming other Datasets. All Datasets in Python are Dataset[Row], and we call it <code>DataFrame</code>.</li> <li>Caching: Spark also supports pulling data sets into a cluster-wide in-memory cache. This is very useful when data is accessed repeatedly, such as when querying a small \u201chot\u201d dataset or when running an iterative algorithm like PageRank.</li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#cluster-manager","title":"Cluster Manager","text":"<p>Cluster Mode Overview: https://spark.apache.org/docs/latest/cluster-overview.html</p> <p></p> <p>Spark applications run as independent sets of processes on a cluster, coordinated by the <code>SparkContext</code> object in your main program (called the driver program).</p> <p>\u5de5\u4f5c\u539f\u7406\uff1a</p> <ol> <li> <p>\u5728 cluster \u4e0a\u8fd0\u884c\u65f6\uff0c<code>SparkContext</code> \u53ef\u4ee5\u8fde\u63a5\u5230\u4e0d\u540c\u7c7b\u578b\u7684 cluster managers \u4e0a</p> <ul> <li> <p>Cluster Manager \u7c7b\u578b\uff1a</p> <ul> <li>Standalone: Spark\u2019s own standalone cluster manager</li> <li>Apache Mesos: Deprecated</li> <li>Hadoop YARN: The resource manager in Hadoop 3</li> <li>Kubernetes: An open-source system for automating deployment, scaling, and management of containerized applications</li> </ul> </li> <li> <p>Cluster Manager \u4f5c\u7528\uff1aAllocate resources across applications</p> </li> <li> <p>Deploy mode:</p> <p>https://blog.csdn.net/shuyv/article/details/116569355</p> <ul> <li> <p>In \"cluster\" mode, the framework launches the driver inside of the cluster.</p> <p>\u5e94\u7528 Driver Program \u8fd0\u884c\u5728\u63d0\u4ea4\u5e94\u7528 Client \u4e3b\u673a\u4e0a\uff08\u542f\u52a8 JVM Process \u8fdb\u7a0b\uff09\u3001</p> <p></p> </li> <li> <p>In \"client\" mode, the submitter launches the driver outside of the cluster.</p> <p>\u5e94\u7528Driver Program\u8fd0\u884c\u5728\u96c6\u7fa4\u4ece\u8282\u70b9 Worker \u67d0\u53f0\u673a\u5668\u4e0a</p> <p></p> </li> </ul> </li> </ul> </li> <li> <p>\u5efa\u7acb\u8fde\u63a5\u540e\uff0cSpark  \u4f1a\u83b7\u53d6 executors</p> <ul> <li>Executors \u5728 cluster \u91cc\u7684 worker nodes \u5f53\u4e2d</li> <li>Executors are processes that run computations and store data for your application.</li> <li>Each application gets its own executor processes.</li> </ul> </li> <li> <p><code>SparkContext</code> \u5c06\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801 (JAR or Python files) \u53d1\u9001\u7ed9 executors</p> </li> <li> <p><code>SparkContext</code> \u5c06 task \u53d1\u9001\u7ed9 executors \u8fd0\u884c</p> <ul> <li>Each job gets divided into smaller sets of tasks called stages that depend on each other (similar to the map and reduce stages in MapReduce).</li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#rdd","title":"RDD","text":"<p>RDD Programming Guide: https://spark.apache.org/docs/latest/rdd-programming-guide.html</p> <p>Resilient Distributed Dataset (RDD)  is a fault-tolerant collection of elements partitioned across the nodes of the cluster, and can be operated on in parallel.</p> <ol> <li>RDDs are created by starting with a file in the Hadoop file system (or any other Hadoop-supported file system), or an existing Scala collection in the driver program, and transforming it.</li> <li>Users may also ask Spark to persist an RDD in memory, allowing it to be reused efficiently across parallel operations.</li> <li>Finally, RDDs automatically recover from node failures.</li> </ol> <p>Parallelized Collections:</p> <ol> <li> <p>Created by calling <code>SparkContext</code>\u2019s <code>parallelize</code> method on an existing iterable or collection in your driver program. We can call <code>distData.reduce(lambda a, b: a + b)</code> to add up the elements of the list.</p> <pre><code>In [4]: sc = spark.sparkContext\n\nIn [6]: data = [1, 2, 3, 4, 5]\n\nIn [7]: distData = sc.parallelize(data)\n\nIn [8]: distData\nOut[8]: ParallelCollectionRDD[0] at readRDDFromFile at PythonRDD.scala:289\n\nIn [9]: distData.reduce(lambda a, b: a + b)\nOut[9]: 15\n\nIn [10]: distData.reduce(lambda a, b: a * b)\nOut[10]: 120\n</code></pre> </li> <li> <p>Spark will run one task for each partition of the cluster. Typically you want 2-4 partitions for each CPU in your cluster.</p> </li> <li> <p>Normally, Spark tries to set the number of partitions automatically based on your cluster. However, you can also set it manually by passing it as a second parameter to <code>parallelize</code> (e.g. <code>sc.parallelize(data, 10)</code>).</p> </li> </ol> <p>Shared Variables:</p> <p>Spark supports two types of shared variables that can be used in parallel operations.</p> <ol> <li>Broadcast variables can be used to cache a read-only value in memory on all nodes.</li> <li>Accumulators are variables that are only \u201cadded\u201d to, such as counters and sums.</li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#spark-sql","title":"Spark SQL","text":"<p>Spark SQL, DataFrames and Datasets Guide: https://spark.apache.org/docs/latest/sql-programming-guide.html</p>","tags":["Updating"]},{"location":"notes/techniques/BigData/#misc","title":"Misc","text":"<ol> <li>Example: https://spark.apache.org/examples.html</li> <li>Submitting applications (<code>spark-submit</code>)<ul> <li>https://spark.apache.org/docs/latest/submitting-applications.html</li> <li><code>--master local[K]</code>: Run Spark locally with K worker threads (ideally, set this to the number of cores on your machine).</li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#performance","title":"Performance","text":"<p>Web UI: https://spark.apache.org/docs/latest/web-ui.html</p> <p>Monitoring and Instrumentation: https://spark.apache.org/docs/latest/monitoring.html</p>","tags":["Updating"]},{"location":"notes/techniques/BigData/#pyspark-api","title":"PySpark API","text":"","tags":["Updating"]},{"location":"notes/techniques/BigData/#sparksession","title":"SparkSession","text":"<p>API: https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/spark_session.html</p> <p>The entry point to programming Spark with the Dataset and DataFrame API. A SparkSession can be used to create DataFrame, register DataFrame as tables, execute SQL over tables, cache tables, and read parquet files. To create a Spark session, you should use <code>SparkSession.builder</code> attribute.</p> <pre><code>In [1]: from pyspark.sql import SparkSession\n\nIn [2]: spark = SparkSession.builder.getOrCreate()\n24/01/29 16:19:10 WARN Utils: Your hostname, mbp.local resolves to a loopback address: 127.0.0.1; using 192.168.226.124 instead (on interface en0)\n24/01/29 16:19:10 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address\nSetting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n24/01/29 16:19:40 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n</code></pre> <p><code>SparkSession</code> is a super-set of <code>SparkContext</code>. It wraps the <code>SparkContext</code> and provides functionality for interacting with <code>SparkContext</code> data in a distributed fashion. \u6ce8\u610f\u8fd9\u91cc <code>spark.sparkContext</code> \u662f\u5c0f\u5199\u5b57\u6bcd</p> <pre><code>In [3]: spark.sparkContext\nOut[3]: &lt;SparkContext master=local[*] appName=pyspark-shell&gt;\n</code></pre> <ol> <li> <p>\u8bbe\u7f6e\u65e5\u5fd7\u7b49\u7ea7\uff1a<code>SparkContext.setLogLevel(logLevel: str) \u2192 None</code>\uff0c\u9ed8\u8ba4 <code>WARN</code></p> <p></p> </li> <li> <p>Eager Evaluation: when you want your data frames to be evaluated after each transformation.</p> <ul> <li><code>.config(\"spark.sql.repl.eagerEval.enabled\", \"True\")</code></li> <li>Spark Configuration: https://spark.apache.org/docs/latest/configuration</li> </ul> </li> <li> <p>Reading data into a data frame is done through <code>DataFrameReader</code> the  object, which we can access through <code>spark.read</code>.</p> <pre><code>In [12]: spark.read\nOut[12]: &lt;pyspark.sql.readwriter.DataFrameReader at 0x1074cb810&gt;\n\nIn [13]: print(dir(spark.read))\n['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_df', '_jreader', '_set_opts', '_spark', 'csv', 'format', 'jdbc', 'json', 'load', 'option', 'options', 'orc', 'parquet', 'schema', 'table', 'text']\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#dataframe","title":"DataFrame","text":"<p>API: https://spark.apache.org/docs/3.5.0/api/python/reference/pyspark.sql/dataframe.html</p> <p>A distributed collection of data grouped into named columns. In the RDD, each record is processed independently. With the data frame, we work with its columns, performing functions on them.</p> <p></p> <ol> <li> <p><code>printSchema(level: Optional[int] = None) \u2192 None</code></p> <p>Prints out the schema in the tree format. Optionally allows to specify how many levels to print if schema is nested. </p> <pre><code>In [15]: df = spark.createDataFrame([(1, (2,2))], [\"a\", \"b\"])\n\nIn [16]: df.printSchema(2)\nroot\n |-- a: long (nullable = true)\n |-- b: struct (nullable = true)\n |    |-- _1: long (nullable = true)\n |    |-- _2: long (nullable = true)\n</code></pre> </li> <li> <p><code>show(n: int = 20, truncate: Union[bool, int] = True, vertical: bool = False) \u2192 None</code></p> <p>Prints the first <code>n</code> rows to the console.</p> <pre><code>In [23]: df = spark.createDataFrame([\n    ...:     (14, \"Tom\"), (23, \"Alice\"), (16, \"Bob\")], [\"age\", \"name\"])\n\nIn [24]: df.show(n=2, truncate=3)\n+---+----+\n|age|name|\n+---+----+\n| 14| Tom|\n| 23| Ali|\n+---+----+\nonly showing top 2 rows\n</code></pre> </li> <li> <p><code>select(*cols: ColumnOrName) \u2192 DataFrame</code></p> <p>Projects a set of expressions and returns a new DataFrame.</p> <pre><code>[ins] In [15]: df = spark.createDataFrame([\n          ...:     (2, \"Alice\"), (5, \"Bob\")], schema=[\"age\", \"name\"])\n\n[ins] In [16]: df.select(df.name, (df.age + 10).alias('age')).show()\n+-----+---+\n| name|age|\n+-----+---+\n|Alice| 12|\n|  Bob| 15|\n+-----+---+\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#column","title":"Column","text":"<p>API: https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/column.html</p> <p>A column in a DataFrame.</p> <ol> <li> <p><code>alias(*alias: str, **kwargs: Any) \u2192 pyspark.sql.column.Column</code></p> <p>When performing transformation on your columns, PySpark will give a default name to the resulting column.</p> <pre><code>[ins] In [35]: sf.split(sf.col(\"value\"), \" \")\nOut[35]: Column&lt;'split(value,  , -1)'&gt;\n\n[ins] In [36]: sf.split(sf.col(\"value\"), \" \").alias(\"words\")\nOut[36]: Column&lt;'split(value,  , -1) AS words'&gt;\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#functions","title":"Functions","text":"<p><code>import pyspark.sql.functions as sf</code></p> <p>API: https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/functions.html</p> <p>PySpark uses a translation layer to call JVM functions for its core functions. From Spark 3.5:</p> <p></p> <ol> <li> <p><code>col(col: str) \u2192 pyspark.sql.column.Column</code></p> <p>Returns a Column based on the given column name.</p> </li> <li> <p><code>split(str: ColumnOrName, pattern: str, limit: int = - 1) \u2192 pyspark.sql.column.Column</code></p> <p>Splits str around matches of the given pattern. The regex string should be a Java regular expression.</p> </li> <li> <p><code>explode(col: ColumnOrName) \u2192 pyspark.sql.column.Column</code></p> <p></p> <p>Returns a new row for each element in the given array or map. Uses the default column name col for elements in the array and key and value for elements in the map unless specified otherwise.</p> <pre><code>[ins] In [54]: from pyspark.sql import Row\n\n[ins] In [55]: row = Row(a=1, intlist=[1,2,3], mapfield={\"a\": \"b\"})\n\n[ins] In [56]: df = spark.createDataFrame([row, row])\n\n[ins] In [57]: df.show()\n+---+---------+--------+\n|  a|  intlist|mapfield|\n+---+---------+--------+\n|  1|[1, 2, 3]|{a -&gt; b}|\n|  1|[1, 2, 3]|{a -&gt; b}|\n+---+---------+--------+\n\n\n[ins] In [58]: df.select(sf.explode('intlist')).show()\n+---+\n|col|\n+---+\n|  1|\n|  2|\n|  3|\n|  1|\n|  2|\n|  3|\n+---+\n\n\n[ins] In [59]: df.select(sf.explode('mapfield')).show()\n+---+-----+\n|key|value|\n+---+-----+\n|  a|    b|\n|  a|    b|\n+---+-----+\n</code></pre> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#hive","title":"Hive","text":"","tags":["Updating"]},{"location":"notes/techniques/BigData/#common-hiveql","title":"Common HiveQL","text":"","tags":["Updating"]},{"location":"notes/techniques/BigData/#documents","title":"Documents","text":"<ol> <li> <p>HiveQL Data Definition Language (DDL)  HiveQL \u8bed\u6cd5</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL</li> <li><code>TIME</code> \u5c5e\u4e8e\u4fdd\u7559\u5b57</li> </ul> </li> <li> <p>Hive Operators \u8fd0\u7b97\u7b26</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/Hive+Operators</li> <li><code>A &lt;&gt; B</code>: NULL if A or B is NULL, TRUE if expression A is NOT equal to expression B, otherwise FALSE.</li> </ul> </li> <li> <p>Hive Data Types \u6570\u636e\u7c7b\u578b</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types</li> <li>INT/INTEGER (4-byte signed integer, from -2,147,483,648 to 2,147,483,647)</li> </ul> </li> <li> <p>Managed vs. External Tables \u5185\u90e8\u8868\u548c\u5916\u90e8\u8868\u7684\u533a\u522b</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/Managed+vs.+External+Tables</li> <li>https://zhuanlan.zhihu.com/p/580296016</li> <li>\u5185\u90e8\u8868\uff1aUse managed tables when Hive should manage the lifecycle of the table, or when generating temporary tables.</li> <li>\u5916\u90e8\u8868\uff1aUse external tables when files are already present or in remote locations, and the files should remain even if the table is dropped.</li> </ul> </li> <li> <p>Hive Operators and User-Defined Functions (UDFs)</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF</li> <li><code>regexp_replace(string INITIAL_STRING, string PATTERN, string REPLACEMENT)</code></li> <li><code>substr(string|binary A, int start)</code></li> <li><code>md5(string/binary)</code><ul> <li>Calculates an MD5 128-bit checksum for the string or binary (as of Hive 1.3.0). The value is returned as a string of 32 hex digits, or NULL if the argument was NULL. Example: <code>md5('ABC') = '902fbdd2b1df0c4f70b4a5d23525e932'</code>.</li> </ul> </li> <li><code>if(boolean testCondition, T valueTrue, T valueFalseOrNull)</code><ul> <li>Returns valueTrue when testCondition is true, returns valueFalseOrNull otherwise.</li> </ul> </li> <li><code>from_unixtime(bigint unixtime[, string pattern])</code><ul> <li>Converts a number of seconds since epoch (1970-01-01 00:00:00 UTC) to a string representing the timestamp of that moment in the current time zone(using config \"hive.local.time.zone\") using the specified pattern.</li> <li>\u65f6\u533a\u95ee\u9898\uff1ahttps://blog.csdn.net/weixin_38251332/article/details/122101966</li> </ul> </li> </ul> </li> <li> <p>Hive CLI</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Cli</li> <li><code>hive -i &lt;filename&gt;</code>, Initialization SQL file<ul> <li>Running an initialization script before entering interactive mode</li> </ul> </li> <li><code>hive -f &lt;filename&gt;</code>, SQL from files<ul> <li>Running a script non-interactively from local disk or from a Hadoop supported filesystem</li> </ul> </li> <li><code>hive -i &lt;init_sql&gt; -f &lt;script_sql&gt;</code></li> <li>\u4f20\u5165\u53c2\u6570variable<ul> <li><code>hive --hivevar queue=default</code></li> </ul> </li> </ul> </li> <li> <p>StatsDev</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/StatsDev</li> <li>https://www.cnblogs.com/coco2015/p/15870532.html\uff0c\u5f53 <code>COUNT(*)</code> \u4e3a 0 \u65f6\uff0c\u4f7f\u7528 <code>analyze table &lt;table_name&gt; compute statistics;</code> \u66f4\u65b0 metastore\uff0c\u6216\u8005 <code>set hive.compute.query.using.stats=false;</code></li> </ul> </li> <li> <p>Beeline CLI</p> <ul> <li>https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients</li> <li><code>beeline -u &lt;database_url&gt;</code>, The JDBC URL to connect to</li> <li><code>beeline -i &lt;file&gt;</code>, The init files for initialization</li> <li><code>beeline --outputformat=csv2</code><ul> <li><code>--outputformat=[table/vertical/csv/tsv/dsv/csv2/tsv2]</code></li> <li>Format mode for result display. Default is table.</li> </ul> </li> <li><code>--silent=[true/false]</code><ul> <li>Reduce the amount of informational messages displayed (true) or not (false).</li> <li><code>grep -v '^$' &lt;csv_file&gt;</code> \u5220\u6389\u7a7a\u884c</li> </ul> </li> </ul> </li> <li> <p>\u65f6\u533a\u95ee\u9898</p> <ul> <li>Hive \u7248\u672c 3.1.4 <code>FROM_UNIXTIME()</code> \u548c <code>UNIX_TIMESTAMP()</code> \u90fd\u662f\u6309 UTC \u65f6\u533a\u6765\uff0c\u548c\u4e2d\u56fd\u65f6\u533a\u5dee8\u5c0f\u65f6</li> <li>\u95ee\u9898\u63cf\u8ff0\uff1ahttps://www.baifachuan.com/posts/2f3913c8.html</li> <li>\u6e90\u7801\u5730\u5740\uff1ahttps://archive.apache.org/dist/hadoop/core/hadoop-3.1.4/</li> </ul> </li> <li> <p>Hive Configuration Properties</p> <ul> <li> <p>https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties</p> </li> <li> <p>\u8bbe\u7f6e\u961f\u5217 <code>hive --hivevar queue=&lt;queue_name&gt;</code></p> <pre><code>-- Set queue to variable\nSET tez.queue.name = ${queue};\nSET mapreduce.job.queuename = ${queue};\nSET mapred.job.queue.name = ${queue};\n</code></pre> </li> <li> <p>\u5408\u5e76\u5c0f\u6587\u4ef6</p> <pre><code>-- Merge small files to 128MB, using Tez as execution engine\nSET hive.merge.tezfiles = true;\n-- SET hive.merge.sparkfiles = true;\nSET hive.merge.mapfiles = true;\nSET hive.merge.mapredfiles = true;\nSET hive.merge.size.per.task = 128000000;\nSET hive.merge.smallfiles.avgsize = 128000000;\n</code></pre> </li> <li> <p>Map Reduce config: https://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml</p> </li> <li>Tez config: https://tez.apache.org/releases/0.8.2/tez-api-javadocs/configs/TezConfiguration.html</li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#hadoop","title":"Hadoop","text":"","tags":["Updating"]},{"location":"notes/techniques/BigData/#file-system-fs-cli","title":"File System (FS) CLI","text":"<p>Document: https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/FileSystemShell.html</p> <ol> <li>Human-readable file size: <code>hadoop fs -du -h &lt;path&gt;</code></li> <li>Changes the replication factor of a file: <code>hadoop fs -setrep -w &lt;numReplicas&gt; &lt;path&gt;</code></li> </ol>","tags":["Updating"]},{"location":"notes/techniques/BigData/#yarn-cli","title":"Yarn CLI","text":"<p>Document: https://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YarnCommands.html</p> <ol> <li>Application <code>application</code> or <code>app</code><ul> <li>Get application ID:  <code>yarn app -list -appStates FINISHED | grep 'chenlu'</code></li> <li><code>yarn app -list -appStates FAILED | grep 'chenlu'</code></li> <li>Application ID: <code>application_xxx</code></li> </ul> </li> <li>View application status (start time, finish time)<ul> <li><code>yarn app -status &lt;app_id&gt;</code></li> </ul> </li> <li>List application attempts<ul> <li>View container ID: <code>yarn applicationattempt -list &lt;app_id&gt;</code></li> </ul> </li> <li>Dump container log<ul> <li><code>yarn logs -applicationId &lt;app_id&gt; | less</code></li> <li><code>yarn logs -containerId &lt;container_id&gt; | less</code></li> </ul> </li> <li>Kill an application<ul> <li><code>yarn app -kill &lt;app_id&gt;</code></li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/","title":"Command Lines","text":"","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#linux","title":"Linux","text":"<ol> <li>\u83b7\u53d6\u5f53\u524d<code>bash pid</code>\uff1a<code>ps -p $$</code>\uff0c\u83b7\u53d6<code>fish-shell pid</code>: <code>ps -p $fish_pid</code></li> <li>Commands for Manipulating The History<ul> <li>https://www.gnu.org/software/bash/manual/html_node/Commands-For-History.html</li> <li>reverse-search-history (C-r)</li> </ul> </li> <li>Read from standard input and write to standard output and files<ul> <li><code>echo \"example\" | tee path/to/file</code></li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#zsh","title":"ZSH","text":"<p>Environment: No Internet, no <code>sudo</code> root privilege.</p> <p>Install ZSH under user directory. Download ZSH source code: https://sourceforge.net/projects/zsh/</p> <ol> <li> <p>Extract</p> <pre><code>xz -d zsh-5.9.tar.xz\ntar -xf zsh-5.9.tar\ncd zsh-5.9\n</code></pre> </li> <li> <p>Compile ZSH</p> <pre><code>./configure --prefix=/home/chenlu/.local/lib/zsh-5.9\nmake\nmake install\n</code></pre> </li> <li> <p>Create soft link</p> <pre><code>ln -s ~/.local/lib/zsh-5.9/bin/zsh ~/.local/bin/zsh\n</code></pre> </li> </ol> <p>Install oh-my-zsh. Download oh-my-zsh source code: https://github.com/ohmyzsh/ohmyzsh</p> <p>You can create a new zsh config file by copying the template that we have included for you.</p> <pre><code>cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n</code></pre> <p>Install powerlevel10k. https://github.com/romkatv/powerlevel10k#how-do-i-install-powerlevel10k-on-a-machine-without-internet-access</p> <ol> <li> <p>Run this command on the machine without Internet access:</p> <pre><code>uname -sm | tr '[A-Z]' '[a-z]'\n</code></pre> </li> <li> <p>Run these commands on a machine connected to the Internet after replacing the value of <code>target_uname</code> with the output of the previous command:</p> <pre><code>target_uname=\"replace this with the output of the previous command\"\ngit clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k\nGITSTATUS_CACHE_DIR=\"$HOME\"/powerlevel10k/gitstatus/usrbin ~/powerlevel10k/gitstatus/install -f -s \"${target_uname% *}\" -m \"${target_uname#* }\"\n</code></pre> </li> <li> <p>Copy <code>~/powerlevel10k</code> from the machine connected to the Internet to the one without Internet access.</p> </li> <li> <p>Add <code>source ~/powerlevel10k/powerlevel10k.zsh-theme</code> to <code>~/.zshrc</code> on the machine without Internet access:</p> <pre><code>echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt;~/.zshrc\n</code></pre> </li> <li> <p>If <code>~/.zshrc</code> on the machine without Internet access sets <code>ZSH_THEME</code>, remove that line.</p> <pre><code>sed -i.bak '/^ZSH_THEME=/d' ~/.zshrc\n</code></pre> </li> </ol> <p>To update, remove <code>~/powerlevel10k</code> on both machines and repeat steps 1-3.</p> <pre><code>mv ~/powerlevel10k ~/.oh-my-zsh/custom/themes/\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#gdb","title":"GDB","text":"<p>GNU is a recursive acronym for \"GNU's Not Unix!\".</p> <p><code>gcc</code>: GNU project C and C++ compiler</p> <p><code>gdb</code>: The GNU Debugger</p> <p>\u4f7f\u7528<code>gdb</code>\u4e4b\u524d\uff0c\u901a\u5e38\u4f7f\u7528<code>gcc -g test.c</code>\u7f16\u8bd1\u6587\u4ef6\uff0c<code>man gcc</code></p> <pre><code>-g  Produce debugging information in the operating system's native format (stabs, COFF, XCOFF, or DWARF).  GDB can work with this\n           debugging information.\n\n           On most systems that use stabs format, -g enables use of extra debugging information that only GDB can use; this extra information\n           makes debugging work better in GDB but probably makes other debuggers crash or refuse to read the program.  If you want to control\n           for certain whether to generate the extra information, use -gstabs+, -gstabs, -gxcoff+, -gxcoff, or -gvms (see below).\n</code></pre> <p><code>gdb</code>\u4e2d\u56de\u8f66\u4f1a\u9ed8\u8ba4\u6267\u884c\u4e0a\u4e00\u6b21\u547d\u4ee4</p> <ol> <li> <p><code>help</code></p> <pre><code>Type \"help\" followed by a class name for a list of commands in that class.\nType \"help all\" for the list of all commands.\nType \"help\" followed by command name for full documentation.\n</code></pre> </li> <li> <p><code>file</code>: Use FILE as program to be debugged. It is read for its symbols, for getting the contents of pure memory.</p> </li> <li> <p><code>list</code> or <code>l</code>: List specified function or line. With no argument, lists ten more lines after or around previous listing.</p> </li> <li> <p><code>run</code> or <code>r</code>: Start debugged program. You may specify arguments to give it.</p> </li> <li> <p><code>start</code>: Start the debugged program stopping at the beginning of the main procedure.</p> </li> <li> <p><code>next</code> or <code>n</code>: Step over. Step program, proceeding through subroutine calls.</p> </li> <li> <p><code>step</code> or <code>s</code>: Step into. Step program until it reaches a different source line.</p> </li> <li> <p><code>finish</code>: Step out. Execute until selected stack frame returns.</p> </li> <li> <p><code>print</code> or <code>p</code>: Print value of expression EXP.</p> </li> <li> <p><code>break</code> or <code>b</code>: Set breakpoint at specified location.</p> </li> <li> <p><code>info</code> or <code>i</code>: Generic command for showing things about the program being debugged.</p> </li> <li> <p><code>info break</code> or <code>i b</code>: Status of specified breakpoints.</p> </li> <li> <p><code>delete</code> or <code>d</code>: Delete all or some breakpoints.</p> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#git","title":"Git","text":"<p>\u5b98\u65b9\u6587\u6863\uff0c\u83dc\u9e1f\u6559\u7a0b</p> <ul> <li>working directory \u5de5\u4f5c\u533a</li> <li>staging area \u6682\u5b58\u533a</li> <li>repository \u7248\u672c\u5e93</li> </ul> <p></p>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#_1","title":"\u521b\u5efa\u4ed3\u5e93","text":"<ol> <li><code>git init</code> \u5f53\u524d\u76ee\u5f55</li> <li><code>git init dir</code> \u6307\u5b9a\u76ee\u5f55</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#_2","title":"\u514b\u9686\u4ed3\u5e93","text":"<ol> <li><code>git clone url</code> \u9ed8\u8ba4\u76ee\u5f55\u540d\u4e3a\u4ed3\u5e93\u540d</li> <li><code>git clone url dir</code> \u514b\u9686\u5230\u6307\u5b9a\u76ee\u5f55</li> <li><code>git clone -b branchname url</code> \u514b\u9686\u6307\u5b9a\u5206\u652f\uff0c\u6ca1\u6709<code>-b</code>\u9ed8\u8ba4\u514b\u9686 master \u5206\u652f</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#_3","title":"\u8bbe\u7f6e\u63d0\u4ea4\u4ee3\u7801\u65f6\u7684\u7528\u6237\u4fe1\u606f","text":"<ol> <li><code>git config --global user.name \"username\"</code> \u7528\u6237\u540d</li> <li><code>git config --global user.email email@xxx.com</code> \u90ae\u7bb1</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#_4","title":"\u5206\u652f\u7ba1\u7406","text":"<ol> <li><code>git branch</code> \u5217\u51fa\u5206\u652f</li> <li><code>git branch branchname</code> \u521b\u5efa\u5206\u652f</li> <li><code>git branch -d branchname</code> \u5220\u9664\u5206\u652f</li> <li><code>git checkout branchname</code> \u5207\u6362\u6307\u5b9a\u5206\u652f</li> <li><code>git checkout -b branchname</code> \u521b\u65b0\u5206\u652f\u5e76\u7acb\u5373\u5207\u6362</li> <li><code>git merge branchname</code> \u5408\u5e76\u5206\u652f\u5230\u5f53\u524d\u5206\u652f</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#_5","title":"\u63d0\u4ea4\u4e0e\u4fee\u6539","text":"<ol> <li><code>git status</code> \u67e5\u770b\u5f53\u524d\u7684\u72b6\u6001\uff0c\u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6</li> <li><code>git status -s</code> \u7b80\u77ed\u8f93\u51fa</li> <li><code>git diff</code> \u6bd4\u8f83\u6587\u4ef6\u7684\u4e0d\u540c\uff0c\u5373\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02</li> <li><code>git diff filename</code> \u6307\u5b9a\u6587\u4ef6</li> <li><code>git log</code> \u67e5\u770b\u63d0\u4ea4\u5386\u53f2</li> <li><code>git log --online</code> \u7b80\u77ed\u8f93\u51fa</li> <li><code>git blame filename</code> \u4ee5\u5217\u8868\u5f62\u5f0f\u67e5\u770b\u6307\u5b9a\u6587\u4ef6\u7684\u5386\u53f2\u4fee\u6539\u8bb0\u5f55</li> <li><code>git add .</code> \u6dfb\u52a0\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a</li> <li><code>git commit -m \"message\"</code> \u5c06\u6682\u5b58\u533a\u5185\u5bb9\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\u4e2d</li> <li><code>git commit -am \"message\"</code> \u9996\u5148 add \u6240\u6709\u4fee\u6539\u7684\u6587\u4ef6\uff0c\u518d\u63d0\u4ea4\uff0c\u65b0\u521b\u5efa\u7684\u6587\u4ef6\u4e0d\u4f1a\u88ab\u6dfb\u52a0</li> <li><code>git reset --mixed commitID</code> \u9ed8\u8ba4\u56de\u9000\u6a21\u5f0f\uff0c\u53ef\u4ee5\u4e0d\u586b<code>--mixed</code>\uff0c\u56de\u9000\u7248\u672c\u5e93\uff0c\u56de\u9000\u6682\u5b58\u533a\uff0c\u4fdd\u7559\u5de5\u4f5c\u533a</li> <li><code>git reset --soft commitID</code> \u53ea\u56de\u9000\u7248\u672c\u5e93\uff0ccommit \u7684\u4fe1\u606f</li> <li><code>git reset --soft commitID</code> \u56de\u9000\u6240\u6709\u4fe1\u606f\uff0c\u5de5\u4f5c\u533a\u6e90\u7801\u4e5f\u4f1a\u56de\u9000</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#_6","title":"\u8fdc\u7a0b\u4ed3\u5e93","text":"<ol> <li><code>git remote</code> \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git remote -v</code> verbose \u663e\u793a\u66f4\u591a\u4fe1\u606f</li> <li><code>git remote show remotename</code> \u663e\u793a\u6307\u5b9a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f</li> <li><code>git remote add remotename url</code> \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git push remotename</code> \u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#ffmpeg","title":"FFmpeg","text":"<p>\u5b98\u65b9\u6587\u6863</p> <ol> <li>\u67e5\u770b mkv \u5c01\u88c5\u4fe1\u606f, <code>ffmpeg -i input.mkv</code></li> <li>mkv \u53ea\u5206\u79bb\u89c6\u9891\u4e3a mp4, <code>ffmpeg -i input.mkv -vcodec copy -an output.mp4</code></li> <li>mkv \u53ea\u5206\u79bb\u97f3\u9891\u4e3a flac, <code>ffmpeg -i input.mkv -acodec copy -vn output.flac</code></li> <li>flv \u5206\u79bb\u4e3a mp4, <code>ffmpeg -i input.flv -c copy output.mp4</code></li> <li>\u63d0\u53d6 mp4 \u7684\u97f3\u9891\u4e3a mp3, <code>ffmpeg -i audio.mp4 -vn audio.wav/mp3</code></li> <li>\u5408\u5e76\u97f3\u9891\u548c\u89c6\u9891\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528 aac \u91cd\u65b0\u7f16\u7801\u97f3\u9891\u6587\u4ef6, <code>ffmpeg -i video.mp4 -i audio.wav/mp3 -c:v copy -c:a aac output.mp4</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#fish-shell","title":"Fish Shell","text":"<ol> <li> <p>Config file path <code>~/.config/fish/config.fish</code></p> </li> <li> <p>Oh my posh <code>oh-my-posh init fish --config ~/Documents/ohmyposh.json | source</code></p> </li> <li> <p>Vi mode</p> <pre><code>set fish_cursor_default block\nset fish_cursor_insert underscore\n# set fish_cursor_replace_one underscore\n# set fish_cursor_visual block\n</code></pre> </li> <li> <p>iTerm2 shell integration <code>source ~/.iterm2_shell_integration.fish</code></p> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#homebrew","title":"Homebrew","text":"<p>\u6362\u963f\u91cc\u4e91\u6e90\uff1ahttps://developer.aliyun.com/mirror/homebrew\uff0c\u4ece\u963f\u91cc\u4e91\u4e0b\u8f7d\u5b89\u88c5\u811a\u672c\u5e76\u5b89\u88c5 Homebrew </p> <pre><code>git clone https://mirrors.aliyun.com/homebrew/install.git brew-install\n/bin/bash brew-install/install.sh\nrm -rf brew-install\n</code></pre> <ul> <li> <p>bash</p> <pre><code>echo 'export HOMEBREW_API_DOMAIN=\"https://mirrors.aliyun.com/homebrew-bottles/api\"' &gt;&gt; ~/.bash_profile\necho 'export HOMEBREW_BREW_GIT_REMOTE=\"https://mirrors.aliyun.com/homebrew/brew.git\"' &gt;&gt; ~/.bash_profile\necho 'export HOMEBREW_CORE_GIT_REMOTE=\"https://mirrors.aliyun.com/homebrew/homebrew-core.git\"' &gt;&gt; ~/.bash_profile\necho 'export HOMEBREW_BOTTLE_DOMAIN=\"https://mirrors.aliyun.com/homebrew/homebrew-bottles\"' &gt;&gt; ~/.bash_profile\nsource ~/.bash_profile\nbrew update\n</code></pre> </li> <li> <p>zsh</p> <pre><code>echo 'export HOMEBREW_API_DOMAIN=\"https://mirrors.aliyun.com/homebrew-bottles/api\"' &gt;&gt; ~/.zshrc\necho 'export HOMEBREW_BREW_GIT_REMOTE=\"https://mirrors.aliyun.com/homebrew/brew.git\"' &gt;&gt; ~/.zshrc\necho 'export HOMEBREW_CORE_GIT_REMOTE=\"https://mirrors.aliyun.com/homebrew/homebrew-core.git\"' &gt;&gt; ~/.zshrc\necho 'export HOMEBREW_BOTTLE_DOMAIN=\"https://mirrors.aliyun.com/homebrew/homebrew-bottles\"' &gt;&gt; ~/.zshrc\nsource ~/.zshrc\nbrew update\n</code></pre> </li> <li> <p>Search openjdk <code>brew search openjdk</code></p> </li> <li>Install openjdk <code>brew install openjdk</code></li> <li>List services <code>brew services list</code></li> <li>Start/Stop mysql service <code>brew services start/stop mysql</code></li> </ul>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#docker","title":"Docker","text":"<ol> <li> <p>Create and run a container with name \"ubuntu\", hostname \"ubuntu\", volume source \"$PWD/CSAPP\", destination \"/CSAPP\", using image ubuntu</p> <p><code>docker run -it --name ubuntu --hostname ubuntu --platform linux/amd64 --volume \"$PWD/CSAPP:/CSAPP\" ubuntu /bin/bash</code></p> </li> <li> <p>See docker process <code>docker ps -a</code></p> </li> <li> <p>Container</p> <ul> <li>list: <code>docker container ls</code></li> <li>remove: <code>docker container rm 2a56b6fa205b</code></li> <li>start: <code>docker start -ia ubuntu</code></li> <li>stop: <code>docker stop ubuntu</code></li> </ul> </li> <li> <p>Image</p> <ul> <li>list: <code>docker image ls</code></li> <li>pull: <code>docker pull ubuntu:latest</code></li> <li>save: <code>docker save -o oracle-ee.tar repo:tag</code></li> <li>load: <code>docker load -i oracle-ee.tar</code></li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Command-Lines/#tmux","title":"Tmux","text":"<p>Document: https://github.com/tmux/tmux/wiki/Getting-Started#getting-started</p> <p><code>.tmux.conf</code></p> <ol> <li>The prefix key<ul> <li><code>C-b</code>, Control + B</li> <li><code>C-</code> for the control key</li> <li><code>M-</code> for the meta key (normally <code>Alt</code> on modern computers)</li> <li><code>S-</code> for the shift key</li> </ul> </li> <li>Help keys <code>C-b ?</code></li> <li>Window operations<ul> <li>Create <code>C-b c</code></li> <li>Split horizontally <code>C-b s</code></li> <li>Split vertically <code>C-b v</code></li> </ul> </li> <li>Select pane<ul> <li>Up <code>C-b k</code></li> <li>Down <code>C-b j</code></li> <li>Left <code>C-b h</code></li> <li>Right <code>C-b l</code></li> </ul> </li> <li>Copy mode and using vi movement <code>C-b [</code></li> <li>Display pane numbers <code>C-b q</code></li> <li>Kill the active pane <code>C-b x</code></li> <li>Resize pane by 5<ul> <li>Up <code>C-b M-Up</code></li> <li>Down <code>C-b M-Down</code></li> <li>Left <code>C-b M-Left</code></li> <li>Right <code>C-b M-Right</code></li> </ul> </li> <li> <p>Run shell commands</p> <ul> <li><code>run</code> or <code>run-shell</code></li> <li>e.g. <code>run pwd</code></li> </ul> </li> <li> <p>Formats</p> <ul> <li>Document: https://github.com/tmux/tmux/wiki/Formats</li> <li>Display a format <code>tmux display -p #{}</code></li> <li>e.g. <code>tmux display -p '#{pid}'</code></li> <li>e.g. <code>tmux display -p '#{status-right}'</code></li> </ul> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/","title":"Softwares","text":"","tags":["Updating"]},{"location":"notes/utilities/Softwares/#vscode","title":"VSCode","text":"<ol> <li>Open / Close bottom terminal panel: <code>Control + `</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#typora","title":"Typora","text":"<ol> <li>Convert a link to markdown format <code>Command + K</code> or <code>&lt;link&gt;</code></li> <li>Insert a link to image format <code>Control + Command + I</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#macos","title":"MacOS","text":"<ol> <li>Switch between desktops <code>Control + Left/Right Arrow</code></li> <li>Paste as plain text <code>Shift + Option + Command + V</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#iterm2","title":"iTerm2","text":"<ol> <li>Swtich between split window <code>Option + Command + Arrow</code></li> <li>Open profiles <code>Command + O</code></li> <li>Password Manager <code>Option + Command + F</code> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#adobe","title":"Adobe","text":"","tags":["Updating"]},{"location":"notes/utilities/Softwares/#premiere-pro","title":"Premiere Pro","text":"<p>\u5b98\u65b9\u6587\u6863: Keyboard shortcuts in Premiere Pro</p>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#_1","title":"\u7f16\u8f91\u5feb\u6377\u952e","text":"<ol> <li><code>Ctrl + Z</code>: Undo</li> <li><code>Ctrl + Shift + Z</code>: Redo</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#_2","title":"\u526a\u8f91\u5feb\u6377\u952e","text":"<ol> <li><code>C</code>: Razor Tool</li> <li><code>V</code>: Selectetion Tool</li> <li><code>M</code>: Add Marker</li> <li><code>I</code>: Mark In</li> <li><code>O</code>: Mark Out</li> <li><code>Shift + I</code>: Go to In</li> <li><code>Shift + O</code>: Go to Out</li> <li><code>Ctrl + K</code>: Add Edit \u4ece\u5f53\u524d\u4f4d\u7f6e\u526a\u5f00</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#photoshop","title":"Photoshop","text":"","tags":["Updating"]},{"location":"notes/utilities/Softwares/#chrome","title":"Chrome","text":"<p>\u5b98\u65b9\u7f51\u7ad9</p> <ol> <li><code>C-</code> \u4ee3\u8868 <code>Ctrl+</code></li> <li><code>S-</code>\u4ee3\u8868<code>Shift+</code></li> <li><code>A-</code>\u4ee3\u8868<code>Alt+</code></li> <li><code>C-S-</code>\u4ee3\u8868<code>Ctrl+Shift</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#tab-and-window","title":"Tab and window","text":"<ol> <li>Open a new window \u6253\u5f00\u65b0\u7a97\u53e3 <code>C-n</code></li> <li>Open a new window in Incognito mode \u6253\u5f00\u533f\u540d\u7a97\u53e3 <code>C-S-n</code></li> <li>Open a new tab, and jump to it \u6253\u5f00\u65b0 Tab <code>C-t</code></li> <li>Reopen previously closed tabs in the order they were closed \u6253\u5f00\u4e4b\u524d\u5173\u95ed\u7684\u4e00\u4e2a Tab <code>C-S-t</code></li> <li>Jump to the next open tab \u8df3\u8f6c\u4e0b\u4e00\u4e2a Tab <code>C-Tab</code> or <code>C-PgDn</code></li> <li>Jump to the previous open tab \u8df3\u8f6c\u4e0a\u4e00\u4e2a Tab <code>C-S-Tab</code> or <code>C-PgUp</code></li> <li>Jump to a specific tab \u8df3\u8f6c\u6307\u5b9a Tab <code>C-1 to 8</code></li> <li>Jump to the rightmost tab \u8df3\u8f6c\u6700\u53f3 Tab <code>C-9</code></li> <li>Open your home page in the current tab \u6253\u5f00\u4e3b\u9875 <code>A-Home</code></li> <li>Open the previous page from your browsing history in the current tab \u4e0a\u4e00\u9875 <code>A-Left Arrow</code></li> <li>Open the next page from your browsing history in the current tab \u4e0b\u4e00\u9875 <code>A-Right Arrow</code></li> <li>Close the current tab \u5173\u95ed\u5f53\u524d Tab<code>C-w</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#chrome-feature","title":"Chrome feature","text":"<ol> <li>Open the History page in a new tab \u5386\u53f2\u8bb0\u5f55 <code>C-h</code></li> <li>Open the Downloads page in a new tab \u4e0b\u8f7d <code>C-j</code></li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Softwares/#address-bar","title":"Address bar","text":"<ol> <li> <p>Search using a different search engine : Type a search engine name and press <code>Tab</code></p> <p>\u4f7f\u7528\u4e0d\u540c\u641c\u7d22\u5f15\u64ce\u641c\u7d22\uff0c\u8f93\u5165\u641c\u7d22\u5f15\u64ce\u7f51\u5740\uff0c\u6bd4\u5982<code>bing.com</code>\uff0c\u6309<code>Tab</code>\u518d\u8f93\u5165\u641c\u7d22\u5185\u5bb9</p> </li> <li> <p>Open a new tab and perform a Google search: Type a search term + Alt + Enter</p> <p>\u641c\u7d22\u5185\u5bb9\u5230\u65b0\u7684 Tab \u4e2d\uff0c\u8f93\u5165\u641c\u7d22\u5185\u5bb9\uff0c\u6309<code>A-Enter</code></p> </li> <li> <p>Jump to the address bar \u8df3\u5230\u5730\u5740\u680f <code>C-l</code> or <code>A-d</code> or <code>F6</code></p> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Vim/","title":"Vim","text":"<ol> <li>Link's vimrc</li> <li>missing-semester</li> <li>missing-semester \u4e2d\u6587</li> <li>VimAwesome</li> <li>Vim Tips Wiki</li> <li>Vim Cheat Sheet</li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Vim/#vimtutor","title":"vimtutor \u603b\u7ed3","text":"","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-1","title":"Lesson 1","text":"<pre><code>  1. The cursor is moved using either the arrow keys or the hjkl keys.\n         h (left)       j (down)       k (up)       l (right)\n\n  2. To start Vim from the shell prompt type:  vim FILENAME &lt;ENTER&gt;\n\n  3. To exit Vim type:     &lt;ESC&gt;   :q!   &lt;ENTER&gt;  to trash all changes.\n             OR type:      &lt;ESC&gt;   :wq   &lt;ENTER&gt;  to save the changes.\n\n  4. To delete the character at the cursor type:  x\n\n  5. To insert or append text type:\n         i   type inserted text   &lt;ESC&gt;         insert before the cursor\n         A   type appended text   &lt;ESC&gt;         append after the line\n\nNOTE: Pressing &lt;ESC&gt; will place you in Normal mode or will cancel\n      an unwanted and partially completed command.\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-2","title":"Lesson 2","text":"<pre><code>  1. To delete from the cursor up to the next word type:    dw\n  2. To delete from the cursor to the end of a line type:    d$\n  3. To delete a whole line type:    dd\n\n  4. To repeat a motion prepend it with a number:   2w\n  5. The format for a change command is:\n               operator   [number]   motion\n     where:\n       operator - is what to do, such as  d  for delete\n       [number] - is an optional count to repeat the motion\n       motion   - moves over the text to operate on, such as  w (word),\n                  $ (to the end of line), etc.\n\n  6. To move to the start of the line use a zero:  0\n\n  7. To undo previous actions, type:           u  (lowercase u)\n     To undo all the changes on a line, type:  U  (capital U)\n     To undo the undo's, type:                 CTRL-R\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-3","title":"Lesson 3","text":"<pre><code>  1. To put back text that has just been deleted, type   p .  This puts the\n     deleted text AFTER the cursor (if a line was deleted it will go on the\n     line below the cursor).\n\n  2. To replace the character under the cursor, type   r   and then the\n     character you want to have there.\n\n  3. The change operator allows you to change from the cursor to where the\n     motion takes you.  eg. Type  ce  to change from the cursor to the end of\n     the word,  c$  to change to the end of a line.\n\n  4. The format for change is:\n\n         c   [number]   motion\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-4","title":"Lesson 4","text":"<pre><code>  1. CTRL-G  displays your location in the file and the file status.\n             G  moves to the end of the file.\n     number  G  moves to that line number.\n            gg  moves to the first line.\n\n  2. Typing  /  followed by a phrase searches FORWARD for the phrase.\n     Typing  ?  followed by a phrase searches BACKWARD for the phrase.\n     After a search type  n  to find the next occurrence in the same direction\n     or  N  to search in the opposite direction.\n     CTRL-O takes you back to older positions, CTRL-I to newer positions.\n\n  3. Typing  %  while the cursor is on a (,),[,],{, or } goes to its match.\n\n  4. To substitute new for the first old in a line type    :s/old/new\n     To substitute new for all 'old's on a line type       :s/old/new/g\n     To substitute phrases between two line #'s type       :#,#s/old/new/g\n     To substitute all occurrences in the file type        :%s/old/new/g\n     To ask for confirmation each time add 'c'             :%s/old/new/gc\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-5","title":"Lesson 5","text":"<pre><code>  1.  :!command  executes an external command.\n\n      Some useful examples are:\n         (Windows)        (Unix)\n          :!dir            :!ls            -  shows a directory listing.\n          :!del FILENAME   :!rm FILENAME   -  removes file FILENAME.\n\n  2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.\n\n  3.  v  motion  :w FILENAME  saves the Visually selected lines in file\n      FILENAME.\n\n  4.  :r FILENAME  retrieves disk file FILENAME and puts it below the\n      cursor position.\n\n  5.  :r !dir  reads the output of the dir command and puts it below the\n      cursor position.\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-6","title":"Lesson 6","text":"<pre><code>  1. Type  o  to open a line BELOW the cursor and start Insert mode.\n     Type  O  to open a line ABOVE the cursor.\n\n  2. Type  a  to insert text AFTER the cursor.\n     Type  A  to insert text after the end of the line.\n\n  3. The  e  command moves to the end of a word.\n\n  4. The  y  operator yanks (copies) text,  p  puts (pastes) it.\n\n  5. Typing a capital  R  enters Replace mode until  &lt;ESC&gt;  is pressed.\n\n  6. Typing \":set xxx\" sets the option \"xxx\".  Some options are:\n        'ic' 'ignorecase'       ignore upper/lower case when searching\n        'is' 'incsearch'        show partial matches for a search phrase\n        'hls' 'hlsearch'        highlight all matching phrases\n     You can either use the long or the short option name.\n\n  7. Prepend \"no\" to switch an option off:   :set noic\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#lesson-7","title":"Lesson 7","text":"<pre><code>  1. Type  :help  or press &lt;F1&gt; or &lt;HELP&gt;  to open a help window.\n\n  2. Type  :help cmd  to find help on  cmd .\n\n  3. Type  CTRL-W CTRL-W  to jump to another window.\n\n  4. Type  :q  to close the help window.\n\n  5. Create a vimrc startup script to keep your preferred settings.\n\n  6. When typing a  :  command, press CTRL-D to see possible completions.\n     Press &lt;TAB&gt; to use one completion.\n</code></pre>","tags":["Updating"]},{"location":"notes/utilities/Vim/#modal","title":"\u6a21\u5f0f Modal","text":"<ul> <li>Normal \u6b63\u5e38\u6a21\u5f0f\uff1a\u5728\u6587\u4ef6\u4e2d\u56db\u5904\u79fb\u52a8\u5149\u6807\u8fdb\u884c\u4fee\u6539</li> <li>Insert \u63d2\u5165\u6a21\u5f0f\uff1a\u63d2\u5165\u6587\u672c</li> <li>Replace \u66ff\u6362\u6a21\u5f0f\uff1a\u66ff\u6362\u6587\u672c</li> <li>Visual \u53ef\u89c6\u5316\uff08\u4e00\u822c\uff0c\u884c\uff0c\u5757\uff09\u6a21\u5f0f\uff1a\u9009\u4e2d\u6587\u672c\u5757</li> <li>Command-line \u547d\u4ee4\u6a21\u5f0f\uff1a\u7528\u4e8e\u6267\u884c\u547d\u4ee4</li> </ul> <p>\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u6a21\u5f0f\u4e0b\uff0c\u952e\u76d8\u6572\u51fb\u7684\u542b\u4e49\u4e5f\u4e0d\u540c\u3002</p>","tags":["Updating"]},{"location":"notes/utilities/Vim/#command-line","title":"\u547d\u4ee4\u884c Command-line","text":"<ul> <li><code>:q</code> \u9000\u51fa\uff08\u5173\u95ed\u7a97\u53e3\uff09</li> <li><code>:w</code> \u4fdd\u5b58\uff08\u5199\uff09</li> <li><code>:wq</code> \u4fdd\u5b58\u7136\u540e\u9000\u51fa</li> <li><code>:e {\u6587\u4ef6\u540d}</code> \u6253\u5f00\u8981\u7f16\u8f91\u7684\u6587\u4ef6</li> <li><code>:ls</code> \u663e\u793a\u6253\u5f00\u7684\u7f13\u5b58</li> <li><code>:help {\u6807\u9898}</code> \u6253\u5f00\u5e2e\u52a9\u6587\u6863<ul> <li><code>:help :w</code> \u6253\u5f00 <code>:w</code> \u547d\u4ee4\u7684\u5e2e\u52a9\u6587\u6863</li> <li><code>:help w</code> \u6253\u5f00 <code>w</code> \u79fb\u52a8\u7684\u5e2e\u52a9\u6587\u6863</li> </ul> </li> </ul>","tags":["Updating"]},{"location":"notes/utilities/Vim/#movementnouns","title":"\u79fb\u52a8/\u540d\u8bcd Movement/Nouns","text":"<ul> <li>\u57fa\u672c\u79fb\u52a8\uff1a <code>hjkl</code> \uff08\u5de6\uff0c \u4e0b\uff0c \u4e0a\uff0c \u53f3\uff09</li> <li>\u8bcd\uff1a <code>w</code> \uff08\u4e0b\u4e00\u4e2a\u8bcd\uff09\uff0c <code>b</code> \uff08\u8bcd\u521d\uff09\uff0c <code>e</code> \uff08\u8bcd\u5c3e\uff09</li> <li>\u884c\uff1a <code>0</code> \uff08\u884c\u521d\uff09\uff0c <code>^</code> \uff08\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff09\uff0c <code>$</code> \uff08\u884c\u5c3e\uff09</li> <li>\u5c4f\u5e55\uff1a <code>H</code> \uff08\u5c4f\u5e55\u9996\u884c\uff09\uff0c <code>M</code> \uff08\u5c4f\u5e55\u4e2d\u95f4\uff09\uff0c <code>L</code> \uff08\u5c4f\u5e55\u5e95\u90e8\uff09</li> <li>\u7ffb\u9875\uff1a <code>Ctrl-u</code> \uff08\u4e0a\u7ffb\uff09\uff0c <code>Ctrl-d</code> \uff08\u4e0b\u7ffb\uff09</li> <li>\u6587\u4ef6\uff1a <code>gg</code> \uff08\u6587\u4ef6\u5934\uff09\uff0c <code>G</code> \uff08\u6587\u4ef6\u5c3e\uff09</li> <li>\u884c\u6570\uff1a <code>:{\u884c\u6570}&lt;CR&gt;</code> \u6216\u8005 <code>{\u884c\u6570}G</code><ul> <li><code>&lt;CR&gt; \\r 0x0D</code>: Carriage Return \u56de\u8f66</li> <li><code>&lt;LF&gt; \\n 0x0A</code>: Line Feed \u6362\u884c</li> </ul> </li> <li>\u5339\u914d\uff1a <code>%</code> \uff08\u627e\u5230\u914d\u5bf9\uff0c\u6bd4\u5982<code>([{}])</code>\uff0c<code>/* */</code> \u4e4b\u7c7b\u7684\u6ce8\u91ca\u5bf9\uff0c<code>#if, #ifdef, #else, #elif, #endif</code>\uff09</li> <li>\u67e5\u627e\uff1a<ul> <li><code>f{\u5b57\u7b26}</code>\uff0c<code>t{\u5b57\u7b26}</code>\uff0c<code>F{\u5b57\u7b26}</code>\uff0c<code>T{\u5b57\u7b26}</code></li> <li>\u67e5\u627e\u5728\u672c\u884c\u7684{\u5b57\u7b26}\uff0c\u5149\u6807\u505c\u5728\u8be5\u5b57\u7b26\uff0c\u5149\u6807\u5728\u8be5\u5b57\u7b26\u4e4b\u524d\uff0c\u5411\u524d\u67e5\u627e\uff0c\u5411\u540e\u67e5\u627e</li> <li><code>;</code> \u6b63\u5411\uff0c<code>,</code>\u53cd\u5411</li> </ul> </li> <li>\u641c\u7d22\uff1a<code>/{\u6b63\u5219\u8868\u8fbe\u5f0f}</code>\uff0c<code>n</code>\u6b63\u5411\uff0c<code>N</code>\u53cd\u5411</li> </ul>","tags":["Updating"]},{"location":"notes/utilities/Vim/#selection","title":"\u9009\u62e9 Selection","text":"<p>\u53ef\u89c6\u5316\u6a21\u5f0f:</p> <ul> <li>\u53ef\u89c6\u5316\uff1a<code>v</code></li> <li>\u53ef\u89c6\u5316\u884c\uff1a <code>V</code></li> <li>\u53ef\u89c6\u5316\u5757\uff1a<code>Ctrl+v</code></li> </ul> <p>\u53ef\u4ee5\u7528\u79fb\u52a8\u547d\u4ee4\u6765\u9009\u4e2d\u3002</p>","tags":["Updating"]},{"location":"notes/utilities/Vim/#editsverbs","title":"\u7f16\u8f91/\u52a8\u8bcd Edits/Verbs","text":"<ul> <li><code>i</code> \u8fdb\u5165\u63d2\u5165\u6a21\u5f0f</li> <li><code>O</code> / <code>o</code> \u5728\u4e4b\u4e0a/\u4e4b\u4e0b\u63d2\u5165\u884c</li> <li><code>d{\u79fb\u52a8\u547d\u4ee4}</code> \u5220\u9664 {\u79fb\u52a8\u547d\u4ee4}<ul> <li>\u4f8b\u5982\uff0c <code>dw</code> \u5220\u9664\u8bcd, <code>d$</code> \u5220\u9664\u5230\u884c\u5c3e, <code>d0</code> \u5220\u9664\u5230\u884c\u5934\u3002</li> </ul> </li> <li><code>c{\u79fb\u52a8\u547d\u4ee4}</code>\u6539\u53d8 {\u79fb\u52a8\u547d\u4ee4}<ul> <li>\u4f8b\u5982\uff0c <code>cw</code> \u6539\u53d8\u8bcd</li> <li>\u7c7b\u4f3c\u4e8e<code>d{\u79fb\u52a8\u547d\u4ee4}</code> \u518d <code>i</code></li> </ul> </li> <li><code>x</code> \u5220\u9664\u5b57\u7b26\uff08\u7b49\u540c\u4e8e <code>dl</code>\uff09</li> <li><code>s</code> \u66ff\u6362\u5b57\u7b26\uff08\u7b49\u540c\u4e8e <code>xi</code>\uff09</li> <li>\u53ef\u89c6\u5316\u6a21\u5f0f + \u64cd\u4f5c<ul> <li>\u9009\u4e2d\u6587\u5b57, <code>d</code> \u5220\u9664 \u6216\u8005 <code>c</code> \u6539\u53d8</li> </ul> </li> <li><code>u</code> \u64a4\u9500, <code>&lt;C-r&gt;</code> \u91cd\u505a</li> <li><code>y</code> \u590d\u5236 / \u201cyank\u201d \uff08\u5176\u4ed6\u4e00\u4e9b\u547d\u4ee4\u6bd4\u5982 <code>d</code> \u4e5f\u4f1a\u590d\u5236\uff09</li> <li><code>p</code> \u7c98\u8d34</li> <li><code>~</code> \u6539\u53d8\u5b57\u7b26\u7684\u5927\u5c0f\u5199</li> </ul>","tags":["Updating"]},{"location":"notes/utilities/Vim/#count","title":"\u8ba1\u6570 Count","text":"<p>\u7528\u4e00\u4e2a\u8ba1\u6570\u6765\u7ed3\u5408\u201c\u540d\u8bcd\u201d\u548c\u201c\u52a8\u8bcd\u201d\uff0c\u8fd9\u4f1a\u6267\u884c\u6307\u5b9a\u64cd\u4f5c\u82e5\u5e72\u6b21\u3002</p> <ul> <li><code>3w</code> \u5411\u524d\u79fb\u52a8\u4e09\u4e2a\u8bcd</li> <li><code>5j</code> \u5411\u4e0b\u79fb\u52a8 5 \u884c</li> <li><code>7dw</code> \u5220\u9664 7 \u4e2a\u8bcd</li> </ul>","tags":["Updating"]},{"location":"notes/utilities/Vim/#modifiers","title":"\u4fee\u9970\u8bed Modifiers","text":"<p>\u53ef\u4ee5\u7528\u4fee\u9970\u8bed\u6539\u53d8\u201c\u540d\u8bcd\u201d\u7684\u610f\u4e49\u3002\u4fee\u9970\u8bed\u6709 <code>i</code>\uff0c\u8868\u793a\u201c\u5185\u90e8\u201d\u6216\u8005\u201c\u5728\u5185\u201d\uff0c\u548c <code>a</code>\uff0c \u8868\u793a\u201c\u5468\u56f4\u201d\u3002</p> <ul> <li><code>ci(</code> \u6539\u53d8\u5f53\u524d\u62ec\u53f7\u5185\u7684\u5185\u5bb9</li> <li><code>ci[</code> \u6539\u53d8\u5f53\u524d\u65b9\u62ec\u53f7\u5185\u7684\u5185\u5bb9</li> <li><code>da'</code> \u5220\u9664\u4e00\u4e2a\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c \u5305\u62ec\u5468\u56f4\u7684\u5355\u5f15\u53f7</li> </ul>","tags":["Updating"]},{"location":"notes/utilities/Vim/#_1","title":"\u5e38\u7528\u65b9\u6cd5","text":"<p>\u6ca1\u6709\u7279\u522b\u8bf4\u660e\u90fd\u662f\u5728 normal modal \u4e0b\uff0c<code>&lt;...&gt;</code>\u8868\u793a keys\uff0c<code>[...]</code>\u8868\u793a optional</p> <ol> <li> <p>\u67e5\u627e\u6574\u4e2a\u5355\u8bcd l a whole word: <code>/\\&lt;word\\&gt;</code>, <code>\\&lt;</code> represents the beginning of a word, and <code>\\&gt;</code> represents the end of a word</p> </li> <li> <p>\u63d2\u5165\u591a\u4e2a\u7a7a\u884c insert multiple new lines: <code>[count]o&lt;Esc&gt;</code>, <code>[count]O&lt;Esc&gt;</code></p> </li> <li> <p>\u5728\u884c\u9996\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u63d2\u5165 insert at the first non-blank character of the line: <code>I</code>, <code>Shift+i</code></p> </li> <li> <p>\u5728\u884c\u5c3e\u63d2\u5165 insert at end of line: <code>A</code>, <code>Shift+a</code></p> </li> <li> <p>\u6ce8\u91ca\u63d2\u4ef6 nerdcommenter, visual and normal modal: \u5757\u6ce8\u91ca<code>[count]&lt;Leader&gt;cs</code>\uff0c\u884c\u6ce8\u91ca<code>[count]&lt;Leader&gt;cc</code>\uff0c\u53d6\u6d88\u6ce8\u91ca<code>[count]&lt;leader&gt;cu</code>\uff0c\u884c\u5c3e\u6ce8\u91ca <code>&lt;Leader&gt;cA</code></p> </li> <li> <p>\u9009\u4e2d\u6240\u6709 select all: <code>ggVG</code></p> </li> <li> <p>\u4fee\u6539\u4e00\u4e2a\u5355\u8bcd change a word: <code>cw</code></p> </li> <li> <p>\u5728\u591a\u884c\u540c\u6837\u7684\u4f4d\u7f6e\u8fdb\u884c\u4fee\u6539 visual-block mode: <code>&lt;C-q&gt;[hjkl]I[...]&lt;Esc&gt;</code></p> </li> <li> <p>\u4fee\u6539\u62ec\u53f7\u5185\u7684\u5185\u5bb9 change in the parentheses:<code>ci(</code>\uff0c\u4fee\u6539\u62ec\u53f7\u4ee5\u53ca\u5185\u5bb9 change around parentheses: <code>ca(</code></p> </li> <li> <p>\u5206\u5c4f split a window: <code>:split</code>/<code>:sp</code>, vertically <code>:vsplit</code>/<code>:vsp</code>\uff0c\u6362\u5c4f change a window<code>&lt;C-w&gt; [whjkl]</code></p> </li> <li> <p>\u6807\u7b7e\u9875 <code>:tabnew [filename]</code>\uff0c\u5207\u6362 next tab <code>gt</code>, previous tab <code>gT</code></p> </li> <li> <p>\u5feb\u901f\u7528<code>()</code>\u5305\u62ec auto-pairs fast wrap: insert mode <code>&lt;C-f&gt;</code>, (|)'hello' after fast wrap at |, the word will be ('hello')</p> </li> <li> <p>\u590d\u5236\u5230\u7cfb\u7edf\u526a\u5207\u677fvim-oscyank copy to system clipborad: visual mode <code>&lt;Leader&gt;c</code></p> </li> <li> <p>\u5f97\u5230\u4e00\u4e2a\u914d\u7f6e\u7684\u503c get a set's value: <code>:set name?</code></p> </li> <li> <p>\u8df3\u8f6c\u4e0b\u4e00\u4e2a\u5149\u6807\u7684\u4f4d\u7f6e go to new cursor position in jump list: <code>&lt;C-i&gt;</code>\uff0c\u8df3\u8f6c\u4e0a\u4e00\u4e2a\u5149\u6807\u7684\u4f4d\u7f6e go to older cursor position in jump list: <code>&lt;C-o&gt;</code></p> </li> <li> <p>Registers</p> <ul> <li><code>:reg[isters]</code>: Display the type and contents of all numbered and named registers.</li> <li><code>\"{register}</code>: Use {register} for next delete, yank or put.</li> </ul> </li> <li> <p>\u67e5\u770b yank \u7684 register <code>:reigsters</code> \uff0c\u7c98\u8d34\u5e76\u8986\u76d6\u4e00\u4e2a\u5355\u8bcd\uff0c\u5728 visual mode \u4e0b <code>vep</code></p> </li> <li> <p>\u6298\u53e0\u4ee3\u7801\uff1a</p> <ul> <li><code>zc</code>: Close one fold under the cursor.</li> <li><code>zC</code>: Close all folds under the cursor recursively.</li> <li><code>zo</code>: Open one fold under the cursor.</li> <li><code>zO</code>: Open all folds under the cursor recursively.</li> <li><code>za</code>: Toggle the fold under the cursor.</li> </ul> </li> <li> <p>\u91cd\u590d\u4e0a\u4e00\u6b21\u64cd\u4f5c\uff1a</p> <ul> <li><code>.</code>: Repeat last change, with count replaced with [count].</li> <li>Simple changes can be repeated with the \".\" command.  Without a count, the     count of the last change is used.</li> </ul> </li> <li> <p>In older Vim 7 \u7c98\u8d34\u65f6\u81ea\u52a8\u8f6c\u4e3apaste mode</p> <pre><code>let &amp;t_SI .= \"\\&lt;Esc&gt;[?2004h\" \nlet &amp;t_EI .= \"\\&lt;Esc&gt;[?2004l\" \ninoremap &lt;special&gt; &lt;expr&gt; &lt;Esc&gt;[200~ XTermPasteBegin() \n\nfunction! XTermPasteBegin()\n  set pastetoggle=&lt;Esc&gt;[201~\n  set paste\n  return \"\"\nendfunction\n</code></pre> </li> <li> <p><code>vim-surround</code></p> </li> </ol>","tags":["Updating"]},{"location":"notes/utilities/Vim/#neovim","title":"neovim","text":"<ol> <li> <p>neovim GitHub</p> </li> <li> <p>NvChad Quickstart</p> </li> </ol>","tags":["Updating"]},{"location":"projects/","title":"Project Index","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2020/","title":"2020","text":""},{"location":"blog/archive/2019/","title":"2019","text":""},{"location":"blog/category/misc/","title":"Misc","text":""},{"location":"blog/category/python/","title":"Python","text":""},{"location":"blog/category/network/","title":"Network","text":""},{"location":"blog/category/linux/","title":"Linux","text":""},{"location":"blog/category/operating-system/","title":"Operating System","text":""},{"location":"blog/category/cc/","title":"C/C++","text":""},{"location":"blog/category/java/","title":"Java","text":""},{"location":"blog/category/data-structure/","title":"Data Structure","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"blog/page/3/","title":"Blog","text":""},{"location":"blog/archive/2020/page/2/","title":"2020","text":""}]}